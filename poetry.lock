[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.5", markers = "python_version < \"3.8\""}

[[package]]
name = "attrs"
version = "22.2.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
cov = ["attrs", "coverage-enable-subprocess", "coverage[toml] (>=5.3)"]
dev = ["attrs"]
docs = ["furo", "sphinx", "myst-parser", "zope.interface", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier"]
tests = ["attrs", "zope.interface"]
tests-no-zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]
tests_no_zope = ["hypothesis", "pympler", "pytest (>=4.3.0)", "pytest-xdist", "cloudpickle", "mypy (>=0.971,<0.990)", "pytest-mypy-plugins"]

[[package]]
name = "aws-requests-auth"
version = "0.4.3"
description = "AWS signature version 4 signing process for the python requests module"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=0.14.0"

[[package]]
name = "beautifulsoup4"
version = "4.11.2"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "boto3"
version = "1.26.69"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.29.69,<1.30.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.6.0,<0.7.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "boto3-stubs"
version = "1.18.23"
description = "Type annotations for boto3 1.18.23, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
botocore-stubs = "*"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.18.18)"]
acm = ["mypy-boto3-acm (>=1.18.18)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.18.18)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.18.18)"]
all = ["mypy-boto3-accessanalyzer (>=1.18.18)", "mypy-boto3-acm (>=1.18.18)", "mypy-boto3-acm-pca (>=1.18.18)", "mypy-boto3-alexaforbusiness (>=1.18.18)", "mypy-boto3-amp (>=1.18.18)", "mypy-boto3-amplify (>=1.18.18)", "mypy-boto3-amplifybackend (>=1.18.18)", "mypy-boto3-apigateway (>=1.18.18)", "mypy-boto3-apigatewaymanagementapi (>=1.18.18)", "mypy-boto3-apigatewayv2 (>=1.18.18)", "mypy-boto3-appconfig (>=1.18.18)", "mypy-boto3-appflow (>=1.18.18)", "mypy-boto3-appintegrations (>=1.18.18)", "mypy-boto3-application-autoscaling (>=1.18.18)", "mypy-boto3-application-insights (>=1.18.18)", "mypy-boto3-applicationcostprofiler (>=1.18.18)", "mypy-boto3-appmesh (>=1.18.18)", "mypy-boto3-apprunner (>=1.18.18)", "mypy-boto3-appstream (>=1.18.18)", "mypy-boto3-appsync (>=1.18.18)", "mypy-boto3-athena (>=1.18.18)", "mypy-boto3-auditmanager (>=1.18.18)", "mypy-boto3-autoscaling (>=1.18.18)", "mypy-boto3-autoscaling-plans (>=1.18.18)", "mypy-boto3-backup (>=1.18.18)", "mypy-boto3-batch (>=1.18.18)", "mypy-boto3-braket (>=1.18.18)", "mypy-boto3-budgets (>=1.18.18)", "mypy-boto3-ce (>=1.18.18)", "mypy-boto3-chime (>=1.18.18)", "mypy-boto3-chime-sdk-identity (>=1.18.18)", "mypy-boto3-chime-sdk-messaging (>=1.18.18)", "mypy-boto3-cloud9 (>=1.18.18)", "mypy-boto3-clouddirectory (>=1.18.18)", "mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-cloudfront (>=1.18.18)", "mypy-boto3-cloudhsm (>=1.18.18)", "mypy-boto3-cloudhsmv2 (>=1.18.18)", "mypy-boto3-cloudsearch (>=1.18.18)", "mypy-boto3-cloudsearchdomain (>=1.18.18)", "mypy-boto3-cloudtrail (>=1.18.18)", "mypy-boto3-cloudwatch (>=1.18.18)", "mypy-boto3-codeartifact (>=1.18.18)", "mypy-boto3-codebuild (>=1.18.18)", "mypy-boto3-codecommit (>=1.18.18)", "mypy-boto3-codedeploy (>=1.18.18)", "mypy-boto3-codeguru-reviewer (>=1.18.18)", "mypy-boto3-codeguruprofiler (>=1.18.18)", "mypy-boto3-codepipeline (>=1.18.18)", "mypy-boto3-codestar (>=1.18.18)", "mypy-boto3-codestar-connections (>=1.18.18)", "mypy-boto3-codestar-notifications (>=1.18.18)", "mypy-boto3-cognito-identity (>=1.18.18)", "mypy-boto3-cognito-idp (>=1.18.18)", "mypy-boto3-cognito-sync (>=1.18.18)", "mypy-boto3-comprehend (>=1.18.18)", "mypy-boto3-comprehendmedical (>=1.18.18)", "mypy-boto3-compute-optimizer (>=1.18.18)", "mypy-boto3-config (>=1.18.18)", "mypy-boto3-connect (>=1.18.18)", "mypy-boto3-connect-contact-lens (>=1.18.18)", "mypy-boto3-connectparticipant (>=1.18.18)", "mypy-boto3-cur (>=1.18.18)", "mypy-boto3-customer-profiles (>=1.18.18)", "mypy-boto3-databrew (>=1.18.18)", "mypy-boto3-dataexchange (>=1.18.18)", "mypy-boto3-datapipeline (>=1.18.18)", "mypy-boto3-datasync (>=1.18.18)", "mypy-boto3-dax (>=1.18.18)", "mypy-boto3-detective (>=1.18.18)", "mypy-boto3-devicefarm (>=1.18.18)", "mypy-boto3-devops-guru (>=1.18.18)", "mypy-boto3-directconnect (>=1.18.18)", "mypy-boto3-discovery (>=1.18.18)", "mypy-boto3-dlm (>=1.18.18)", "mypy-boto3-dms (>=1.18.18)", "mypy-boto3-docdb (>=1.18.18)", "mypy-boto3-ds (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-dynamodbstreams (>=1.18.18)", "mypy-boto3-ebs (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-ec2-instance-connect (>=1.18.18)", "mypy-boto3-ecr (>=1.18.18)", "mypy-boto3-ecr-public (>=1.18.18)", "mypy-boto3-ecs (>=1.18.18)", "mypy-boto3-efs (>=1.18.18)", "mypy-boto3-eks (>=1.18.18)", "mypy-boto3-elastic-inference (>=1.18.18)", "mypy-boto3-elasticache (>=1.18.18)", "mypy-boto3-elasticbeanstalk (>=1.18.18)", "mypy-boto3-elastictranscoder (>=1.18.18)", "mypy-boto3-elb (>=1.18.18)", "mypy-boto3-elbv2 (>=1.18.18)", "mypy-boto3-emr (>=1.18.18)", "mypy-boto3-emr-containers (>=1.18.18)", "mypy-boto3-es (>=1.18.18)", "mypy-boto3-events (>=1.18.18)", "mypy-boto3-finspace (>=1.18.18)", "mypy-boto3-finspace-data (>=1.18.18)", "mypy-boto3-firehose (>=1.18.18)", "mypy-boto3-fis (>=1.18.18)", "mypy-boto3-fms (>=1.18.18)", "mypy-boto3-forecast (>=1.18.18)", "mypy-boto3-forecastquery (>=1.18.18)", "mypy-boto3-frauddetector (>=1.18.18)", "mypy-boto3-fsx (>=1.18.18)", "mypy-boto3-gamelift (>=1.18.18)", "mypy-boto3-glacier (>=1.18.18)", "mypy-boto3-globalaccelerator (>=1.18.18)", "mypy-boto3-glue (>=1.18.18)", "mypy-boto3-greengrass (>=1.18.18)", "mypy-boto3-greengrassv2 (>=1.18.18)", "mypy-boto3-groundstation (>=1.18.18)", "mypy-boto3-guardduty (>=1.18.18)", "mypy-boto3-health (>=1.18.18)", "mypy-boto3-healthlake (>=1.18.18)", "mypy-boto3-honeycode (>=1.18.18)", "mypy-boto3-iam (>=1.18.18)", "mypy-boto3-identitystore (>=1.18.18)", "mypy-boto3-imagebuilder (>=1.18.18)", "mypy-boto3-importexport (>=1.18.18)", "mypy-boto3-inspector (>=1.18.18)", "mypy-boto3-iot (>=1.18.18)", "mypy-boto3-iot-data (>=1.18.18)", "mypy-boto3-iot-jobs-data (>=1.18.18)", "mypy-boto3-iot1click-devices (>=1.18.18)", "mypy-boto3-iot1click-projects (>=1.18.18)", "mypy-boto3-iotanalytics (>=1.18.18)", "mypy-boto3-iotdeviceadvisor (>=1.18.18)", "mypy-boto3-iotevents (>=1.18.18)", "mypy-boto3-iotevents-data (>=1.18.18)", "mypy-boto3-iotfleethub (>=1.18.18)", "mypy-boto3-iotsecuretunneling (>=1.18.18)", "mypy-boto3-iotsitewise (>=1.18.18)", "mypy-boto3-iotthingsgraph (>=1.18.18)", "mypy-boto3-iotwireless (>=1.18.18)", "mypy-boto3-ivs (>=1.18.18)", "mypy-boto3-kafka (>=1.18.18)", "mypy-boto3-kendra (>=1.18.18)", "mypy-boto3-kinesis (>=1.18.18)", "mypy-boto3-kinesis-video-archived-media (>=1.18.18)", "mypy-boto3-kinesis-video-media (>=1.18.18)", "mypy-boto3-kinesis-video-signaling (>=1.18.18)", "mypy-boto3-kinesisanalytics (>=1.18.18)", "mypy-boto3-kinesisanalyticsv2 (>=1.18.18)", "mypy-boto3-kinesisvideo (>=1.18.18)", "mypy-boto3-kms (>=1.18.18)", "mypy-boto3-lakeformation (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-lex-models (>=1.18.18)", "mypy-boto3-lex-runtime (>=1.18.18)", "mypy-boto3-lexv2-models (>=1.18.18)", "mypy-boto3-lexv2-runtime (>=1.18.18)", "mypy-boto3-license-manager (>=1.18.18)", "mypy-boto3-lightsail (>=1.18.18)", "mypy-boto3-location (>=1.18.18)", "mypy-boto3-logs (>=1.18.18)", "mypy-boto3-lookoutequipment (>=1.18.18)", "mypy-boto3-lookoutmetrics (>=1.18.18)", "mypy-boto3-lookoutvision (>=1.18.18)", "mypy-boto3-machinelearning (>=1.18.18)", "mypy-boto3-macie (>=1.18.18)", "mypy-boto3-macie2 (>=1.18.18)", "mypy-boto3-managedblockchain (>=1.18.18)", "mypy-boto3-marketplace-catalog (>=1.18.18)", "mypy-boto3-marketplace-entitlement (>=1.18.18)", "mypy-boto3-marketplacecommerceanalytics (>=1.18.18)", "mypy-boto3-mediaconnect (>=1.18.18)", "mypy-boto3-mediaconvert (>=1.18.18)", "mypy-boto3-medialive (>=1.18.18)", "mypy-boto3-mediapackage (>=1.18.18)", "mypy-boto3-mediapackage-vod (>=1.18.18)", "mypy-boto3-mediastore (>=1.18.18)", "mypy-boto3-mediastore-data (>=1.18.18)", "mypy-boto3-mediatailor (>=1.18.18)", "mypy-boto3-meteringmarketplace (>=1.18.18)", "mypy-boto3-mgh (>=1.18.18)", "mypy-boto3-mgn (>=1.18.18)", "mypy-boto3-migrationhub-config (>=1.18.18)", "mypy-boto3-mobile (>=1.18.18)", "mypy-boto3-mq (>=1.18.18)", "mypy-boto3-mturk (>=1.18.18)", "mypy-boto3-mwaa (>=1.18.18)", "mypy-boto3-neptune (>=1.18.18)", "mypy-boto3-network-firewall (>=1.18.18)", "mypy-boto3-networkmanager (>=1.18.18)", "mypy-boto3-nimble (>=1.18.18)", "mypy-boto3-opsworks (>=1.18.18)", "mypy-boto3-opsworkscm (>=1.18.18)", "mypy-boto3-organizations (>=1.18.18)", "mypy-boto3-outposts (>=1.18.18)", "mypy-boto3-personalize (>=1.18.18)", "mypy-boto3-personalize-events (>=1.18.18)", "mypy-boto3-personalize-runtime (>=1.18.18)", "mypy-boto3-pi (>=1.18.18)", "mypy-boto3-pinpoint (>=1.18.18)", "mypy-boto3-pinpoint-email (>=1.18.18)", "mypy-boto3-pinpoint-sms-voice (>=1.18.18)", "mypy-boto3-polly (>=1.18.18)", "mypy-boto3-pricing (>=1.18.18)", "mypy-boto3-proton (>=1.18.18)", "mypy-boto3-qldb (>=1.18.18)", "mypy-boto3-qldb-session (>=1.18.18)", "mypy-boto3-quicksight (>=1.18.18)", "mypy-boto3-ram (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-rds-data (>=1.18.18)", "mypy-boto3-redshift (>=1.18.18)", "mypy-boto3-redshift-data (>=1.18.18)", "mypy-boto3-rekognition (>=1.18.18)", "mypy-boto3-resource-groups (>=1.18.18)", "mypy-boto3-resourcegroupstaggingapi (>=1.18.18)", "mypy-boto3-robomaker (>=1.18.18)", "mypy-boto3-route53 (>=1.18.18)", "mypy-boto3-route53-recovery-cluster (>=1.18.18)", "mypy-boto3-route53-recovery-control-config (>=1.18.18)", "mypy-boto3-route53-recovery-readiness (>=1.18.18)", "mypy-boto3-route53domains (>=1.18.18)", "mypy-boto3-route53resolver (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-s3control (>=1.18.18)", "mypy-boto3-s3outposts (>=1.18.18)", "mypy-boto3-sagemaker (>=1.18.18)", "mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)", "mypy-boto3-sagemaker-edge (>=1.18.18)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)", "mypy-boto3-sagemaker-runtime (>=1.18.18)", "mypy-boto3-savingsplans (>=1.18.18)", "mypy-boto3-schemas (>=1.18.18)", "mypy-boto3-sdb (>=1.18.18)", "mypy-boto3-secretsmanager (>=1.18.18)", "mypy-boto3-securityhub (>=1.18.18)", "mypy-boto3-serverlessrepo (>=1.18.18)", "mypy-boto3-service-quotas (>=1.18.18)", "mypy-boto3-servicecatalog (>=1.18.18)", "mypy-boto3-servicecatalog-appregistry (>=1.18.18)", "mypy-boto3-servicediscovery (>=1.18.18)", "mypy-boto3-ses (>=1.18.18)", "mypy-boto3-sesv2 (>=1.18.18)", "mypy-boto3-shield (>=1.18.18)", "mypy-boto3-signer (>=1.18.18)", "mypy-boto3-sms (>=1.18.18)", "mypy-boto3-sms-voice (>=1.18.18)", "mypy-boto3-snow-device-management (>=1.18.18)", "mypy-boto3-snowball (>=1.18.18)", "mypy-boto3-sns (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)", "mypy-boto3-ssm (>=1.18.18)", "mypy-boto3-ssm-contacts (>=1.18.18)", "mypy-boto3-ssm-incidents (>=1.18.18)", "mypy-boto3-sso (>=1.18.18)", "mypy-boto3-sso-admin (>=1.18.18)", "mypy-boto3-sso-oidc (>=1.18.18)", "mypy-boto3-stepfunctions (>=1.18.18)", "mypy-boto3-storagegateway (>=1.18.18)", "mypy-boto3-sts (>=1.18.18)", "mypy-boto3-support (>=1.18.18)", "mypy-boto3-swf (>=1.18.18)", "mypy-boto3-synthetics (>=1.18.18)", "mypy-boto3-textract (>=1.18.18)", "mypy-boto3-timestream-query (>=1.18.18)", "mypy-boto3-timestream-write (>=1.18.18)", "mypy-boto3-transcribe (>=1.18.18)", "mypy-boto3-transfer (>=1.18.18)", "mypy-boto3-translate (>=1.18.18)", "mypy-boto3-waf (>=1.18.18)", "mypy-boto3-waf-regional (>=1.18.18)", "mypy-boto3-wafv2 (>=1.18.18)", "mypy-boto3-wellarchitected (>=1.18.18)", "mypy-boto3-workdocs (>=1.18.18)", "mypy-boto3-worklink (>=1.18.18)", "mypy-boto3-workmail (>=1.18.18)", "mypy-boto3-workmailmessageflow (>=1.18.18)", "mypy-boto3-workspaces (>=1.18.18)", "mypy-boto3-xray (>=1.18.18)"]
amp = ["mypy-boto3-amp (>=1.18.18)"]
amplify = ["mypy-boto3-amplify (>=1.18.18)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.18.18)"]
apigateway = ["mypy-boto3-apigateway (>=1.18.18)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.18.18)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.18.18)"]
appconfig = ["mypy-boto3-appconfig (>=1.18.18)"]
appflow = ["mypy-boto3-appflow (>=1.18.18)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.18.18)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.18.18)"]
application-insights = ["mypy-boto3-application-insights (>=1.18.18)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.18.18)"]
appmesh = ["mypy-boto3-appmesh (>=1.18.18)"]
apprunner = ["mypy-boto3-apprunner (>=1.18.18)"]
appstream = ["mypy-boto3-appstream (>=1.18.18)"]
appsync = ["mypy-boto3-appsync (>=1.18.18)"]
athena = ["mypy-boto3-athena (>=1.18.18)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.18.18)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.18.18)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.18.18)"]
backup = ["mypy-boto3-backup (>=1.18.18)"]
batch = ["mypy-boto3-batch (>=1.18.18)"]
braket = ["mypy-boto3-braket (>=1.18.18)"]
budgets = ["mypy-boto3-budgets (>=1.18.18)"]
ce = ["mypy-boto3-ce (>=1.18.18)"]
chime = ["mypy-boto3-chime (>=1.18.18)"]
chime-sdk-identity = ["mypy-boto3-chime-sdk-identity (>=1.18.18)"]
chime-sdk-messaging = ["mypy-boto3-chime-sdk-messaging (>=1.18.18)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.18.18)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.18.18)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.18.18)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.18.18)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.18.18)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.18.18)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.18.18)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.18.18)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.18.18)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.18.18)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.18.18)"]
codebuild = ["mypy-boto3-codebuild (>=1.18.18)"]
codecommit = ["mypy-boto3-codecommit (>=1.18.18)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.18.18)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.18.18)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.18.18)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.18.18)"]
codestar = ["mypy-boto3-codestar (>=1.18.18)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.18.18)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.18.18)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.18.18)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.18.18)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.18.18)"]
comprehend = ["mypy-boto3-comprehend (>=1.18.18)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.18.18)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.18.18)"]
config = ["mypy-boto3-config (>=1.18.18)"]
connect = ["mypy-boto3-connect (>=1.18.18)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.18.18)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.18.18)"]
cur = ["mypy-boto3-cur (>=1.18.18)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.18.18)"]
databrew = ["mypy-boto3-databrew (>=1.18.18)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.18.18)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.18.18)"]
datasync = ["mypy-boto3-datasync (>=1.18.18)"]
dax = ["mypy-boto3-dax (>=1.18.18)"]
detective = ["mypy-boto3-detective (>=1.18.18)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.18.18)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.18.18)"]
directconnect = ["mypy-boto3-directconnect (>=1.18.18)"]
discovery = ["mypy-boto3-discovery (>=1.18.18)"]
dlm = ["mypy-boto3-dlm (>=1.18.18)"]
dms = ["mypy-boto3-dms (>=1.18.18)"]
docdb = ["mypy-boto3-docdb (>=1.18.18)"]
ds = ["mypy-boto3-ds (>=1.18.18)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.18.18)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.18.18)"]
ebs = ["mypy-boto3-ebs (>=1.18.18)"]
ec2 = ["mypy-boto3-ec2 (>=1.18.18)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.18.18)"]
ecr = ["mypy-boto3-ecr (>=1.18.18)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.18.18)"]
ecs = ["mypy-boto3-ecs (>=1.18.18)"]
efs = ["mypy-boto3-efs (>=1.18.18)"]
eks = ["mypy-boto3-eks (>=1.18.18)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.18.18)"]
elasticache = ["mypy-boto3-elasticache (>=1.18.18)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.18.18)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.18.18)"]
elb = ["mypy-boto3-elb (>=1.18.18)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.18.18)"]
emr = ["mypy-boto3-emr (>=1.18.18)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.18.18)"]
es = ["mypy-boto3-es (>=1.18.18)"]
essential = ["mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)"]
events = ["mypy-boto3-events (>=1.18.18)"]
finspace = ["mypy-boto3-finspace (>=1.18.18)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.18.18)"]
firehose = ["mypy-boto3-firehose (>=1.18.18)"]
fis = ["mypy-boto3-fis (>=1.18.18)"]
fms = ["mypy-boto3-fms (>=1.18.18)"]
forecast = ["mypy-boto3-forecast (>=1.18.18)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.18.18)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.18.18)"]
fsx = ["mypy-boto3-fsx (>=1.18.18)"]
gamelift = ["mypy-boto3-gamelift (>=1.18.18)"]
glacier = ["mypy-boto3-glacier (>=1.18.18)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.18.18)"]
glue = ["mypy-boto3-glue (>=1.18.18)"]
greengrass = ["mypy-boto3-greengrass (>=1.18.18)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.18.18)"]
groundstation = ["mypy-boto3-groundstation (>=1.18.18)"]
guardduty = ["mypy-boto3-guardduty (>=1.18.18)"]
health = ["mypy-boto3-health (>=1.18.18)"]
healthlake = ["mypy-boto3-healthlake (>=1.18.18)"]
honeycode = ["mypy-boto3-honeycode (>=1.18.18)"]
iam = ["mypy-boto3-iam (>=1.18.18)"]
identitystore = ["mypy-boto3-identitystore (>=1.18.18)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.18.18)"]
importexport = ["mypy-boto3-importexport (>=1.18.18)"]
inspector = ["mypy-boto3-inspector (>=1.18.18)"]
iot = ["mypy-boto3-iot (>=1.18.18)"]
iot-data = ["mypy-boto3-iot-data (>=1.18.18)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.18.18)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.18.18)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.18.18)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.18.18)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.18.18)"]
iotevents = ["mypy-boto3-iotevents (>=1.18.18)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.18.18)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.18.18)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.18.18)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.18.18)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.18.18)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.18.18)"]
ivs = ["mypy-boto3-ivs (>=1.18.18)"]
kafka = ["mypy-boto3-kafka (>=1.18.18)"]
kendra = ["mypy-boto3-kendra (>=1.18.18)"]
kinesis = ["mypy-boto3-kinesis (>=1.18.18)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.18.18)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.18.18)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.18.18)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.18.18)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.18.18)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.18.18)"]
kms = ["mypy-boto3-kms (>=1.18.18)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.18.18)"]
lambda = ["mypy-boto3-lambda (>=1.18.18)"]
lex-models = ["mypy-boto3-lex-models (>=1.18.18)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.18.18)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.18.18)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.18.18)"]
license-manager = ["mypy-boto3-license-manager (>=1.18.18)"]
lightsail = ["mypy-boto3-lightsail (>=1.18.18)"]
location = ["mypy-boto3-location (>=1.18.18)"]
logs = ["mypy-boto3-logs (>=1.18.18)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.18.18)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.18.18)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.18.18)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.18.18)"]
macie = ["mypy-boto3-macie (>=1.18.18)"]
macie2 = ["mypy-boto3-macie2 (>=1.18.18)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.18.18)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.18.18)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.18.18)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.18.18)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.18.18)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.18.18)"]
medialive = ["mypy-boto3-medialive (>=1.18.18)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.18.18)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.18.18)"]
mediastore = ["mypy-boto3-mediastore (>=1.18.18)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.18.18)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.18.18)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.18.18)"]
mgh = ["mypy-boto3-mgh (>=1.18.18)"]
mgn = ["mypy-boto3-mgn (>=1.18.18)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.18.18)"]
mobile = ["mypy-boto3-mobile (>=1.18.18)"]
mq = ["mypy-boto3-mq (>=1.18.18)"]
mturk = ["mypy-boto3-mturk (>=1.18.18)"]
mwaa = ["mypy-boto3-mwaa (>=1.18.18)"]
neptune = ["mypy-boto3-neptune (>=1.18.18)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.18.18)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.18.18)"]
nimble = ["mypy-boto3-nimble (>=1.18.18)"]
opsworks = ["mypy-boto3-opsworks (>=1.18.18)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.18.18)"]
organizations = ["mypy-boto3-organizations (>=1.18.18)"]
outposts = ["mypy-boto3-outposts (>=1.18.18)"]
personalize = ["mypy-boto3-personalize (>=1.18.18)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.18.18)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.18.18)"]
pi = ["mypy-boto3-pi (>=1.18.18)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.18.18)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.18.18)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.18.18)"]
polly = ["mypy-boto3-polly (>=1.18.18)"]
pricing = ["mypy-boto3-pricing (>=1.18.18)"]
proton = ["mypy-boto3-proton (>=1.18.18)"]
qldb = ["mypy-boto3-qldb (>=1.18.18)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.18.18)"]
quicksight = ["mypy-boto3-quicksight (>=1.18.18)"]
ram = ["mypy-boto3-ram (>=1.18.18)"]
rds = ["mypy-boto3-rds (>=1.18.18)"]
rds-data = ["mypy-boto3-rds-data (>=1.18.18)"]
redshift = ["mypy-boto3-redshift (>=1.18.18)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.18.18)"]
rekognition = ["mypy-boto3-rekognition (>=1.18.18)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.18.18)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.18.18)"]
robomaker = ["mypy-boto3-robomaker (>=1.18.18)"]
route53 = ["mypy-boto3-route53 (>=1.18.18)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.18.18)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.18.18)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.18.18)"]
route53domains = ["mypy-boto3-route53domains (>=1.18.18)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.18.18)"]
s3 = ["mypy-boto3-s3 (>=1.18.18)"]
s3control = ["mypy-boto3-s3control (>=1.18.18)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.18.18)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.18.18)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.18.18)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.18.18)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.18.18)"]
schemas = ["mypy-boto3-schemas (>=1.18.18)"]
sdb = ["mypy-boto3-sdb (>=1.18.18)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.18.18)"]
securityhub = ["mypy-boto3-securityhub (>=1.18.18)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.18.18)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.18.18)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.18.18)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.18.18)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.18.18)"]
ses = ["mypy-boto3-ses (>=1.18.18)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.18.18)"]
shield = ["mypy-boto3-shield (>=1.18.18)"]
signer = ["mypy-boto3-signer (>=1.18.18)"]
sms = ["mypy-boto3-sms (>=1.18.18)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.18.18)"]
snow-device-management = ["mypy-boto3-snow-device-management (>=1.18.18)"]
snowball = ["mypy-boto3-snowball (>=1.18.18)"]
sns = ["mypy-boto3-sns (>=1.18.18)"]
sqs = ["mypy-boto3-sqs (>=1.18.18)"]
ssm = ["mypy-boto3-ssm (>=1.18.18)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.18.18)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.18.18)"]
sso = ["mypy-boto3-sso (>=1.18.18)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.18.18)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.18.18)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.18.18)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.18.18)"]
sts = ["mypy-boto3-sts (>=1.18.18)"]
support = ["mypy-boto3-support (>=1.18.18)"]
swf = ["mypy-boto3-swf (>=1.18.18)"]
synthetics = ["mypy-boto3-synthetics (>=1.18.18)"]
textract = ["mypy-boto3-textract (>=1.18.18)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.18.18)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.18.18)"]
transcribe = ["mypy-boto3-transcribe (>=1.18.18)"]
transfer = ["mypy-boto3-transfer (>=1.18.18)"]
translate = ["mypy-boto3-translate (>=1.18.18)"]
waf = ["mypy-boto3-waf (>=1.18.18)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.18.18)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.18.18)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.18.18)"]
workdocs = ["mypy-boto3-workdocs (>=1.18.18)"]
worklink = ["mypy-boto3-worklink (>=1.18.18)"]
workmail = ["mypy-boto3-workmail (>=1.18.18)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.18.18)"]
workspaces = ["mypy-boto3-workspaces (>=1.18.18)"]
xray = ["mypy-boto3-xray (>=1.18.18)"]

[[package]]
name = "botocore"
version = "1.29.69"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.16.9)"]

[[package]]
name = "botocore-stubs"
version = "1.21.22"
description = "Type annotations for botocore 1.21.22, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "certifi"
version = "2022.12.7"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "3.0.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coverage"
version = "6.5.0"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "coveralls"
version = "3.3.1"
description = "Show coverage stats online via coveralls.io"
category = "dev"
optional = false
python-versions = ">= 3.5"

[package.dependencies]
coverage = ">=4.1,<6.0.0 || >6.1,<6.1.1 || >6.1.1,<7.0"
docopt = ">=0.6.1"
requests = ">=1.0.0"

[package.extras]
yaml = ["PyYAML (>=3.10)"]

[[package]]
name = "docker"
version = "4.4.4"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
pywin32 = {version = "227", markers = "sys_platform == \"win32\""}
requests = ">=2.14.2,<2.18.0 || >2.18.0"
six = ">=1.4.0"
websocket-client = ">=0.32.0"

[package.extras]
ssh = ["paramiko (>=2.4.2)"]
tls = ["pyOpenSSL (>=17.5.0)", "cryptography (>=1.3.4)", "idna (>=2.0.0)"]

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "elasticsearch"
version = "7.13.4"
description = "Python client for Elasticsearch"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[package.dependencies]
certifi = "*"
urllib3 = ">=1.21.1,<2"

[package.extras]
async = ["aiohttp (>=3,<4)"]
develop = ["requests (>=2.0.0,<3.0.0)", "coverage", "mock", "pyyaml", "pytest", "pytest-cov", "sphinx (<1.7)", "sphinx-rtd-theme", "black", "jinja2"]
docs = ["sphinx (<1.7)", "sphinx-rtd-theme"]
requests = ["requests (>=2.4.0,<3.0.0)"]

[[package]]
name = "exceptiongroup"
version = "1.1.0"
description = "Backport of PEP 654 (exception groups)"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "flake8"
version = "5.0.4"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
importlib-metadata = {version = ">=1.1.0,<4.3", markers = "python_version < \"3.8\""}
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.9.0,<2.10.0"
pyflakes = ">=2.5.0,<2.6.0"

[[package]]
name = "flaky"
version = "3.7.0"
description = "Plugin for nose or pytest that automatically reruns flaky tests."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "gitdb"
version = "4.0.10"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.30"
description = "GitPython is a python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"
typing-extensions = {version = ">=3.7.4.3", markers = "python_version < \"3.8\""}

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.2.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
name = "iniconfig"
version = "2.0.0"
description = "brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mirakuru"
version = "2.4.2"
description = "Process executor (not only) for tests."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
psutil = {version = ">=4.0.0", markers = "sys_platform != \"cygwin\""}

[package.extras]
tests = ["pytest", "pytest-cov", "python-daemon"]

[[package]]
name = "opensearch-py"
version = "2.1.1"
description = "Python low-level client for OpenSearch"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[package.dependencies]
certifi = "*"
requests = ">=2.4.0,<3.0.0"
urllib3 = ">=1.21.1,<2"

[package.extras]
async = ["aiohttp (>=3,<4)"]
develop = ["requests (>=2.0.0,<3.0.0)", "coverage", "mock", "pyyaml", "pytest", "pytest-cov", "sphinx", "sphinx-rtd-theme", "myst-parser", "sphinx-copybutton", "black", "jinja2", "botocore"]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser", "sphinx-copybutton"]
kerberos = ["requests-kerberos"]

[[package]]
name = "packaging"
version = "23.0"
description = "Core utilities for Python packages"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "port-for"
version = "0.6.3"
description = "Utility that helps with local TCP ports management. It can find an unused TCP localhost port and remember the association."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "psutil"
version = "5.9.4"
description = "Cross-platform lib for process and system monitoring in Python."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "pycodestyle"
version = "2.9.1"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyflakes"
version = "2.5.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyjwt"
version = "2.6.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.4.0)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "pre-commit"]
docs = ["sphinx (>=4.5.0,<5.0.0)", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pytest"
version = "7.2.1"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
exceptiongroup = {version = ">=1.0.0rc8", markers = "python_version < \"3.11\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "4.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytest-mock"
version = "3.10.0"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
name = "pytest-redis"
version = "2.4.0"
description = "Redis fixtures and fixture factories for Pytest."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
mirakuru = "*"
port-for = ">=0.6.0"
pytest = ">=6.2.0"
redis = "*"

[package.extras]
tests = ["pytest-cov", "pytest-xdist", "mock"]

[[package]]
name = "pytest-runner"
version = "6.0.0"
description = "Invoke py.test as distutils command with dependency resolution"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-virtualenv", "types-setuptools", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.7.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "227"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "redis"
version = "4.5.1"
description = "Python client for Redis database and key-value store"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
async-timeout = ">=4.0.2"
importlib-metadata = {version = ">=1.0", markers = "python_version < \"3.8\""}
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
hiredis = ["hiredis (>=1.0.0)"]
ocsp = ["cryptography (>=36.0.1)", "pyopenssl (==20.0.1)", "requests (>=2.26.0)"]

[[package]]
name = "requests"
version = "2.28.2"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = false
python-versions = "*"

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "s3transfer"
version = "0.6.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "structlog"
version = "19.2.0"
description = "Structured Logging for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "pytest-azurepipelines", "python-rapidjson"]
dev = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "sphinx", "twisted", "pre-commit", "python-rapidjson"]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "python-rapidjson"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "typing-extensions"
version = "4.4.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.14"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "waitress"
version = "2.1.2"
description = "Waitress WSGI server"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.9)"]
testing = ["pytest", "pytest-cover", "coverage (>=5.0)"]

[[package]]
name = "webob"
version = "1.8.7"
description = "WSGI request and response object"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["pytest (>=3.1.0)", "coverage", "pytest-cov", "pytest-xdist"]

[[package]]
name = "websocket-client"
version = "1.5.1"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["Sphinx (>=3.4)", "sphinx-rtd-theme (>=0.5)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
name = "webtest"
version = "2.0.35"
description = "Helper to test WSGI applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
beautifulsoup4 = "*"
six = "*"
waitress = ">=0.8.5"
WebOb = ">=1.2"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.8)"]
tests = ["nose (<1.3.0)", "coverage", "mock", "pastedeploy", "wsgiproxy2", "pyquery"]

[[package]]
name = "zipp"
version = "3.13.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "jaraco.functools", "more-itertools", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pytest-flake8"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.7,<3.10"
content-hash = "9c322ff9a1e1bfb3e438693212a4a903e9fa2c0b3e3770801d990868b1b3f6ab"

[metadata.files]
async-timeout = [
    {file = "async-timeout-4.0.2.tar.gz", hash = "sha256:2163e1640ddb52b7a8c80d0a67a08587e5d245cc9c553a74a847056bc2976b15"},
    {file = "async_timeout-4.0.2-py3-none-any.whl", hash = "sha256:8ca1e4fcf50d07413d66d1a5e416e42cfdf5851c981d679a09851a6853383b3c"},
]
attrs = [
    {file = "attrs-22.2.0-py3-none-any.whl", hash = "sha256:29e95c7f6778868dbd49170f98f8818f78f3dc5e0e37c0b1f474e3561b240836"},
    {file = "attrs-22.2.0.tar.gz", hash = "sha256:c9227bfc2f01993c03f68db37d1d15c9690188323c067c641f1a35ca58185f99"},
]
aws-requests-auth = [
    {file = "aws-requests-auth-0.4.3.tar.gz", hash = "sha256:33593372018b960a31dbbe236f89421678b885c35f0b6a7abfae35bb77e069b2"},
    {file = "aws_requests_auth-0.4.3-py2.py3-none-any.whl", hash = "sha256:646bc37d62140ea1c709d20148f5d43197e6bd2d63909eb36fa4bb2345759977"},
]
beautifulsoup4 = [
    {file = "beautifulsoup4-4.11.2-py3-none-any.whl", hash = "sha256:0e79446b10b3ecb499c1556f7e228a53e64a2bfcebd455f370d8927cb5b59e39"},
    {file = "beautifulsoup4-4.11.2.tar.gz", hash = "sha256:bc4bdda6717de5a2987436fb8d72f45dc90dd856bdfd512a1314ce90349a0106"},
]
boto3 = [
    {file = "boto3-1.26.69-py3-none-any.whl", hash = "sha256:9a0a29179957cb26fa8c3c1fddf66b18efaeaf633e08db5fb53815ffb0421419"},
    {file = "boto3-1.26.69.tar.gz", hash = "sha256:eb8cde24a4c5755c35126e8cd460e6b51c63d04292419e7e95721232720c7e5b"},
]
boto3-stubs = [
    {file = "boto3-stubs-1.18.23.tar.gz", hash = "sha256:38915f107b36160ff2ba749fdb0de49d6dca4214fb16564d4f31f22f4f25099c"},
    {file = "boto3_stubs-1.18.23-py3-none-any.whl", hash = "sha256:4bed5a3aa0a3c9516791b22e9cd0aba7b93dd4d30669fc032118568bcf678a36"},
]
botocore = [
    {file = "botocore-1.29.69-py3-none-any.whl", hash = "sha256:2a4ab8bcb3177daa425019e125c09996b9a6a1a62bb0baaaeeb86ffd552719cc"},
    {file = "botocore-1.29.69.tar.gz", hash = "sha256:7e1bebca013544fbc298cb58603bfccd5f71b49c720a5c33c07cf5dfc8145a1f"},
]
botocore-stubs = [
    {file = "botocore-stubs-1.21.22.tar.gz", hash = "sha256:10d97e57cd79c66b6b78fe0fcac3ab22e421af222c03e93afe3d05bdb5dadc48"},
    {file = "botocore_stubs-1.21.22-py3-none-any.whl", hash = "sha256:41ce3ad97ffe04c07a7939367d47aa6a049f4e939e184433f44f03e7149a2920"},
]
certifi = [
    {file = "certifi-2022.12.7-py3-none-any.whl", hash = "sha256:4ad3232f5e926d6718ec31cfc1fcadfde020920e278684144551c91769c7bc18"},
    {file = "certifi-2022.12.7.tar.gz", hash = "sha256:35824b4c3a97115964b408844d64aa14db1cc518f6562e8d7261699d1350a9e3"},
]
charset-normalizer = [
    {file = "charset-normalizer-3.0.1.tar.gz", hash = "sha256:ebea339af930f8ca5d7a699b921106c6e29c617fe9606fa7baa043c1cdae326f"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:88600c72ef7587fe1708fd242b385b6ed4b8904976d5da0893e31df8b3480cb6"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:c75ffc45f25324e68ab238cb4b5c0a38cd1c3d7f1fb1f72b5541de469e2247db"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:db72b07027db150f468fbada4d85b3b2729a3db39178abf5c543b784c1254539"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:62595ab75873d50d57323a91dd03e6966eb79c41fa834b7a1661ed043b2d404d"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ff6f3db31555657f3163b15a6b7c6938d08df7adbfc9dd13d9d19edad678f1e8"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:772b87914ff1152b92a197ef4ea40efe27a378606c39446ded52c8f80f79702e"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:70990b9c51340e4044cfc394a81f614f3f90d41397104d226f21e66de668730d"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:292d5e8ba896bbfd6334b096e34bffb56161c81408d6d036a7dfa6929cff8783"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:2edb64ee7bf1ed524a1da60cdcd2e1f6e2b4f66ef7c077680739f1641f62f555"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:31a9ddf4718d10ae04d9b18801bd776693487cbb57d74cc3458a7673f6f34639"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:44ba614de5361b3e5278e1241fda3dc1838deed864b50a10d7ce92983797fa76"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:12db3b2c533c23ab812c2b25934f60383361f8a376ae272665f8e48b88e8e1c6"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c512accbd6ff0270939b9ac214b84fb5ada5f0409c44298361b2f5e13f9aed9e"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-win32.whl", hash = "sha256:502218f52498a36d6bf5ea77081844017bf7982cdbe521ad85e64cabee1b608b"},
    {file = "charset_normalizer-3.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:601f36512f9e28f029d9481bdaf8e89e5148ac5d89cffd3b05cd533eeb423b59"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:0298eafff88c99982a4cf66ba2efa1128e4ddaca0b05eec4c456bbc7db691d8d"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:a8d0fc946c784ff7f7c3742310cc8a57c5c6dc31631269876a88b809dbeff3d3"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:87701167f2a5c930b403e9756fab1d31d4d4da52856143b609e30a1ce7160f3c"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:14e76c0f23218b8f46c4d87018ca2e441535aed3632ca134b10239dfb6dadd6b"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0c0a590235ccd933d9892c627dec5bc7511ce6ad6c1011fdf5b11363022746c1"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8c7fe7afa480e3e82eed58e0ca89f751cd14d767638e2550c77a92a9e749c317"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:79909e27e8e4fcc9db4addea88aa63f6423ebb171db091fb4373e3312cb6d603"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:8ac7b6a045b814cf0c47f3623d21ebd88b3e8cf216a14790b455ea7ff0135d18"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:72966d1b297c741541ca8cf1223ff262a6febe52481af742036a0b296e35fa5a"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:f9d0c5c045a3ca9bedfc35dca8526798eb91a07aa7a2c0fee134c6c6f321cbd7"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:5995f0164fa7df59db4746112fec3f49c461dd6b31b841873443bdb077c13cfc"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:4a8fcf28c05c1f6d7e177a9a46a1c52798bfe2ad80681d275b10dcf317deaf0b"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:761e8904c07ad053d285670f36dd94e1b6ab7f16ce62b9805c475b7aa1cffde6"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-win32.whl", hash = "sha256:71140351489970dfe5e60fc621ada3e0f41104a5eddaca47a7acb3c1b851d6d3"},
    {file = "charset_normalizer-3.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:9ab77acb98eba3fd2a85cd160851816bfce6871d944d885febf012713f06659c"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:84c3990934bae40ea69a82034912ffe5a62c60bbf6ec5bc9691419641d7d5c9a"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:74292fc76c905c0ef095fe11e188a32ebd03bc38f3f3e9bcb85e4e6db177b7ea"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c95a03c79bbe30eec3ec2b7f076074f4281526724c8685a42872974ef4d36b72"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f4c39b0e3eac288fedc2b43055cfc2ca7a60362d0e5e87a637beac5d801ef478"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:df2c707231459e8a4028eabcd3cfc827befd635b3ef72eada84ab13b52e1574d"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:93ad6d87ac18e2a90b0fe89df7c65263b9a99a0eb98f0a3d2e079f12a0735837"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-musllinux_1_1_aarch64.whl", hash = "sha256:59e5686dd847347e55dffcc191a96622f016bc0ad89105e24c14e0d6305acbc6"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-musllinux_1_1_i686.whl", hash = "sha256:cd6056167405314a4dc3c173943f11249fa0f1b204f8b51ed4bde1a9cd1834dc"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-musllinux_1_1_ppc64le.whl", hash = "sha256:083c8d17153ecb403e5e1eb76a7ef4babfc2c48d58899c98fcaa04833e7a2f9a"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-musllinux_1_1_s390x.whl", hash = "sha256:f5057856d21e7586765171eac8b9fc3f7d44ef39425f85dbcccb13b3ebea806c"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-musllinux_1_1_x86_64.whl", hash = "sha256:7eb33a30d75562222b64f569c642ff3dc6689e09adda43a082208397f016c39a"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-win32.whl", hash = "sha256:95dea361dd73757c6f1c0a1480ac499952c16ac83f7f5f4f84f0658a01b8ef41"},
    {file = "charset_normalizer-3.0.1-cp36-cp36m-win_amd64.whl", hash = "sha256:eaa379fcd227ca235d04152ca6704c7cb55564116f8bc52545ff357628e10602"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:3e45867f1f2ab0711d60c6c71746ac53537f1684baa699f4f668d4c6f6ce8e14"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cadaeaba78750d58d3cc6ac4d1fd867da6fc73c88156b7a3212a3cd4819d679d"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:911d8a40b2bef5b8bbae2e36a0b103f142ac53557ab421dc16ac4aafee6f53dc"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:503e65837c71b875ecdd733877d852adbc465bd82c768a067badd953bf1bc5a3"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a60332922359f920193b1d4826953c507a877b523b2395ad7bc716ddd386d866"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:16a8663d6e281208d78806dbe14ee9903715361cf81f6d4309944e4d1e59ac5b"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:a16418ecf1329f71df119e8a65f3aa68004a3f9383821edcb20f0702934d8087"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:9d9153257a3f70d5f69edf2325357251ed20f772b12e593f3b3377b5f78e7ef8"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:02a51034802cbf38db3f89c66fb5d2ec57e6fe7ef2f4a44d070a593c3688667b"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:2e396d70bc4ef5325b72b593a72c8979999aa52fb8bcf03f701c1b03e1166918"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:11b53acf2411c3b09e6af37e4b9005cba376c872503c8f28218c7243582df45d"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-win32.whl", hash = "sha256:0bf2dae5291758b6f84cf923bfaa285632816007db0330002fa1de38bfcb7154"},
    {file = "charset_normalizer-3.0.1-cp37-cp37m-win_amd64.whl", hash = "sha256:2c03cc56021a4bd59be889c2b9257dae13bf55041a3372d3295416f86b295fb5"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:024e606be3ed92216e2b6952ed859d86b4cfa52cd5bc5f050e7dc28f9b43ec42"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:4b0d02d7102dd0f997580b51edc4cebcf2ab6397a7edf89f1c73b586c614272c"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:358a7c4cb8ba9b46c453b1dd8d9e431452d5249072e4f56cfda3149f6ab1405e"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:81d6741ab457d14fdedc215516665050f3822d3e56508921cc7239f8c8e66a58"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:8b8af03d2e37866d023ad0ddea594edefc31e827fee64f8de5611a1dbc373174"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9cf4e8ad252f7c38dd1f676b46514f92dc0ebeb0db5552f5f403509705e24753"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:e696f0dd336161fca9adbb846875d40752e6eba585843c768935ba5c9960722b"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:c22d3fe05ce11d3671297dc8973267daa0f938b93ec716e12e0f6dee81591dc1"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:109487860ef6a328f3eec66f2bf78b0b72400280d8f8ea05f69c51644ba6521a"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:37f8febc8ec50c14f3ec9637505f28e58d4f66752207ea177c1d67df25da5aed"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:f97e83fa6c25693c7a35de154681fcc257c1c41b38beb0304b9c4d2d9e164479"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:a152f5f33d64a6be73f1d30c9cc82dfc73cec6477ec268e7c6e4c7d23c2d2291"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:39049da0ffb96c8cbb65cbf5c5f3ca3168990adf3551bd1dee10c48fce8ae820"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-win32.whl", hash = "sha256:4457ea6774b5611f4bed5eaa5df55f70abde42364d498c5134b7ef4c6958e20e"},
    {file = "charset_normalizer-3.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:e62164b50f84e20601c1ff8eb55620d2ad25fb81b59e3cd776a1902527a788af"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8eade758719add78ec36dc13201483f8e9b5d940329285edcd5f70c0a9edbd7f"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:8499ca8f4502af841f68135133d8258f7b32a53a1d594aa98cc52013fff55678"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3fc1c4a2ffd64890aebdb3f97e1278b0cc72579a08ca4de8cd2c04799a3a22be"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:00d3ffdaafe92a5dc603cb9bd5111aaa36dfa187c8285c543be562e61b755f6b"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c2ac1b08635a8cd4e0cbeaf6f5e922085908d48eb05d44c5ae9eabab148512ca"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f6f45710b4459401609ebebdbcfb34515da4fc2aa886f95107f556ac69a9147e"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3ae1de54a77dc0d6d5fcf623290af4266412a7c4be0b1ff7444394f03f5c54e3"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:3b590df687e3c5ee0deef9fc8c547d81986d9a1b56073d82de008744452d6541"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab5de034a886f616a5668aa5d098af2b5385ed70142090e2a31bcbd0af0fdb3d"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:9cb3032517f1627cc012dbc80a8ec976ae76d93ea2b5feaa9d2a5b8882597579"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:608862a7bf6957f2333fc54ab4399e405baad0163dc9f8d99cb236816db169d4"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:0f438ae3532723fb6ead77e7c604be7c8374094ef4ee2c5e03a3a17f1fca256c"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:356541bf4381fa35856dafa6a965916e54bed415ad8a24ee6de6e37deccf2786"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-win32.whl", hash = "sha256:39cf9ed17fe3b1bc81f33c9ceb6ce67683ee7526e65fde1447c772afc54a1bb8"},
    {file = "charset_normalizer-3.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:0a11e971ed097d24c534c037d298ad32c6ce81a45736d31e0ff0ad37ab437d59"},
    {file = "charset_normalizer-3.0.1-py3-none-any.whl", hash = "sha256:7e189e2e1d3ed2f4aebabd2d5b0f931e883676e51c7624826e0a4e5fe8a0bf24"},
]
colorama = [
    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
]
coverage = []
coveralls = []
docker = [
    {file = "docker-4.4.4-py2.py3-none-any.whl", hash = "sha256:f3607d5695be025fa405a12aca2e5df702a57db63790c73b927eb6a94aac60af"},
    {file = "docker-4.4.4.tar.gz", hash = "sha256:d3393c878f575d3a9ca3b94471a3c89a6d960b35feb92f033c0de36cc9d934db"},
]
docopt = []
elasticsearch = [
    {file = "elasticsearch-7.13.4-py2.py3-none-any.whl", hash = "sha256:5920df0ab2630778680376d86bea349dc99860977eec9b6d2bd0860f337313f2"},
    {file = "elasticsearch-7.13.4.tar.gz", hash = "sha256:52dda85f76eeb85ec873bf9ffe0ba6849e544e591f66d4048a5e48016de268e0"},
]
exceptiongroup = [
    {file = "exceptiongroup-1.1.0-py3-none-any.whl", hash = "sha256:327cbda3da756e2de031a3107b81ab7b3770a602c4d16ca618298c526f4bec1e"},
    {file = "exceptiongroup-1.1.0.tar.gz", hash = "sha256:bcb67d800a4497e1b404c2dd44fca47d3b7a5e5433dbab67f96c1a685cdfdf23"},
]
flake8 = [
    {file = "flake8-5.0.4-py2.py3-none-any.whl", hash = "sha256:7a1cf6b73744f5806ab95e526f6f0d8c01c66d7bbe349562d22dfca20610b248"},
    {file = "flake8-5.0.4.tar.gz", hash = "sha256:6fbe320aad8d6b95cec8b8e47bc933004678dc63095be98528b7bdd2a9f510db"},
]
flaky = []
gitdb = [
    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},
    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},
]
gitpython = [
    {file = "GitPython-3.1.30-py3-none-any.whl", hash = "sha256:cd455b0000615c60e286208ba540271af9fe531fa6a87cc590a7298785ab2882"},
    {file = "GitPython-3.1.30.tar.gz", hash = "sha256:769c2d83e13f5d938b7688479da374c4e3d49f71549aaf462b646db9602ea6f8"},
]
idna = [
    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},
    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},
]
importlib-metadata = [
    {file = "importlib_metadata-4.2.0-py3-none-any.whl", hash = "sha256:057e92c15bc8d9e8109738a48db0ccb31b4d9d5cfbee5a8670879a30be66304b"},
    {file = "importlib_metadata-4.2.0.tar.gz", hash = "sha256:b7e52a1f8dec14a75ea73e0891f3060099ca1d8e6a462a4dff11c3e119ea1b31"},
]
iniconfig = [
    {file = "iniconfig-2.0.0-py3-none-any.whl", hash = "sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374"},
    {file = "iniconfig-2.0.0.tar.gz", hash = "sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3"},
]
jmespath = [
    {file = "jmespath-1.0.1-py3-none-any.whl", hash = "sha256:02e2e4cc71b5bcab88332eebf907519190dd9e6e82107fa7f83b1003a6252980"},
    {file = "jmespath-1.0.1.tar.gz", hash = "sha256:90261b206d6defd58fdd5e85f478bf633a2901798906be2ad389150c5c60edbe"},
]
mccabe = [
    {file = "mccabe-0.7.0-py2.py3-none-any.whl", hash = "sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e"},
    {file = "mccabe-0.7.0.tar.gz", hash = "sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325"},
]
mirakuru = [
    {file = "mirakuru-2.4.2-py3-none-any.whl", hash = "sha256:fdb67d141cc9f7abd485a515d618daf3272c3e6ff48380749997ff8e8c5f2cb2"},
    {file = "mirakuru-2.4.2.tar.gz", hash = "sha256:ec84d4d81b4bca96cb0e598c6b3d198a92f036a0c1223c881482c02a98508226"},
]
opensearch-py = [
    {file = "opensearch-py-2.1.1.tar.gz", hash = "sha256:dd54a50c6771bc2582741bfdcf629b8d7eed409ae7fc2722249e53f9a10de0d8"},
    {file = "opensearch_py-2.1.1-py2.py3-none-any.whl", hash = "sha256:3e7085bf25487979581416f4ab195c2fe62e90f1f07f393091f8233cbea032eb"},
]
packaging = [
    {file = "packaging-23.0-py3-none-any.whl", hash = "sha256:714ac14496c3e68c99c29b00845f7a2b85f3bb6f1078fd9f72fd20f0570002b2"},
    {file = "packaging-23.0.tar.gz", hash = "sha256:b6ad297f8907de0fa2fe1ccbd26fdaf387f5f47c7275fedf8cce89f99446cf97"},
]
pluggy = []
port-for = [
    {file = "port-for-0.6.3.tar.gz", hash = "sha256:232bd999015b7fbdf19f90f3a9298cc742252d67650108123940bfc75c6f4d4e"},
    {file = "port_for-0.6.3-py3-none-any.whl", hash = "sha256:31860afde6cb552e1830c927def3288350c8fbbe9aea8aed8150ed9d1aa0de81"},
]
psutil = [
    {file = "psutil-5.9.4-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:c1ca331af862803a42677c120aff8a814a804e09832f166f226bfd22b56feee8"},
    {file = "psutil-5.9.4-cp27-cp27m-manylinux2010_i686.whl", hash = "sha256:68908971daf802203f3d37e78d3f8831b6d1014864d7a85937941bb35f09aefe"},
    {file = "psutil-5.9.4-cp27-cp27m-manylinux2010_x86_64.whl", hash = "sha256:3ff89f9b835100a825b14c2808a106b6fdcc4b15483141482a12c725e7f78549"},
    {file = "psutil-5.9.4-cp27-cp27m-win32.whl", hash = "sha256:852dd5d9f8a47169fe62fd4a971aa07859476c2ba22c2254d4a1baa4e10b95ad"},
    {file = "psutil-5.9.4-cp27-cp27m-win_amd64.whl", hash = "sha256:9120cd39dca5c5e1c54b59a41d205023d436799b1c8c4d3ff71af18535728e94"},
    {file = "psutil-5.9.4-cp27-cp27mu-manylinux2010_i686.whl", hash = "sha256:6b92c532979bafc2df23ddc785ed116fced1f492ad90a6830cf24f4d1ea27d24"},
    {file = "psutil-5.9.4-cp27-cp27mu-manylinux2010_x86_64.whl", hash = "sha256:efeae04f9516907be44904cc7ce08defb6b665128992a56957abc9b61dca94b7"},
    {file = "psutil-5.9.4-cp36-abi3-macosx_10_9_x86_64.whl", hash = "sha256:54d5b184728298f2ca8567bf83c422b706200bcbbfafdc06718264f9393cfeb7"},
    {file = "psutil-5.9.4-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:16653106f3b59386ffe10e0bad3bb6299e169d5327d3f187614b1cb8f24cf2e1"},
    {file = "psutil-5.9.4-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:54c0d3d8e0078b7666984e11b12b88af2db11d11249a8ac8920dd5ef68a66e08"},
    {file = "psutil-5.9.4-cp36-abi3-win32.whl", hash = "sha256:149555f59a69b33f056ba1c4eb22bb7bf24332ce631c44a319cec09f876aaeff"},
    {file = "psutil-5.9.4-cp36-abi3-win_amd64.whl", hash = "sha256:fd8522436a6ada7b4aad6638662966de0d61d241cb821239b2ae7013d41a43d4"},
    {file = "psutil-5.9.4-cp38-abi3-macosx_11_0_arm64.whl", hash = "sha256:6001c809253a29599bc0dfd5179d9f8a5779f9dffea1da0f13c53ee568115e1e"},
    {file = "psutil-5.9.4.tar.gz", hash = "sha256:3d7f9739eb435d4b1338944abe23f49584bde5395f27487d2ee25ad9a8774a62"},
]
pycodestyle = [
    {file = "pycodestyle-2.9.1-py2.py3-none-any.whl", hash = "sha256:d1735fc58b418fd7c5f658d28d943854f8a849b01a5d0a1e6f3f3fdd0166804b"},
    {file = "pycodestyle-2.9.1.tar.gz", hash = "sha256:2c9607871d58c76354b697b42f5d57e1ada7d261c261efac224b664affdc5785"},
]
pyflakes = [
    {file = "pyflakes-2.5.0-py2.py3-none-any.whl", hash = "sha256:4579f67d887f804e67edb544428f264b7b24f435b263c4614f384135cea553d2"},
    {file = "pyflakes-2.5.0.tar.gz", hash = "sha256:491feb020dca48ccc562a8c0cbe8df07ee13078df59813b83959cbdada312ea3"},
]
pyjwt = [
    {file = "PyJWT-2.6.0-py3-none-any.whl", hash = "sha256:d83c3d892a77bbb74d3e1a2cfa90afaadb60945205d1095d9221f04466f64c14"},
    {file = "PyJWT-2.6.0.tar.gz", hash = "sha256:69285c7e31fc44f68a1feb309e948e0df53259d579295e6cfe2b1792329f05fd"},
]
pytest = [
    {file = "pytest-7.2.1-py3-none-any.whl", hash = "sha256:c7c6ca206e93355074ae32f7403e8ea12163b1163c976fee7d4d84027c162be5"},
    {file = "pytest-7.2.1.tar.gz", hash = "sha256:d45e0952f3727241918b8fd0f376f5ff6b301cc0777c6f9a556935c92d8a7d42"},
]
pytest-cov = [
    {file = "pytest-cov-4.0.0.tar.gz", hash = "sha256:996b79efde6433cdbd0088872dbc5fb3ed7fe1578b68cdbba634f14bb8dd0470"},
    {file = "pytest_cov-4.0.0-py3-none-any.whl", hash = "sha256:2feb1b751d66a8bd934e5edfa2e961d11309dc37b73b0eabe73b5945fee20f6b"},
]
pytest-mock = [
    {file = "pytest-mock-3.10.0.tar.gz", hash = "sha256:fbbdb085ef7c252a326fd8cdcac0aa3b1333d8811f131bdcc701002e1be7ed4f"},
    {file = "pytest_mock-3.10.0-py3-none-any.whl", hash = "sha256:f4c973eeae0282963eb293eb173ce91b091a79c1334455acfac9ddee8a1c784b"},
]
pytest-redis = []
pytest-runner = []
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
pytz = [
    {file = "pytz-2022.7.1-py2.py3-none-any.whl", hash = "sha256:78f4f37d8198e0627c5f1143240bb0206b8691d8d7ac6d78fee88b78733f8c4a"},
    {file = "pytz-2022.7.1.tar.gz", hash = "sha256:01a0681c4b9684a28304615eba55d1ab31ae00bf68ec157ec3708a8182dbbcd0"},
]
pywin32 = [
    {file = "pywin32-227-cp27-cp27m-win32.whl", hash = "sha256:371fcc39416d736401f0274dd64c2302728c9e034808e37381b5e1b22be4a6b0"},
    {file = "pywin32-227-cp27-cp27m-win_amd64.whl", hash = "sha256:4cdad3e84191194ea6d0dd1b1b9bdda574ff563177d2adf2b4efec2a244fa116"},
    {file = "pywin32-227-cp35-cp35m-win32.whl", hash = "sha256:f4c5be1a293bae0076d93c88f37ee8da68136744588bc5e2be2f299a34ceb7aa"},
    {file = "pywin32-227-cp35-cp35m-win_amd64.whl", hash = "sha256:a929a4af626e530383a579431b70e512e736e9588106715215bf685a3ea508d4"},
    {file = "pywin32-227-cp36-cp36m-win32.whl", hash = "sha256:300a2db938e98c3e7e2093e4491439e62287d0d493fe07cce110db070b54c0be"},
    {file = "pywin32-227-cp36-cp36m-win_amd64.whl", hash = "sha256:9b31e009564fb95db160f154e2aa195ed66bcc4c058ed72850d047141b36f3a2"},
    {file = "pywin32-227-cp37-cp37m-win32.whl", hash = "sha256:47a3c7551376a865dd8d095a98deba954a98f326c6fe3c72d8726ca6e6b15507"},
    {file = "pywin32-227-cp37-cp37m-win_amd64.whl", hash = "sha256:31f88a89139cb2adc40f8f0e65ee56a8c585f629974f9e07622ba80199057511"},
    {file = "pywin32-227-cp38-cp38-win32.whl", hash = "sha256:7f18199fbf29ca99dff10e1f09451582ae9e372a892ff03a28528a24d55875bc"},
    {file = "pywin32-227-cp38-cp38-win_amd64.whl", hash = "sha256:7c1ae32c489dc012930787f06244426f8356e129184a02c25aef163917ce158e"},
    {file = "pywin32-227-cp39-cp39-win32.whl", hash = "sha256:c054c52ba46e7eb6b7d7dfae4dbd987a1bb48ee86debe3f245a2884ece46e295"},
    {file = "pywin32-227-cp39-cp39-win_amd64.whl", hash = "sha256:f27cec5e7f588c3d1051651830ecc00294f90728d19c3bf6916e6dba93ea357c"},
]
pyyaml = [
    {file = "PyYAML-5.4.1-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:3b2b1824fe7112845700f815ff6a489360226a5609b96ec2190a45e62a9fc922"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win32.whl", hash = "sha256:129def1b7c1bf22faffd67b8f3724645203b79d8f4cc81f674654d9902cb4393"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win_amd64.whl", hash = "sha256:4465124ef1b18d9ace298060f4eccc64b0850899ac4ac53294547536533800c8"},
    {file = "PyYAML-5.4.1-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:bb4191dfc9306777bc594117aee052446b3fa88737cd13b7188d0e7aa8162185"},
    {file = "PyYAML-5.4.1-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:6c78645d400265a062508ae399b60b8c167bf003db364ecb26dcab2bda048253"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:4e0583d24c881e14342eaf4ec5fbc97f934b999a6828693a99157fde912540cc"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_aarch64.whl", hash = "sha256:72a01f726a9c7851ca9bfad6fd09ca4e090a023c00945ea05ba1638c09dc3347"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_s390x.whl", hash = "sha256:895f61ef02e8fed38159bb70f7e100e00f471eae2bc838cd0f4ebb21e28f8541"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win32.whl", hash = "sha256:3bd0e463264cf257d1ffd2e40223b197271046d09dadf73a0fe82b9c1fc385a5"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win_amd64.whl", hash = "sha256:e4fac90784481d221a8e4b1162afa7c47ed953be40d31ab4629ae917510051df"},
    {file = "PyYAML-5.4.1-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:5accb17103e43963b80e6f837831f38d314a0495500067cb25afab2e8d7a4018"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:e1d4970ea66be07ae37a3c2e48b5ec63f7ba6804bdddfdbd3cfd954d25a82e63"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_aarch64.whl", hash = "sha256:cb333c16912324fd5f769fff6bc5de372e9e7a202247b48870bc251ed40239aa"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_s390x.whl", hash = "sha256:fe69978f3f768926cfa37b867e3843918e012cf83f680806599ddce33c2c68b0"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win32.whl", hash = "sha256:dd5de0646207f053eb0d6c74ae45ba98c3395a571a2891858e87df7c9b9bd51b"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win_amd64.whl", hash = "sha256:08682f6b72c722394747bddaf0aa62277e02557c0fd1c42cb853016a38f8dedf"},
    {file = "PyYAML-5.4.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:d2d9808ea7b4af864f35ea216be506ecec180628aced0704e34aca0b040ffe46"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:8c1be557ee92a20f184922c7b6424e8ab6691788e6d86137c5d93c1a6ec1b8fb"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_aarch64.whl", hash = "sha256:fd7f6999a8070df521b6384004ef42833b9bd62cfee11a09bda1079b4b704247"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_s390x.whl", hash = "sha256:bfb51918d4ff3d77c1c856a9699f8492c612cde32fd3bcd344af9be34999bfdc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win32.whl", hash = "sha256:fa5ae20527d8e831e8230cbffd9f8fe952815b2b7dae6ffec25318803a7528fc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win_amd64.whl", hash = "sha256:0f5f5786c0e09baddcd8b4b45f20a7b5d61a7e7e99846e3c799b05c7c53fa696"},
    {file = "PyYAML-5.4.1-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:294db365efa064d00b8d1ef65d8ea2c3426ac366c0c4368d930bf1c5fb497f77"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux1_x86_64.whl", hash = "sha256:74c1485f7707cf707a7aef42ef6322b8f97921bd89be2ab6317fd782c2d53183"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_aarch64.whl", hash = "sha256:d483ad4e639292c90170eb6f7783ad19490e7a8defb3e46f97dfe4bacae89122"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_s390x.whl", hash = "sha256:fdc842473cd33f45ff6bce46aea678a54e3d21f1b61a7750ce3c498eedfe25d6"},
    {file = "PyYAML-5.4.1-cp39-cp39-win32.whl", hash = "sha256:49d4cdd9065b9b6e206d0595fee27a96b5dd22618e7520c33204a4a3239d5b10"},
    {file = "PyYAML-5.4.1-cp39-cp39-win_amd64.whl", hash = "sha256:c20cfa2d49991c8b4147af39859b167664f2ad4561704ee74c1de03318e898db"},
    {file = "PyYAML-5.4.1.tar.gz", hash = "sha256:607774cbba28732bfa802b54baa7484215f530991055bb562efbed5b2f20a45e"},
]
redis = [
    {file = "redis-4.5.1-py3-none-any.whl", hash = "sha256:5deb072d26e67d2be1712603bfb7947ec3431fb0eec9c578994052e33035af6d"},
    {file = "redis-4.5.1.tar.gz", hash = "sha256:1eec3741cda408d3a5f84b78d089c8b8d895f21b3b050988351e925faf202864"},
]
requests = [
    {file = "requests-2.28.2-py3-none-any.whl", hash = "sha256:64299f4909223da747622c030b781c0d7811e359c37124b4bd368fb8c6518baa"},
    {file = "requests-2.28.2.tar.gz", hash = "sha256:98b1b2782e3c6c4904938b84c0eb932721069dfdb9134313beff7c83c2df24bf"},
]
rfc3986 = [
    {file = "rfc3986-1.5.0-py2.py3-none-any.whl", hash = "sha256:a86d6e1f5b1dc238b218b012df0aa79409667bb209e58da56d0b94704e712a97"},
    {file = "rfc3986-1.5.0.tar.gz", hash = "sha256:270aaf10d87d0d4e095063c65bf3ddbc6ee3d0b226328ce21e036f946e421835"},
]
s3transfer = [
    {file = "s3transfer-0.6.0-py3-none-any.whl", hash = "sha256:06176b74f3a15f61f1b4f25a1fc29a4429040b7647133a463da8fa5bd28d5ecd"},
    {file = "s3transfer-0.6.0.tar.gz", hash = "sha256:2ed07d3866f523cc561bf4a00fc5535827981b117dd7876f036b0c1aca42c947"},
]
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
smmap = [
    {file = "smmap-5.0.0-py3-none-any.whl", hash = "sha256:2aba19d6a040e78d8b09de5c57e96207b09ed71d8e55ce0959eeee6c8e190d94"},
    {file = "smmap-5.0.0.tar.gz", hash = "sha256:c840e62059cd3be204b0c9c9f74be2c09d5648eddd4580d9314c3ecde0b30936"},
]
soupsieve = [
    {file = "soupsieve-2.3.2.post1-py3-none-any.whl", hash = "sha256:3b2503d3c7084a42b1ebd08116e5f81aadfaea95863628c80a3b774a11b7c759"},
    {file = "soupsieve-2.3.2.post1.tar.gz", hash = "sha256:fc53893b3da2c33de295667a0e19f078c14bf86544af307354de5fcf12a3f30d"},
]
structlog = [
    {file = "structlog-19.2.0-py2.py3-none-any.whl", hash = "sha256:6640e6690fc31d5949bc614c1a630464d3aaa625284aeb7c6e486c3010d73e12"},
    {file = "structlog-19.2.0.tar.gz", hash = "sha256:4287058cf4ce1a59bc5dea290d6386d37f29a37529c9a51cdf7387e51710152b"},
]
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
tomli = [
    {file = "tomli-2.0.1-py3-none-any.whl", hash = "sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc"},
    {file = "tomli-2.0.1.tar.gz", hash = "sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f"},
]
typing-extensions = [
    {file = "typing_extensions-4.4.0-py3-none-any.whl", hash = "sha256:16fa4864408f655d35ec496218b85f79b3437c829e93320c7c9215ccfd92489e"},
    {file = "typing_extensions-4.4.0.tar.gz", hash = "sha256:1511434bb92bf8dd198c12b1cc812e800d4181cfcb867674e0f8279cc93087aa"},
]
urllib3 = [
    {file = "urllib3-1.26.14-py2.py3-none-any.whl", hash = "sha256:75edcdc2f7d85b137124a6c3c9fc3933cdeaa12ecb9a6a959f22797a0feca7e1"},
    {file = "urllib3-1.26.14.tar.gz", hash = "sha256:076907bf8fd355cde77728471316625a4d2f7e713c125f51953bb5b3eecf4f72"},
]
waitress = [
    {file = "waitress-2.1.2-py3-none-any.whl", hash = "sha256:7500c9625927c8ec60f54377d590f67b30c8e70ef4b8894214ac6e4cad233d2a"},
    {file = "waitress-2.1.2.tar.gz", hash = "sha256:780a4082c5fbc0fde6a2fcfe5e26e6efc1e8f425730863c04085769781f51eba"},
]
webob = [
    {file = "WebOb-1.8.7-py2.py3-none-any.whl", hash = "sha256:73aae30359291c14fa3b956f8b5ca31960e420c28c1bec002547fb04928cf89b"},
    {file = "WebOb-1.8.7.tar.gz", hash = "sha256:b64ef5141be559cfade448f044fa45c2260351edcb6a8ef6b7e00c7dcef0c323"},
]
websocket-client = [
    {file = "websocket-client-1.5.1.tar.gz", hash = "sha256:3f09e6d8230892547132177f575a4e3e73cfdf06526e20cc02aa1c3b47184d40"},
    {file = "websocket_client-1.5.1-py3-none-any.whl", hash = "sha256:cdf5877568b7e83aa7cf2244ab56a3213de587bbe0ce9d8b9600fc77b455d89e"},
]
webtest = [
    {file = "WebTest-2.0.35-py2.py3-none-any.whl", hash = "sha256:44ddfe99b5eca4cf07675e7222c81dd624d22f9a26035d2b93dc8862dc1153c6"},
    {file = "WebTest-2.0.35.tar.gz", hash = "sha256:aac168b5b2b4f200af4e35867cf316712210e3d5db81c1cbdff38722647bb087"},
]
zipp = [
    {file = "zipp-3.13.0-py3-none-any.whl", hash = "sha256:e8b2a36ea17df80ffe9e2c4fda3f693c3dad6df1697d3cd3af232db680950b0b"},
    {file = "zipp-3.13.0.tar.gz", hash = "sha256:23f70e964bc11a34cef175bc90ba2914e1e4545ea1e3e2f67c079671883f9cb6"},
]
