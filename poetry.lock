[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["cloudpickle", "coverage[toml] (>=5.0.2)", "furo", "hypothesis", "mypy (>=0.900,!=0.940)", "pre-commit", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "sphinx", "sphinx-notfound-page", "zope.interface"]
docs = ["furo", "sphinx", "sphinx-notfound-page", "zope.interface"]
tests = ["cloudpickle", "coverage[toml] (>=5.0.2)", "hypothesis", "mypy (>=0.900,!=0.940)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "zope.interface"]
tests-no-zope = ["cloudpickle", "coverage[toml] (>=5.0.2)", "hypothesis", "mypy (>=0.900,!=0.940)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins"]

[[package]]
name = "aws-requests-auth"
version = "0.4.3"
description = "AWS signature version 4 signing process for the python requests module"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=0.14.0"

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "boto3"
version = "1.24.87"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.27.87,<1.28.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.6.0,<0.7.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "boto3-stubs"
version = "1.18.23"
description = "Type annotations for boto3 1.18.23, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
botocore-stubs = "*"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.18.18)"]
acm = ["mypy-boto3-acm (>=1.18.18)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.18.18)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.18.18)"]
all = ["mypy-boto3-accessanalyzer (>=1.18.18)", "mypy-boto3-acm (>=1.18.18)", "mypy-boto3-acm-pca (>=1.18.18)", "mypy-boto3-alexaforbusiness (>=1.18.18)", "mypy-boto3-amp (>=1.18.18)", "mypy-boto3-amplify (>=1.18.18)", "mypy-boto3-amplifybackend (>=1.18.18)", "mypy-boto3-apigateway (>=1.18.18)", "mypy-boto3-apigatewaymanagementapi (>=1.18.18)", "mypy-boto3-apigatewayv2 (>=1.18.18)", "mypy-boto3-appconfig (>=1.18.18)", "mypy-boto3-appflow (>=1.18.18)", "mypy-boto3-appintegrations (>=1.18.18)", "mypy-boto3-application-autoscaling (>=1.18.18)", "mypy-boto3-application-insights (>=1.18.18)", "mypy-boto3-applicationcostprofiler (>=1.18.18)", "mypy-boto3-appmesh (>=1.18.18)", "mypy-boto3-apprunner (>=1.18.18)", "mypy-boto3-appstream (>=1.18.18)", "mypy-boto3-appsync (>=1.18.18)", "mypy-boto3-athena (>=1.18.18)", "mypy-boto3-auditmanager (>=1.18.18)", "mypy-boto3-autoscaling (>=1.18.18)", "mypy-boto3-autoscaling-plans (>=1.18.18)", "mypy-boto3-backup (>=1.18.18)", "mypy-boto3-batch (>=1.18.18)", "mypy-boto3-braket (>=1.18.18)", "mypy-boto3-budgets (>=1.18.18)", "mypy-boto3-ce (>=1.18.18)", "mypy-boto3-chime (>=1.18.18)", "mypy-boto3-chime-sdk-identity (>=1.18.18)", "mypy-boto3-chime-sdk-messaging (>=1.18.18)", "mypy-boto3-cloud9 (>=1.18.18)", "mypy-boto3-clouddirectory (>=1.18.18)", "mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-cloudfront (>=1.18.18)", "mypy-boto3-cloudhsm (>=1.18.18)", "mypy-boto3-cloudhsmv2 (>=1.18.18)", "mypy-boto3-cloudsearch (>=1.18.18)", "mypy-boto3-cloudsearchdomain (>=1.18.18)", "mypy-boto3-cloudtrail (>=1.18.18)", "mypy-boto3-cloudwatch (>=1.18.18)", "mypy-boto3-codeartifact (>=1.18.18)", "mypy-boto3-codebuild (>=1.18.18)", "mypy-boto3-codecommit (>=1.18.18)", "mypy-boto3-codedeploy (>=1.18.18)", "mypy-boto3-codeguru-reviewer (>=1.18.18)", "mypy-boto3-codeguruprofiler (>=1.18.18)", "mypy-boto3-codepipeline (>=1.18.18)", "mypy-boto3-codestar (>=1.18.18)", "mypy-boto3-codestar-connections (>=1.18.18)", "mypy-boto3-codestar-notifications (>=1.18.18)", "mypy-boto3-cognito-identity (>=1.18.18)", "mypy-boto3-cognito-idp (>=1.18.18)", "mypy-boto3-cognito-sync (>=1.18.18)", "mypy-boto3-comprehend (>=1.18.18)", "mypy-boto3-comprehendmedical (>=1.18.18)", "mypy-boto3-compute-optimizer (>=1.18.18)", "mypy-boto3-config (>=1.18.18)", "mypy-boto3-connect (>=1.18.18)", "mypy-boto3-connect-contact-lens (>=1.18.18)", "mypy-boto3-connectparticipant (>=1.18.18)", "mypy-boto3-cur (>=1.18.18)", "mypy-boto3-customer-profiles (>=1.18.18)", "mypy-boto3-databrew (>=1.18.18)", "mypy-boto3-dataexchange (>=1.18.18)", "mypy-boto3-datapipeline (>=1.18.18)", "mypy-boto3-datasync (>=1.18.18)", "mypy-boto3-dax (>=1.18.18)", "mypy-boto3-detective (>=1.18.18)", "mypy-boto3-devicefarm (>=1.18.18)", "mypy-boto3-devops-guru (>=1.18.18)", "mypy-boto3-directconnect (>=1.18.18)", "mypy-boto3-discovery (>=1.18.18)", "mypy-boto3-dlm (>=1.18.18)", "mypy-boto3-dms (>=1.18.18)", "mypy-boto3-docdb (>=1.18.18)", "mypy-boto3-ds (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-dynamodbstreams (>=1.18.18)", "mypy-boto3-ebs (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-ec2-instance-connect (>=1.18.18)", "mypy-boto3-ecr (>=1.18.18)", "mypy-boto3-ecr-public (>=1.18.18)", "mypy-boto3-ecs (>=1.18.18)", "mypy-boto3-efs (>=1.18.18)", "mypy-boto3-eks (>=1.18.18)", "mypy-boto3-elastic-inference (>=1.18.18)", "mypy-boto3-elasticache (>=1.18.18)", "mypy-boto3-elasticbeanstalk (>=1.18.18)", "mypy-boto3-elastictranscoder (>=1.18.18)", "mypy-boto3-elb (>=1.18.18)", "mypy-boto3-elbv2 (>=1.18.18)", "mypy-boto3-emr (>=1.18.18)", "mypy-boto3-emr-containers (>=1.18.18)", "mypy-boto3-es (>=1.18.18)", "mypy-boto3-events (>=1.18.18)", "mypy-boto3-finspace (>=1.18.18)", "mypy-boto3-finspace-data (>=1.18.18)", "mypy-boto3-firehose (>=1.18.18)", "mypy-boto3-fis (>=1.18.18)", "mypy-boto3-fms (>=1.18.18)", "mypy-boto3-forecast (>=1.18.18)", "mypy-boto3-forecastquery (>=1.18.18)", "mypy-boto3-frauddetector (>=1.18.18)", "mypy-boto3-fsx (>=1.18.18)", "mypy-boto3-gamelift (>=1.18.18)", "mypy-boto3-glacier (>=1.18.18)", "mypy-boto3-globalaccelerator (>=1.18.18)", "mypy-boto3-glue (>=1.18.18)", "mypy-boto3-greengrass (>=1.18.18)", "mypy-boto3-greengrassv2 (>=1.18.18)", "mypy-boto3-groundstation (>=1.18.18)", "mypy-boto3-guardduty (>=1.18.18)", "mypy-boto3-health (>=1.18.18)", "mypy-boto3-healthlake (>=1.18.18)", "mypy-boto3-honeycode (>=1.18.18)", "mypy-boto3-iam (>=1.18.18)", "mypy-boto3-identitystore (>=1.18.18)", "mypy-boto3-imagebuilder (>=1.18.18)", "mypy-boto3-importexport (>=1.18.18)", "mypy-boto3-inspector (>=1.18.18)", "mypy-boto3-iot (>=1.18.18)", "mypy-boto3-iot-data (>=1.18.18)", "mypy-boto3-iot-jobs-data (>=1.18.18)", "mypy-boto3-iot1click-devices (>=1.18.18)", "mypy-boto3-iot1click-projects (>=1.18.18)", "mypy-boto3-iotanalytics (>=1.18.18)", "mypy-boto3-iotdeviceadvisor (>=1.18.18)", "mypy-boto3-iotevents (>=1.18.18)", "mypy-boto3-iotevents-data (>=1.18.18)", "mypy-boto3-iotfleethub (>=1.18.18)", "mypy-boto3-iotsecuretunneling (>=1.18.18)", "mypy-boto3-iotsitewise (>=1.18.18)", "mypy-boto3-iotthingsgraph (>=1.18.18)", "mypy-boto3-iotwireless (>=1.18.18)", "mypy-boto3-ivs (>=1.18.18)", "mypy-boto3-kafka (>=1.18.18)", "mypy-boto3-kendra (>=1.18.18)", "mypy-boto3-kinesis (>=1.18.18)", "mypy-boto3-kinesis-video-archived-media (>=1.18.18)", "mypy-boto3-kinesis-video-media (>=1.18.18)", "mypy-boto3-kinesis-video-signaling (>=1.18.18)", "mypy-boto3-kinesisanalytics (>=1.18.18)", "mypy-boto3-kinesisanalyticsv2 (>=1.18.18)", "mypy-boto3-kinesisvideo (>=1.18.18)", "mypy-boto3-kms (>=1.18.18)", "mypy-boto3-lakeformation (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-lex-models (>=1.18.18)", "mypy-boto3-lex-runtime (>=1.18.18)", "mypy-boto3-lexv2-models (>=1.18.18)", "mypy-boto3-lexv2-runtime (>=1.18.18)", "mypy-boto3-license-manager (>=1.18.18)", "mypy-boto3-lightsail (>=1.18.18)", "mypy-boto3-location (>=1.18.18)", "mypy-boto3-logs (>=1.18.18)", "mypy-boto3-lookoutequipment (>=1.18.18)", "mypy-boto3-lookoutmetrics (>=1.18.18)", "mypy-boto3-lookoutvision (>=1.18.18)", "mypy-boto3-machinelearning (>=1.18.18)", "mypy-boto3-macie (>=1.18.18)", "mypy-boto3-macie2 (>=1.18.18)", "mypy-boto3-managedblockchain (>=1.18.18)", "mypy-boto3-marketplace-catalog (>=1.18.18)", "mypy-boto3-marketplace-entitlement (>=1.18.18)", "mypy-boto3-marketplacecommerceanalytics (>=1.18.18)", "mypy-boto3-mediaconnect (>=1.18.18)", "mypy-boto3-mediaconvert (>=1.18.18)", "mypy-boto3-medialive (>=1.18.18)", "mypy-boto3-mediapackage (>=1.18.18)", "mypy-boto3-mediapackage-vod (>=1.18.18)", "mypy-boto3-mediastore (>=1.18.18)", "mypy-boto3-mediastore-data (>=1.18.18)", "mypy-boto3-mediatailor (>=1.18.18)", "mypy-boto3-meteringmarketplace (>=1.18.18)", "mypy-boto3-mgh (>=1.18.18)", "mypy-boto3-mgn (>=1.18.18)", "mypy-boto3-migrationhub-config (>=1.18.18)", "mypy-boto3-mobile (>=1.18.18)", "mypy-boto3-mq (>=1.18.18)", "mypy-boto3-mturk (>=1.18.18)", "mypy-boto3-mwaa (>=1.18.18)", "mypy-boto3-neptune (>=1.18.18)", "mypy-boto3-network-firewall (>=1.18.18)", "mypy-boto3-networkmanager (>=1.18.18)", "mypy-boto3-nimble (>=1.18.18)", "mypy-boto3-opsworks (>=1.18.18)", "mypy-boto3-opsworkscm (>=1.18.18)", "mypy-boto3-organizations (>=1.18.18)", "mypy-boto3-outposts (>=1.18.18)", "mypy-boto3-personalize (>=1.18.18)", "mypy-boto3-personalize-events (>=1.18.18)", "mypy-boto3-personalize-runtime (>=1.18.18)", "mypy-boto3-pi (>=1.18.18)", "mypy-boto3-pinpoint (>=1.18.18)", "mypy-boto3-pinpoint-email (>=1.18.18)", "mypy-boto3-pinpoint-sms-voice (>=1.18.18)", "mypy-boto3-polly (>=1.18.18)", "mypy-boto3-pricing (>=1.18.18)", "mypy-boto3-proton (>=1.18.18)", "mypy-boto3-qldb (>=1.18.18)", "mypy-boto3-qldb-session (>=1.18.18)", "mypy-boto3-quicksight (>=1.18.18)", "mypy-boto3-ram (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-rds-data (>=1.18.18)", "mypy-boto3-redshift (>=1.18.18)", "mypy-boto3-redshift-data (>=1.18.18)", "mypy-boto3-rekognition (>=1.18.18)", "mypy-boto3-resource-groups (>=1.18.18)", "mypy-boto3-resourcegroupstaggingapi (>=1.18.18)", "mypy-boto3-robomaker (>=1.18.18)", "mypy-boto3-route53 (>=1.18.18)", "mypy-boto3-route53-recovery-cluster (>=1.18.18)", "mypy-boto3-route53-recovery-control-config (>=1.18.18)", "mypy-boto3-route53-recovery-readiness (>=1.18.18)", "mypy-boto3-route53domains (>=1.18.18)", "mypy-boto3-route53resolver (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-s3control (>=1.18.18)", "mypy-boto3-s3outposts (>=1.18.18)", "mypy-boto3-sagemaker (>=1.18.18)", "mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)", "mypy-boto3-sagemaker-edge (>=1.18.18)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)", "mypy-boto3-sagemaker-runtime (>=1.18.18)", "mypy-boto3-savingsplans (>=1.18.18)", "mypy-boto3-schemas (>=1.18.18)", "mypy-boto3-sdb (>=1.18.18)", "mypy-boto3-secretsmanager (>=1.18.18)", "mypy-boto3-securityhub (>=1.18.18)", "mypy-boto3-serverlessrepo (>=1.18.18)", "mypy-boto3-service-quotas (>=1.18.18)", "mypy-boto3-servicecatalog (>=1.18.18)", "mypy-boto3-servicecatalog-appregistry (>=1.18.18)", "mypy-boto3-servicediscovery (>=1.18.18)", "mypy-boto3-ses (>=1.18.18)", "mypy-boto3-sesv2 (>=1.18.18)", "mypy-boto3-shield (>=1.18.18)", "mypy-boto3-signer (>=1.18.18)", "mypy-boto3-sms (>=1.18.18)", "mypy-boto3-sms-voice (>=1.18.18)", "mypy-boto3-snow-device-management (>=1.18.18)", "mypy-boto3-snowball (>=1.18.18)", "mypy-boto3-sns (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)", "mypy-boto3-ssm (>=1.18.18)", "mypy-boto3-ssm-contacts (>=1.18.18)", "mypy-boto3-ssm-incidents (>=1.18.18)", "mypy-boto3-sso (>=1.18.18)", "mypy-boto3-sso-admin (>=1.18.18)", "mypy-boto3-sso-oidc (>=1.18.18)", "mypy-boto3-stepfunctions (>=1.18.18)", "mypy-boto3-storagegateway (>=1.18.18)", "mypy-boto3-sts (>=1.18.18)", "mypy-boto3-support (>=1.18.18)", "mypy-boto3-swf (>=1.18.18)", "mypy-boto3-synthetics (>=1.18.18)", "mypy-boto3-textract (>=1.18.18)", "mypy-boto3-timestream-query (>=1.18.18)", "mypy-boto3-timestream-write (>=1.18.18)", "mypy-boto3-transcribe (>=1.18.18)", "mypy-boto3-transfer (>=1.18.18)", "mypy-boto3-translate (>=1.18.18)", "mypy-boto3-waf (>=1.18.18)", "mypy-boto3-waf-regional (>=1.18.18)", "mypy-boto3-wafv2 (>=1.18.18)", "mypy-boto3-wellarchitected (>=1.18.18)", "mypy-boto3-workdocs (>=1.18.18)", "mypy-boto3-worklink (>=1.18.18)", "mypy-boto3-workmail (>=1.18.18)", "mypy-boto3-workmailmessageflow (>=1.18.18)", "mypy-boto3-workspaces (>=1.18.18)", "mypy-boto3-xray (>=1.18.18)"]
amp = ["mypy-boto3-amp (>=1.18.18)"]
amplify = ["mypy-boto3-amplify (>=1.18.18)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.18.18)"]
apigateway = ["mypy-boto3-apigateway (>=1.18.18)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.18.18)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.18.18)"]
appconfig = ["mypy-boto3-appconfig (>=1.18.18)"]
appflow = ["mypy-boto3-appflow (>=1.18.18)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.18.18)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.18.18)"]
application-insights = ["mypy-boto3-application-insights (>=1.18.18)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.18.18)"]
appmesh = ["mypy-boto3-appmesh (>=1.18.18)"]
apprunner = ["mypy-boto3-apprunner (>=1.18.18)"]
appstream = ["mypy-boto3-appstream (>=1.18.18)"]
appsync = ["mypy-boto3-appsync (>=1.18.18)"]
athena = ["mypy-boto3-athena (>=1.18.18)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.18.18)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.18.18)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.18.18)"]
backup = ["mypy-boto3-backup (>=1.18.18)"]
batch = ["mypy-boto3-batch (>=1.18.18)"]
braket = ["mypy-boto3-braket (>=1.18.18)"]
budgets = ["mypy-boto3-budgets (>=1.18.18)"]
ce = ["mypy-boto3-ce (>=1.18.18)"]
chime = ["mypy-boto3-chime (>=1.18.18)"]
chime-sdk-identity = ["mypy-boto3-chime-sdk-identity (>=1.18.18)"]
chime-sdk-messaging = ["mypy-boto3-chime-sdk-messaging (>=1.18.18)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.18.18)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.18.18)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.18.18)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.18.18)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.18.18)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.18.18)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.18.18)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.18.18)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.18.18)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.18.18)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.18.18)"]
codebuild = ["mypy-boto3-codebuild (>=1.18.18)"]
codecommit = ["mypy-boto3-codecommit (>=1.18.18)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.18.18)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.18.18)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.18.18)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.18.18)"]
codestar = ["mypy-boto3-codestar (>=1.18.18)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.18.18)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.18.18)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.18.18)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.18.18)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.18.18)"]
comprehend = ["mypy-boto3-comprehend (>=1.18.18)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.18.18)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.18.18)"]
config = ["mypy-boto3-config (>=1.18.18)"]
connect = ["mypy-boto3-connect (>=1.18.18)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.18.18)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.18.18)"]
cur = ["mypy-boto3-cur (>=1.18.18)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.18.18)"]
databrew = ["mypy-boto3-databrew (>=1.18.18)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.18.18)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.18.18)"]
datasync = ["mypy-boto3-datasync (>=1.18.18)"]
dax = ["mypy-boto3-dax (>=1.18.18)"]
detective = ["mypy-boto3-detective (>=1.18.18)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.18.18)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.18.18)"]
directconnect = ["mypy-boto3-directconnect (>=1.18.18)"]
discovery = ["mypy-boto3-discovery (>=1.18.18)"]
dlm = ["mypy-boto3-dlm (>=1.18.18)"]
dms = ["mypy-boto3-dms (>=1.18.18)"]
docdb = ["mypy-boto3-docdb (>=1.18.18)"]
ds = ["mypy-boto3-ds (>=1.18.18)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.18.18)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.18.18)"]
ebs = ["mypy-boto3-ebs (>=1.18.18)"]
ec2 = ["mypy-boto3-ec2 (>=1.18.18)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.18.18)"]
ecr = ["mypy-boto3-ecr (>=1.18.18)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.18.18)"]
ecs = ["mypy-boto3-ecs (>=1.18.18)"]
efs = ["mypy-boto3-efs (>=1.18.18)"]
eks = ["mypy-boto3-eks (>=1.18.18)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.18.18)"]
elasticache = ["mypy-boto3-elasticache (>=1.18.18)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.18.18)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.18.18)"]
elb = ["mypy-boto3-elb (>=1.18.18)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.18.18)"]
emr = ["mypy-boto3-emr (>=1.18.18)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.18.18)"]
es = ["mypy-boto3-es (>=1.18.18)"]
essential = ["mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)"]
events = ["mypy-boto3-events (>=1.18.18)"]
finspace = ["mypy-boto3-finspace (>=1.18.18)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.18.18)"]
firehose = ["mypy-boto3-firehose (>=1.18.18)"]
fis = ["mypy-boto3-fis (>=1.18.18)"]
fms = ["mypy-boto3-fms (>=1.18.18)"]
forecast = ["mypy-boto3-forecast (>=1.18.18)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.18.18)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.18.18)"]
fsx = ["mypy-boto3-fsx (>=1.18.18)"]
gamelift = ["mypy-boto3-gamelift (>=1.18.18)"]
glacier = ["mypy-boto3-glacier (>=1.18.18)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.18.18)"]
glue = ["mypy-boto3-glue (>=1.18.18)"]
greengrass = ["mypy-boto3-greengrass (>=1.18.18)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.18.18)"]
groundstation = ["mypy-boto3-groundstation (>=1.18.18)"]
guardduty = ["mypy-boto3-guardduty (>=1.18.18)"]
health = ["mypy-boto3-health (>=1.18.18)"]
healthlake = ["mypy-boto3-healthlake (>=1.18.18)"]
honeycode = ["mypy-boto3-honeycode (>=1.18.18)"]
iam = ["mypy-boto3-iam (>=1.18.18)"]
identitystore = ["mypy-boto3-identitystore (>=1.18.18)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.18.18)"]
importexport = ["mypy-boto3-importexport (>=1.18.18)"]
inspector = ["mypy-boto3-inspector (>=1.18.18)"]
iot = ["mypy-boto3-iot (>=1.18.18)"]
iot-data = ["mypy-boto3-iot-data (>=1.18.18)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.18.18)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.18.18)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.18.18)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.18.18)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.18.18)"]
iotevents = ["mypy-boto3-iotevents (>=1.18.18)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.18.18)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.18.18)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.18.18)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.18.18)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.18.18)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.18.18)"]
ivs = ["mypy-boto3-ivs (>=1.18.18)"]
kafka = ["mypy-boto3-kafka (>=1.18.18)"]
kendra = ["mypy-boto3-kendra (>=1.18.18)"]
kinesis = ["mypy-boto3-kinesis (>=1.18.18)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.18.18)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.18.18)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.18.18)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.18.18)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.18.18)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.18.18)"]
kms = ["mypy-boto3-kms (>=1.18.18)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.18.18)"]
lambda = ["mypy-boto3-lambda (>=1.18.18)"]
lex-models = ["mypy-boto3-lex-models (>=1.18.18)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.18.18)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.18.18)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.18.18)"]
license-manager = ["mypy-boto3-license-manager (>=1.18.18)"]
lightsail = ["mypy-boto3-lightsail (>=1.18.18)"]
location = ["mypy-boto3-location (>=1.18.18)"]
logs = ["mypy-boto3-logs (>=1.18.18)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.18.18)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.18.18)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.18.18)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.18.18)"]
macie = ["mypy-boto3-macie (>=1.18.18)"]
macie2 = ["mypy-boto3-macie2 (>=1.18.18)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.18.18)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.18.18)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.18.18)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.18.18)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.18.18)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.18.18)"]
medialive = ["mypy-boto3-medialive (>=1.18.18)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.18.18)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.18.18)"]
mediastore = ["mypy-boto3-mediastore (>=1.18.18)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.18.18)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.18.18)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.18.18)"]
mgh = ["mypy-boto3-mgh (>=1.18.18)"]
mgn = ["mypy-boto3-mgn (>=1.18.18)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.18.18)"]
mobile = ["mypy-boto3-mobile (>=1.18.18)"]
mq = ["mypy-boto3-mq (>=1.18.18)"]
mturk = ["mypy-boto3-mturk (>=1.18.18)"]
mwaa = ["mypy-boto3-mwaa (>=1.18.18)"]
neptune = ["mypy-boto3-neptune (>=1.18.18)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.18.18)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.18.18)"]
nimble = ["mypy-boto3-nimble (>=1.18.18)"]
opsworks = ["mypy-boto3-opsworks (>=1.18.18)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.18.18)"]
organizations = ["mypy-boto3-organizations (>=1.18.18)"]
outposts = ["mypy-boto3-outposts (>=1.18.18)"]
personalize = ["mypy-boto3-personalize (>=1.18.18)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.18.18)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.18.18)"]
pi = ["mypy-boto3-pi (>=1.18.18)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.18.18)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.18.18)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.18.18)"]
polly = ["mypy-boto3-polly (>=1.18.18)"]
pricing = ["mypy-boto3-pricing (>=1.18.18)"]
proton = ["mypy-boto3-proton (>=1.18.18)"]
qldb = ["mypy-boto3-qldb (>=1.18.18)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.18.18)"]
quicksight = ["mypy-boto3-quicksight (>=1.18.18)"]
ram = ["mypy-boto3-ram (>=1.18.18)"]
rds = ["mypy-boto3-rds (>=1.18.18)"]
rds-data = ["mypy-boto3-rds-data (>=1.18.18)"]
redshift = ["mypy-boto3-redshift (>=1.18.18)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.18.18)"]
rekognition = ["mypy-boto3-rekognition (>=1.18.18)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.18.18)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.18.18)"]
robomaker = ["mypy-boto3-robomaker (>=1.18.18)"]
route53 = ["mypy-boto3-route53 (>=1.18.18)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.18.18)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.18.18)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.18.18)"]
route53domains = ["mypy-boto3-route53domains (>=1.18.18)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.18.18)"]
s3 = ["mypy-boto3-s3 (>=1.18.18)"]
s3control = ["mypy-boto3-s3control (>=1.18.18)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.18.18)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.18.18)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.18.18)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.18.18)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.18.18)"]
schemas = ["mypy-boto3-schemas (>=1.18.18)"]
sdb = ["mypy-boto3-sdb (>=1.18.18)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.18.18)"]
securityhub = ["mypy-boto3-securityhub (>=1.18.18)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.18.18)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.18.18)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.18.18)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.18.18)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.18.18)"]
ses = ["mypy-boto3-ses (>=1.18.18)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.18.18)"]
shield = ["mypy-boto3-shield (>=1.18.18)"]
signer = ["mypy-boto3-signer (>=1.18.18)"]
sms = ["mypy-boto3-sms (>=1.18.18)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.18.18)"]
snow-device-management = ["mypy-boto3-snow-device-management (>=1.18.18)"]
snowball = ["mypy-boto3-snowball (>=1.18.18)"]
sns = ["mypy-boto3-sns (>=1.18.18)"]
sqs = ["mypy-boto3-sqs (>=1.18.18)"]
ssm = ["mypy-boto3-ssm (>=1.18.18)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.18.18)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.18.18)"]
sso = ["mypy-boto3-sso (>=1.18.18)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.18.18)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.18.18)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.18.18)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.18.18)"]
sts = ["mypy-boto3-sts (>=1.18.18)"]
support = ["mypy-boto3-support (>=1.18.18)"]
swf = ["mypy-boto3-swf (>=1.18.18)"]
synthetics = ["mypy-boto3-synthetics (>=1.18.18)"]
textract = ["mypy-boto3-textract (>=1.18.18)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.18.18)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.18.18)"]
transcribe = ["mypy-boto3-transcribe (>=1.18.18)"]
transfer = ["mypy-boto3-transfer (>=1.18.18)"]
translate = ["mypy-boto3-translate (>=1.18.18)"]
waf = ["mypy-boto3-waf (>=1.18.18)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.18.18)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.18.18)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.18.18)"]
workdocs = ["mypy-boto3-workdocs (>=1.18.18)"]
worklink = ["mypy-boto3-worklink (>=1.18.18)"]
workmail = ["mypy-boto3-workmail (>=1.18.18)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.18.18)"]
workspaces = ["mypy-boto3-workspaces (>=1.18.18)"]
xray = ["mypy-boto3-xray (>=1.18.18)"]

[[package]]
name = "botocore"
version = "1.27.87"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.14.0)"]

[[package]]
name = "botocore-stubs"
version = "1.21.22"
description = "Type annotations for botocore 1.21.22, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "certifi"
version = "2022.9.24"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode-backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "coverage"
version = "6.5.0"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "coveralls"
version = "3.3.1"
description = "Show coverage stats online via coveralls.io"
category = "dev"
optional = false
python-versions = ">= 3.5"

[package.dependencies]
coverage = ">=4.1,<6.0.0 || >6.1,<6.1.1 || >6.1.1,<7.0"
docopt = ">=0.6.1"
requests = ">=1.0.0"

[package.extras]
yaml = ["PyYAML (>=3.10)"]

[[package]]
name = "docker"
version = "4.4.4"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
pywin32 = {version = "227", markers = "sys_platform == \"win32\""}
requests = ">=2.14.2,<2.18.0 || >2.18.0"
six = ">=1.4.0"
websocket-client = ">=0.32.0"

[package.extras]
ssh = ["paramiko (>=2.4.2)"]
tls = ["cryptography (>=1.3.4)", "idna (>=2.0.0)", "pyOpenSSL (>=17.5.0)"]

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "elasticsearch"
version = "7.13.4"
description = "Python client for Elasticsearch"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[package.dependencies]
certifi = "*"
urllib3 = ">=1.21.1,<2"

[package.extras]
async = ["aiohttp (>=3,<4)"]
develop = ["black", "coverage", "jinja2", "mock", "pytest", "pytest-cov", "pyyaml", "requests (>=2.0.0,<3.0.0)", "sphinx (<1.7)", "sphinx-rtd-theme"]
docs = ["sphinx (<1.7)", "sphinx-rtd-theme"]
requests = ["requests (>=2.4.0,<3.0.0)"]

[[package]]
name = "flake8"
version = "5.0.4"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
importlib-metadata = {version = ">=1.1.0,<4.3", markers = "python_version < \"3.8\""}
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.9.0,<2.10.0"
pyflakes = ">=2.5.0,<2.6.0"

[[package]]
name = "flaky"
version = "3.7.0"
description = "Plugin for nose or pytest that automatically reruns flaky tests."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "gitdb"
version = "4.0.9"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.30"
description = "GitPython is a python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"
typing-extensions = {version = ">=3.7.4.3", markers = "python_version < \"3.8\""}

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.2.0"
description = "Read metadata from Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["jaraco.packaging (>=8.2)", "rst.linker (>=1.9)", "sphinx"]
testing = ["flufl.flake8", "importlib-resources (>=1.3)", "packaging", "pep517", "pyfakefs", "pytest (>=4.6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-flake8", "pytest-mypy"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "opensearch-py"
version = "2.0.1"
description = "Python low-level client for OpenSearch"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[package.dependencies]
certifi = "*"
requests = ">=2.4.0,<3.0.0"
urllib3 = ">=1.21.1,<2"

[package.extras]
async = ["aiohttp (>=3,<4)"]
develop = ["black", "botocore", "coverage", "jinja2", "mock", "myst-parser", "pytest", "pytest-cov", "pyyaml", "requests (>=2.0.0,<3.0.0)", "sphinx", "sphinx-copybutton", "sphinx-rtd-theme"]
docs = ["myst-parser", "sphinx", "sphinx-copybutton", "sphinx-rtd-theme"]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycodestyle"
version = "2.9.1"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyflakes"
version = "2.5.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "dev"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "pytest"
version = "7.1.3"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "4.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "six", "virtualenv"]

[[package]]
name = "pytest-mock"
version = "3.10.0"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "pytest-asyncio", "tox"]

[[package]]
name = "pytest-runner"
version = "6.0.0"
description = "Invoke py.test as distutils command with dependency resolution"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx"]
testing = ["pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-flake8", "pytest-mypy (>=0.9.1)", "pytest-virtualenv", "types-setuptools"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.4"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "227"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = false
python-versions = "*"

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "s3transfer"
version = "0.6.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "structlog"
version = "19.2.0"
description = "Structured Logging for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "pytest-azurepipelines", "python-rapidjson", "simplejson"]
dev = ["coverage", "freezegun (>=0.2.8)", "pre-commit", "pretend", "pytest (>=3.3.0)", "python-rapidjson", "simplejson", "sphinx", "twisted"]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "python-rapidjson", "simplejson"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.12"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)", "brotlipy (>=0.6.0)"]
secure = ["certifi", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "ipaddress", "pyOpenSSL (>=0.14)", "urllib3-secure-extra"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "waitress"
version = "2.1.2"
description = "Waitress WSGI server"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.9)"]
testing = ["coverage (>=5.0)", "pytest", "pytest-cover"]

[[package]]
name = "webob"
version = "1.8.7"
description = "WSGI request and response object"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["coverage", "pytest (>=3.1.0)", "pytest-cov", "pytest-xdist"]

[[package]]
name = "websocket-client"
version = "1.4.1"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["Sphinx (>=3.4)", "sphinx-rtd-theme (>=0.5)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
name = "webtest"
version = "2.0.35"
description = "Helper to test WSGI applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
beautifulsoup4 = "*"
six = "*"
waitress = ">=0.8.5"
WebOb = ">=1.2"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.8)"]
tests = ["PasteDeploy", "WSGIProxy2", "coverage", "mock", "nose (<1.3.0)", "pyquery"]

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx"]
testing = ["func-timeout", "jaraco.itertools", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.7,<3.10"
content-hash = "c00c03bd2b0722d0ce99100d41a964b987a84b53b3210718214675b4f3e8caa3"

[metadata.files]
attrs = [
    {file = "attrs-22.1.0-py2.py3-none-any.whl", hash = "sha256:86efa402f67bf2df34f51a335487cf46b1ec130d02b8d39fd248abfd30da551c"},
    {file = "attrs-22.1.0.tar.gz", hash = "sha256:29adc2665447e5191d0e7c568fde78b21f9672d344281d0c6e1ab085429b22b6"},
]
aws-requests-auth = [
    {file = "aws-requests-auth-0.4.3.tar.gz", hash = "sha256:33593372018b960a31dbbe236f89421678b885c35f0b6a7abfae35bb77e069b2"},
    {file = "aws_requests_auth-0.4.3-py2.py3-none-any.whl", hash = "sha256:646bc37d62140ea1c709d20148f5d43197e6bd2d63909eb36fa4bb2345759977"},
]
beautifulsoup4 = [
    {file = "beautifulsoup4-4.11.1-py3-none-any.whl", hash = "sha256:58d5c3d29f5a36ffeb94f02f0d786cd53014cf9b3b3951d42e0080d8a9498d30"},
    {file = "beautifulsoup4-4.11.1.tar.gz", hash = "sha256:ad9aa55b65ef2808eb405f46cf74df7fcb7044d5cbc26487f96eb2ef2e436693"},
]
boto3 = [
    {file = "boto3-1.24.87-py3-none-any.whl", hash = "sha256:bcc579e801774cb2c7dda87ff985feda1ae7e10591d11ef37526363139138bd4"},
    {file = "boto3-1.24.87.tar.gz", hash = "sha256:3dd7ed74d1d29dd8094a078be86ed61c45de6638fe18856f7a1ff9282b4d929e"},
]
boto3-stubs = [
    {file = "boto3-stubs-1.18.23.tar.gz", hash = "sha256:38915f107b36160ff2ba749fdb0de49d6dca4214fb16564d4f31f22f4f25099c"},
    {file = "boto3_stubs-1.18.23-py3-none-any.whl", hash = "sha256:4bed5a3aa0a3c9516791b22e9cd0aba7b93dd4d30669fc032118568bcf678a36"},
]
botocore = [
    {file = "botocore-1.27.87-py3-none-any.whl", hash = "sha256:c4cbd22056ace4c7aa99e62e8ae629865ab80cc8bbf7c6d68ccf0f768f0034b6"},
    {file = "botocore-1.27.87.tar.gz", hash = "sha256:216de9751116d0d1cc3901e26d95a5c9a30ecb6973ae6147af1cf504858d845a"},
]
botocore-stubs = [
    {file = "botocore-stubs-1.21.22.tar.gz", hash = "sha256:10d97e57cd79c66b6b78fe0fcac3ab22e421af222c03e93afe3d05bdb5dadc48"},
    {file = "botocore_stubs-1.21.22-py3-none-any.whl", hash = "sha256:41ce3ad97ffe04c07a7939367d47aa6a049f4e939e184433f44f03e7149a2920"},
]
certifi = [
    {file = "certifi-2022.9.24-py3-none-any.whl", hash = "sha256:90c1a32f1d68f940488354e36370f6cca89f0f106db09518524c88d6ed83f382"},
    {file = "certifi-2022.9.24.tar.gz", hash = "sha256:0d9c601124e5a6ba9712dbc60d9c53c21e34f5f641fe83002317394311bdce14"},
]
charset-normalizer = [
    {file = "charset-normalizer-2.1.1.tar.gz", hash = "sha256:5a3d016c7c547f69d6f81fb0db9449ce888b418b5b9952cc5e6e66843e9dd845"},
    {file = "charset_normalizer-2.1.1-py3-none-any.whl", hash = "sha256:83e9a75d1911279afd89352c68b45348559d1fc0506b054b346651b5e7fee29f"},
]
colorama = [
    {file = "colorama-0.4.5-py2.py3-none-any.whl", hash = "sha256:854bf444933e37f5824ae7bfc1e98d5bce2ebe4160d46b5edf346a89358e99da"},
    {file = "colorama-0.4.5.tar.gz", hash = "sha256:e6c6b4334fc50988a639d9b98aa429a0b57da6e17b9a44f0451f930b6967b7a4"},
]
coverage = [
    {file = "coverage-6.5.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:ef8674b0ee8cc11e2d574e3e2998aea5df5ab242e012286824ea3c6970580e53"},
    {file = "coverage-6.5.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:784f53ebc9f3fd0e2a3f6a78b2be1bd1f5575d7863e10c6e12504f240fd06660"},
    {file = "coverage-6.5.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b4a5be1748d538a710f87542f22c2cad22f80545a847ad91ce45e77417293eb4"},
    {file = "coverage-6.5.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:83516205e254a0cb77d2d7bb3632ee019d93d9f4005de31dca0a8c3667d5bc04"},
    {file = "coverage-6.5.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:af4fffaffc4067232253715065e30c5a7ec6faac36f8fc8d6f64263b15f74db0"},
    {file = "coverage-6.5.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:97117225cdd992a9c2a5515db1f66b59db634f59d0679ca1fa3fe8da32749cae"},
    {file = "coverage-6.5.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:a1170fa54185845505fbfa672f1c1ab175446c887cce8212c44149581cf2d466"},
    {file = "coverage-6.5.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:11b990d520ea75e7ee8dcab5bc908072aaada194a794db9f6d7d5cfd19661e5a"},
    {file = "coverage-6.5.0-cp310-cp310-win32.whl", hash = "sha256:5dbec3b9095749390c09ab7c89d314727f18800060d8d24e87f01fb9cfb40b32"},
    {file = "coverage-6.5.0-cp310-cp310-win_amd64.whl", hash = "sha256:59f53f1dc5b656cafb1badd0feb428c1e7bc19b867479ff72f7a9dd9b479f10e"},
    {file = "coverage-6.5.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:4a5375e28c5191ac38cca59b38edd33ef4cc914732c916f2929029b4bfb50795"},
    {file = "coverage-6.5.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c4ed2820d919351f4167e52425e096af41bfabacb1857186c1ea32ff9983ed75"},
    {file = "coverage-6.5.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:33a7da4376d5977fbf0a8ed91c4dffaaa8dbf0ddbf4c8eea500a2486d8bc4d7b"},
    {file = "coverage-6.5.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a8fb6cf131ac4070c9c5a3e21de0f7dc5a0fbe8bc77c9456ced896c12fcdad91"},
    {file = "coverage-6.5.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:a6b7d95969b8845250586f269e81e5dfdd8ff828ddeb8567a4a2eaa7313460c4"},
    {file = "coverage-6.5.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:1ef221513e6f68b69ee9e159506d583d31aa3567e0ae84eaad9d6ec1107dddaa"},
    {file = "coverage-6.5.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:cca4435eebea7962a52bdb216dec27215d0df64cf27fc1dd538415f5d2b9da6b"},
    {file = "coverage-6.5.0-cp311-cp311-win32.whl", hash = "sha256:98e8a10b7a314f454d9eff4216a9a94d143a7ee65018dd12442e898ee2310578"},
    {file = "coverage-6.5.0-cp311-cp311-win_amd64.whl", hash = "sha256:bc8ef5e043a2af066fa8cbfc6e708d58017024dc4345a1f9757b329a249f041b"},
    {file = "coverage-6.5.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:4433b90fae13f86fafff0b326453dd42fc9a639a0d9e4eec4d366436d1a41b6d"},
    {file = "coverage-6.5.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f4f05d88d9a80ad3cac6244d36dd89a3c00abc16371769f1340101d3cb899fc3"},
    {file = "coverage-6.5.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:94e2565443291bd778421856bc975d351738963071e9b8839ca1fc08b42d4bef"},
    {file = "coverage-6.5.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:027018943386e7b942fa832372ebc120155fd970837489896099f5cfa2890f79"},
    {file = "coverage-6.5.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:255758a1e3b61db372ec2736c8e2a1fdfaf563977eedbdf131de003ca5779b7d"},
    {file = "coverage-6.5.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:851cf4ff24062c6aec510a454b2584f6e998cada52d4cb58c5e233d07172e50c"},
    {file = "coverage-6.5.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:12adf310e4aafddc58afdb04d686795f33f4d7a6fa67a7a9d4ce7d6ae24d949f"},
    {file = "coverage-6.5.0-cp37-cp37m-win32.whl", hash = "sha256:b5604380f3415ba69de87a289a2b56687faa4fe04dbee0754bfcae433489316b"},
    {file = "coverage-6.5.0-cp37-cp37m-win_amd64.whl", hash = "sha256:4a8dbc1f0fbb2ae3de73eb0bdbb914180c7abfbf258e90b311dcd4f585d44bd2"},
    {file = "coverage-6.5.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:d900bb429fdfd7f511f868cedd03a6bbb142f3f9118c09b99ef8dc9bf9643c3c"},
    {file = "coverage-6.5.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:2198ea6fc548de52adc826f62cb18554caedfb1d26548c1b7c88d8f7faa8f6ba"},
    {file = "coverage-6.5.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6c4459b3de97b75e3bd6b7d4b7f0db13f17f504f3d13e2a7c623786289dd670e"},
    {file = "coverage-6.5.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:20c8ac5386253717e5ccc827caad43ed66fea0efe255727b1053a8154d952398"},
    {file = "coverage-6.5.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6b07130585d54fe8dff3d97b93b0e20290de974dc8177c320aeaf23459219c0b"},
    {file = "coverage-6.5.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:dbdb91cd8c048c2b09eb17713b0c12a54fbd587d79adcebad543bc0cd9a3410b"},
    {file = "coverage-6.5.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:de3001a203182842a4630e7b8d1a2c7c07ec1b45d3084a83d5d227a3806f530f"},
    {file = "coverage-6.5.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:e07f4a4a9b41583d6eabec04f8b68076ab3cd44c20bd29332c6572dda36f372e"},
    {file = "coverage-6.5.0-cp38-cp38-win32.whl", hash = "sha256:6d4817234349a80dbf03640cec6109cd90cba068330703fa65ddf56b60223a6d"},
    {file = "coverage-6.5.0-cp38-cp38-win_amd64.whl", hash = "sha256:7ccf362abd726b0410bf8911c31fbf97f09f8f1061f8c1cf03dfc4b6372848f6"},
    {file = "coverage-6.5.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:633713d70ad6bfc49b34ead4060531658dc6dfc9b3eb7d8a716d5873377ab745"},
    {file = "coverage-6.5.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:95203854f974e07af96358c0b261f1048d8e1083f2de9b1c565e1be4a3a48cfc"},
    {file = "coverage-6.5.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b9023e237f4c02ff739581ef35969c3739445fb059b060ca51771e69101efffe"},
    {file = "coverage-6.5.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:265de0fa6778d07de30bcf4d9dc471c3dc4314a23a3c6603d356a3c9abc2dfcf"},
    {file = "coverage-6.5.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8f830ed581b45b82451a40faabb89c84e1a998124ee4212d440e9c6cf70083e5"},
    {file = "coverage-6.5.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:7b6be138d61e458e18d8e6ddcddd36dd96215edfe5f1168de0b1b32635839b62"},
    {file = "coverage-6.5.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:42eafe6778551cf006a7c43153af1211c3aaab658d4d66fa5fcc021613d02518"},
    {file = "coverage-6.5.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:723e8130d4ecc8f56e9a611e73b31219595baa3bb252d539206f7bbbab6ffc1f"},
    {file = "coverage-6.5.0-cp39-cp39-win32.whl", hash = "sha256:d9ecf0829c6a62b9b573c7bb6d4dcd6ba8b6f80be9ba4fc7ed50bf4ac9aecd72"},
    {file = "coverage-6.5.0-cp39-cp39-win_amd64.whl", hash = "sha256:fc2af30ed0d5ae0b1abdb4ebdce598eafd5b35397d4d75deb341a614d333d987"},
    {file = "coverage-6.5.0-pp36.pp37.pp38-none-any.whl", hash = "sha256:1431986dac3923c5945271f169f59c45b8802a114c8f548d611f2015133df77a"},
    {file = "coverage-6.5.0.tar.gz", hash = "sha256:f642e90754ee3e06b0e7e51bce3379590e76b7f76b708e1a71ff043f87025c84"},
]
coveralls = [
    {file = "coveralls-3.3.1-py2.py3-none-any.whl", hash = "sha256:f42015f31d386b351d4226389b387ae173207058832fbf5c8ec4b40e27b16026"},
    {file = "coveralls-3.3.1.tar.gz", hash = "sha256:b32a8bb5d2df585207c119d6c01567b81fba690c9c10a753bfe27a335bfc43ea"},
]
docker = [
    {file = "docker-4.4.4-py2.py3-none-any.whl", hash = "sha256:f3607d5695be025fa405a12aca2e5df702a57db63790c73b927eb6a94aac60af"},
    {file = "docker-4.4.4.tar.gz", hash = "sha256:d3393c878f575d3a9ca3b94471a3c89a6d960b35feb92f033c0de36cc9d934db"},
]
docopt = [
    {file = "docopt-0.6.2.tar.gz", hash = "sha256:49b3a825280bd66b3aa83585ef59c4a8c82f2c8a522dbe754a8bc8d08c85c491"},
]
elasticsearch = [
    {file = "elasticsearch-7.13.4-py2.py3-none-any.whl", hash = "sha256:5920df0ab2630778680376d86bea349dc99860977eec9b6d2bd0860f337313f2"},
    {file = "elasticsearch-7.13.4.tar.gz", hash = "sha256:52dda85f76eeb85ec873bf9ffe0ba6849e544e591f66d4048a5e48016de268e0"},
]
flake8 = [
    {file = "flake8-5.0.4-py2.py3-none-any.whl", hash = "sha256:7a1cf6b73744f5806ab95e526f6f0d8c01c66d7bbe349562d22dfca20610b248"},
    {file = "flake8-5.0.4.tar.gz", hash = "sha256:6fbe320aad8d6b95cec8b8e47bc933004678dc63095be98528b7bdd2a9f510db"},
]
flaky = [
    {file = "flaky-3.7.0-py2.py3-none-any.whl", hash = "sha256:d6eda73cab5ae7364504b7c44670f70abed9e75f77dd116352f662817592ec9c"},
    {file = "flaky-3.7.0.tar.gz", hash = "sha256:3ad100780721a1911f57a165809b7ea265a7863305acb66708220820caf8aa0d"},
]
gitdb = [
    {file = "gitdb-4.0.9-py3-none-any.whl", hash = "sha256:8033ad4e853066ba6ca92050b9df2f89301b8fc8bf7e9324d412a63f8bf1a8fd"},
    {file = "gitdb-4.0.9.tar.gz", hash = "sha256:bac2fd45c0a1c9cf619e63a90d62bdc63892ef92387424b855792a6cabe789aa"},
]
gitpython = [
    {file = "GitPython-3.1.30-py3-none-any.whl", hash = "sha256:cd455b0000615c60e286208ba540271af9fe531fa6a87cc590a7298785ab2882"},
    {file = "GitPython-3.1.30.tar.gz", hash = "sha256:769c2d83e13f5d938b7688479da374c4e3d49f71549aaf462b646db9602ea6f8"},
]
idna = [
    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},
    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},
]
importlib-metadata = [
    {file = "importlib_metadata-4.2.0-py3-none-any.whl", hash = "sha256:057e92c15bc8d9e8109738a48db0ccb31b4d9d5cfbee5a8670879a30be66304b"},
    {file = "importlib_metadata-4.2.0.tar.gz", hash = "sha256:b7e52a1f8dec14a75ea73e0891f3060099ca1d8e6a462a4dff11c3e119ea1b31"},
]
iniconfig = [
    {file = "iniconfig-1.1.1-py2.py3-none-any.whl", hash = "sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3"},
    {file = "iniconfig-1.1.1.tar.gz", hash = "sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"},
]
jmespath = [
    {file = "jmespath-1.0.1-py3-none-any.whl", hash = "sha256:02e2e4cc71b5bcab88332eebf907519190dd9e6e82107fa7f83b1003a6252980"},
    {file = "jmespath-1.0.1.tar.gz", hash = "sha256:90261b206d6defd58fdd5e85f478bf633a2901798906be2ad389150c5c60edbe"},
]
mccabe = [
    {file = "mccabe-0.7.0-py2.py3-none-any.whl", hash = "sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e"},
    {file = "mccabe-0.7.0.tar.gz", hash = "sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325"},
]
opensearch-py = [
    {file = "opensearch-py-2.0.1.tar.gz", hash = "sha256:884be795af6a1d31e63cf45fceb51334108e4c74eac73a5df18ce9851e9c9da4"},
    {file = "opensearch_py-2.0.1-py2.py3-none-any.whl", hash = "sha256:daa5eb2279b89bf15d63312a922bd5ab7f266d3c2737e48dec6ff862d7b1838a"},
]
packaging = [
    {file = "packaging-21.3-py3-none-any.whl", hash = "sha256:ef103e05f519cdc783ae24ea4e2e0f508a9c99b2d4969652eed6a2e1ea5bd522"},
    {file = "packaging-21.3.tar.gz", hash = "sha256:dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb"},
]
pluggy = [
    {file = "pluggy-1.0.0-py2.py3-none-any.whl", hash = "sha256:74134bbf457f031a36d68416e1509f34bd5ccc019f0bcc952c7b909d06b37bd3"},
    {file = "pluggy-1.0.0.tar.gz", hash = "sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159"},
]
py = [
    {file = "py-1.11.0-py2.py3-none-any.whl", hash = "sha256:607c53218732647dff4acdfcd50cb62615cedf612e72d1724fb1a0cc6405b378"},
    {file = "py-1.11.0.tar.gz", hash = "sha256:51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719"},
]
pycodestyle = [
    {file = "pycodestyle-2.9.1-py2.py3-none-any.whl", hash = "sha256:d1735fc58b418fd7c5f658d28d943854f8a849b01a5d0a1e6f3f3fdd0166804b"},
    {file = "pycodestyle-2.9.1.tar.gz", hash = "sha256:2c9607871d58c76354b697b42f5d57e1ada7d261c261efac224b664affdc5785"},
]
pyflakes = [
    {file = "pyflakes-2.5.0-py2.py3-none-any.whl", hash = "sha256:4579f67d887f804e67edb544428f264b7b24f435b263c4614f384135cea553d2"},
    {file = "pyflakes-2.5.0.tar.gz", hash = "sha256:491feb020dca48ccc562a8c0cbe8df07ee13078df59813b83959cbdada312ea3"},
]
pyparsing = [
    {file = "pyparsing-3.0.9-py3-none-any.whl", hash = "sha256:5026bae9a10eeaefb61dab2f09052b9f4307d44aee4eda64b309723d8d206bbc"},
    {file = "pyparsing-3.0.9.tar.gz", hash = "sha256:2b020ecf7d21b687f219b71ecad3631f644a47f01403fa1d1036b0c6416d70fb"},
]
pytest = [
    {file = "pytest-7.1.3-py3-none-any.whl", hash = "sha256:1377bda3466d70b55e3f5cecfa55bb7cfcf219c7964629b967c37cf0bda818b7"},
    {file = "pytest-7.1.3.tar.gz", hash = "sha256:4f365fec2dff9c1162f834d9f18af1ba13062db0c708bf7b946f8a5c76180c39"},
]
pytest-cov = [
    {file = "pytest-cov-4.0.0.tar.gz", hash = "sha256:996b79efde6433cdbd0088872dbc5fb3ed7fe1578b68cdbba634f14bb8dd0470"},
    {file = "pytest_cov-4.0.0-py3-none-any.whl", hash = "sha256:2feb1b751d66a8bd934e5edfa2e961d11309dc37b73b0eabe73b5945fee20f6b"},
]
pytest-mock = [
    {file = "pytest-mock-3.10.0.tar.gz", hash = "sha256:fbbdb085ef7c252a326fd8cdcac0aa3b1333d8811f131bdcc701002e1be7ed4f"},
    {file = "pytest_mock-3.10.0-py3-none-any.whl", hash = "sha256:f4c973eeae0282963eb293eb173ce91b091a79c1334455acfac9ddee8a1c784b"},
]
pytest-runner = [
    {file = "pytest-runner-6.0.0.tar.gz", hash = "sha256:b4d85362ed29b4c348678de797df438f0f0509497ddb8c647096c02a6d87b685"},
    {file = "pytest_runner-6.0.0-py3-none-any.whl", hash = "sha256:4c059cf11cf4306e369c0f8f703d1eaf8f32fad370f41deb5f007044656aca6b"},
]
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
pytz = [
    {file = "pytz-2022.4-py2.py3-none-any.whl", hash = "sha256:2c0784747071402c6e99f0bafdb7da0fa22645f06554c7ae06bf6358897e9c91"},
    {file = "pytz-2022.4.tar.gz", hash = "sha256:48ce799d83b6f8aab2020e369b627446696619e79645419610b9facd909b3174"},
]
pywin32 = [
    {file = "pywin32-227-cp27-cp27m-win32.whl", hash = "sha256:371fcc39416d736401f0274dd64c2302728c9e034808e37381b5e1b22be4a6b0"},
    {file = "pywin32-227-cp27-cp27m-win_amd64.whl", hash = "sha256:4cdad3e84191194ea6d0dd1b1b9bdda574ff563177d2adf2b4efec2a244fa116"},
    {file = "pywin32-227-cp35-cp35m-win32.whl", hash = "sha256:f4c5be1a293bae0076d93c88f37ee8da68136744588bc5e2be2f299a34ceb7aa"},
    {file = "pywin32-227-cp35-cp35m-win_amd64.whl", hash = "sha256:a929a4af626e530383a579431b70e512e736e9588106715215bf685a3ea508d4"},
    {file = "pywin32-227-cp36-cp36m-win32.whl", hash = "sha256:300a2db938e98c3e7e2093e4491439e62287d0d493fe07cce110db070b54c0be"},
    {file = "pywin32-227-cp36-cp36m-win_amd64.whl", hash = "sha256:9b31e009564fb95db160f154e2aa195ed66bcc4c058ed72850d047141b36f3a2"},
    {file = "pywin32-227-cp37-cp37m-win32.whl", hash = "sha256:47a3c7551376a865dd8d095a98deba954a98f326c6fe3c72d8726ca6e6b15507"},
    {file = "pywin32-227-cp37-cp37m-win_amd64.whl", hash = "sha256:31f88a89139cb2adc40f8f0e65ee56a8c585f629974f9e07622ba80199057511"},
    {file = "pywin32-227-cp38-cp38-win32.whl", hash = "sha256:7f18199fbf29ca99dff10e1f09451582ae9e372a892ff03a28528a24d55875bc"},
    {file = "pywin32-227-cp38-cp38-win_amd64.whl", hash = "sha256:7c1ae32c489dc012930787f06244426f8356e129184a02c25aef163917ce158e"},
    {file = "pywin32-227-cp39-cp39-win32.whl", hash = "sha256:c054c52ba46e7eb6b7d7dfae4dbd987a1bb48ee86debe3f245a2884ece46e295"},
    {file = "pywin32-227-cp39-cp39-win_amd64.whl", hash = "sha256:f27cec5e7f588c3d1051651830ecc00294f90728d19c3bf6916e6dba93ea357c"},
]
pyyaml = [
    {file = "PyYAML-5.4.1-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:3b2b1824fe7112845700f815ff6a489360226a5609b96ec2190a45e62a9fc922"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win32.whl", hash = "sha256:129def1b7c1bf22faffd67b8f3724645203b79d8f4cc81f674654d9902cb4393"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win_amd64.whl", hash = "sha256:4465124ef1b18d9ace298060f4eccc64b0850899ac4ac53294547536533800c8"},
    {file = "PyYAML-5.4.1-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:bb4191dfc9306777bc594117aee052446b3fa88737cd13b7188d0e7aa8162185"},
    {file = "PyYAML-5.4.1-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:6c78645d400265a062508ae399b60b8c167bf003db364ecb26dcab2bda048253"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:4e0583d24c881e14342eaf4ec5fbc97f934b999a6828693a99157fde912540cc"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_aarch64.whl", hash = "sha256:72a01f726a9c7851ca9bfad6fd09ca4e090a023c00945ea05ba1638c09dc3347"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_s390x.whl", hash = "sha256:895f61ef02e8fed38159bb70f7e100e00f471eae2bc838cd0f4ebb21e28f8541"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win32.whl", hash = "sha256:3bd0e463264cf257d1ffd2e40223b197271046d09dadf73a0fe82b9c1fc385a5"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win_amd64.whl", hash = "sha256:e4fac90784481d221a8e4b1162afa7c47ed953be40d31ab4629ae917510051df"},
    {file = "PyYAML-5.4.1-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:5accb17103e43963b80e6f837831f38d314a0495500067cb25afab2e8d7a4018"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:e1d4970ea66be07ae37a3c2e48b5ec63f7ba6804bdddfdbd3cfd954d25a82e63"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_aarch64.whl", hash = "sha256:cb333c16912324fd5f769fff6bc5de372e9e7a202247b48870bc251ed40239aa"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_s390x.whl", hash = "sha256:fe69978f3f768926cfa37b867e3843918e012cf83f680806599ddce33c2c68b0"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win32.whl", hash = "sha256:dd5de0646207f053eb0d6c74ae45ba98c3395a571a2891858e87df7c9b9bd51b"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win_amd64.whl", hash = "sha256:08682f6b72c722394747bddaf0aa62277e02557c0fd1c42cb853016a38f8dedf"},
    {file = "PyYAML-5.4.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:d2d9808ea7b4af864f35ea216be506ecec180628aced0704e34aca0b040ffe46"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:8c1be557ee92a20f184922c7b6424e8ab6691788e6d86137c5d93c1a6ec1b8fb"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_aarch64.whl", hash = "sha256:fd7f6999a8070df521b6384004ef42833b9bd62cfee11a09bda1079b4b704247"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_s390x.whl", hash = "sha256:bfb51918d4ff3d77c1c856a9699f8492c612cde32fd3bcd344af9be34999bfdc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win32.whl", hash = "sha256:fa5ae20527d8e831e8230cbffd9f8fe952815b2b7dae6ffec25318803a7528fc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win_amd64.whl", hash = "sha256:0f5f5786c0e09baddcd8b4b45f20a7b5d61a7e7e99846e3c799b05c7c53fa696"},
    {file = "PyYAML-5.4.1-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:294db365efa064d00b8d1ef65d8ea2c3426ac366c0c4368d930bf1c5fb497f77"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux1_x86_64.whl", hash = "sha256:74c1485f7707cf707a7aef42ef6322b8f97921bd89be2ab6317fd782c2d53183"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_aarch64.whl", hash = "sha256:d483ad4e639292c90170eb6f7783ad19490e7a8defb3e46f97dfe4bacae89122"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_s390x.whl", hash = "sha256:fdc842473cd33f45ff6bce46aea678a54e3d21f1b61a7750ce3c498eedfe25d6"},
    {file = "PyYAML-5.4.1-cp39-cp39-win32.whl", hash = "sha256:49d4cdd9065b9b6e206d0595fee27a96b5dd22618e7520c33204a4a3239d5b10"},
    {file = "PyYAML-5.4.1-cp39-cp39-win_amd64.whl", hash = "sha256:c20cfa2d49991c8b4147af39859b167664f2ad4561704ee74c1de03318e898db"},
    {file = "PyYAML-5.4.1.tar.gz", hash = "sha256:607774cbba28732bfa802b54baa7484215f530991055bb562efbed5b2f20a45e"},
]
requests = [
    {file = "requests-2.28.1-py3-none-any.whl", hash = "sha256:8fefa2a1a1365bf5520aac41836fbee479da67864514bdb821f31ce07ce65349"},
    {file = "requests-2.28.1.tar.gz", hash = "sha256:7c5599b102feddaa661c826c56ab4fee28bfd17f5abca1ebbe3e7f19d7c97983"},
]
rfc3986 = [
    {file = "rfc3986-1.5.0-py2.py3-none-any.whl", hash = "sha256:a86d6e1f5b1dc238b218b012df0aa79409667bb209e58da56d0b94704e712a97"},
    {file = "rfc3986-1.5.0.tar.gz", hash = "sha256:270aaf10d87d0d4e095063c65bf3ddbc6ee3d0b226328ce21e036f946e421835"},
]
s3transfer = [
    {file = "s3transfer-0.6.0-py3-none-any.whl", hash = "sha256:06176b74f3a15f61f1b4f25a1fc29a4429040b7647133a463da8fa5bd28d5ecd"},
    {file = "s3transfer-0.6.0.tar.gz", hash = "sha256:2ed07d3866f523cc561bf4a00fc5535827981b117dd7876f036b0c1aca42c947"},
]
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
smmap = [
    {file = "smmap-5.0.0-py3-none-any.whl", hash = "sha256:2aba19d6a040e78d8b09de5c57e96207b09ed71d8e55ce0959eeee6c8e190d94"},
    {file = "smmap-5.0.0.tar.gz", hash = "sha256:c840e62059cd3be204b0c9c9f74be2c09d5648eddd4580d9314c3ecde0b30936"},
]
soupsieve = [
    {file = "soupsieve-2.3.2.post1-py3-none-any.whl", hash = "sha256:3b2503d3c7084a42b1ebd08116e5f81aadfaea95863628c80a3b774a11b7c759"},
    {file = "soupsieve-2.3.2.post1.tar.gz", hash = "sha256:fc53893b3da2c33de295667a0e19f078c14bf86544af307354de5fcf12a3f30d"},
]
structlog = [
    {file = "structlog-19.2.0-py2.py3-none-any.whl", hash = "sha256:6640e6690fc31d5949bc614c1a630464d3aaa625284aeb7c6e486c3010d73e12"},
    {file = "structlog-19.2.0.tar.gz", hash = "sha256:4287058cf4ce1a59bc5dea290d6386d37f29a37529c9a51cdf7387e51710152b"},
]
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
tomli = [
    {file = "tomli-2.0.1-py3-none-any.whl", hash = "sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc"},
    {file = "tomli-2.0.1.tar.gz", hash = "sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f"},
]
typing-extensions = [
    {file = "typing_extensions-4.3.0-py3-none-any.whl", hash = "sha256:25642c956049920a5aa49edcdd6ab1e06d7e5d467fc00e0506c44ac86fbfca02"},
    {file = "typing_extensions-4.3.0.tar.gz", hash = "sha256:e6d2677a32f47fc7eb2795db1dd15c1f34eff616bcaf2cfb5e997f854fa1c4a6"},
]
urllib3 = [
    {file = "urllib3-1.26.12-py2.py3-none-any.whl", hash = "sha256:b930dd878d5a8afb066a637fbb35144fe7901e3b209d1cd4f524bd0e9deee997"},
    {file = "urllib3-1.26.12.tar.gz", hash = "sha256:3fa96cf423e6987997fc326ae8df396db2a8b7c667747d47ddd8ecba91f4a74e"},
]
waitress = [
    {file = "waitress-2.1.2-py3-none-any.whl", hash = "sha256:7500c9625927c8ec60f54377d590f67b30c8e70ef4b8894214ac6e4cad233d2a"},
    {file = "waitress-2.1.2.tar.gz", hash = "sha256:780a4082c5fbc0fde6a2fcfe5e26e6efc1e8f425730863c04085769781f51eba"},
]
webob = [
    {file = "WebOb-1.8.7-py2.py3-none-any.whl", hash = "sha256:73aae30359291c14fa3b956f8b5ca31960e420c28c1bec002547fb04928cf89b"},
    {file = "WebOb-1.8.7.tar.gz", hash = "sha256:b64ef5141be559cfade448f044fa45c2260351edcb6a8ef6b7e00c7dcef0c323"},
]
websocket-client = [
    {file = "websocket-client-1.4.1.tar.gz", hash = "sha256:f9611eb65c8241a67fb373bef040b3cf8ad377a9f6546a12b620b6511e8ea9ef"},
    {file = "websocket_client-1.4.1-py3-none-any.whl", hash = "sha256:398909eb7e261f44b8f4bd474785b6ec5f5b499d4953342fe9755e01ef624090"},
]
webtest = [
    {file = "WebTest-2.0.35-py2.py3-none-any.whl", hash = "sha256:44ddfe99b5eca4cf07675e7222c81dd624d22f9a26035d2b93dc8862dc1153c6"},
    {file = "WebTest-2.0.35.tar.gz", hash = "sha256:aac168b5b2b4f200af4e35867cf316712210e3d5db81c1cbdff38722647bb087"},
]
zipp = [
    {file = "zipp-3.8.1-py3-none-any.whl", hash = "sha256:47c40d7fe183a6f21403a199b3e4192cca5774656965b0a4988ad2f8feb5f009"},
    {file = "zipp-3.8.1.tar.gz", hash = "sha256:05b45f1ee8f807d0cc928485ca40a07cb491cf092ff587c0df9cb1fd154848d2"},
]
