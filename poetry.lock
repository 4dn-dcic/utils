[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "aws-requests-auth"
version = "0.4.3"
description = "AWS signature version 4 signing process for the python requests module"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=0.14.0"

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "boto3"
version = "1.23.10"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.26.10,<1.27.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.5.0,<0.6.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "boto3-stubs"
version = "1.18.23"
description = "Type annotations for boto3 1.18.23, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
botocore-stubs = "*"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.18.18)"]
acm = ["mypy-boto3-acm (>=1.18.18)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.18.18)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.18.18)"]
all = ["mypy-boto3-accessanalyzer (>=1.18.18)", "mypy-boto3-acm (>=1.18.18)", "mypy-boto3-acm-pca (>=1.18.18)", "mypy-boto3-alexaforbusiness (>=1.18.18)", "mypy-boto3-amp (>=1.18.18)", "mypy-boto3-amplify (>=1.18.18)", "mypy-boto3-amplifybackend (>=1.18.18)", "mypy-boto3-apigateway (>=1.18.18)", "mypy-boto3-apigatewaymanagementapi (>=1.18.18)", "mypy-boto3-apigatewayv2 (>=1.18.18)", "mypy-boto3-appconfig (>=1.18.18)", "mypy-boto3-appflow (>=1.18.18)", "mypy-boto3-appintegrations (>=1.18.18)", "mypy-boto3-application-autoscaling (>=1.18.18)", "mypy-boto3-application-insights (>=1.18.18)", "mypy-boto3-applicationcostprofiler (>=1.18.18)", "mypy-boto3-appmesh (>=1.18.18)", "mypy-boto3-apprunner (>=1.18.18)", "mypy-boto3-appstream (>=1.18.18)", "mypy-boto3-appsync (>=1.18.18)", "mypy-boto3-athena (>=1.18.18)", "mypy-boto3-auditmanager (>=1.18.18)", "mypy-boto3-autoscaling (>=1.18.18)", "mypy-boto3-autoscaling-plans (>=1.18.18)", "mypy-boto3-backup (>=1.18.18)", "mypy-boto3-batch (>=1.18.18)", "mypy-boto3-braket (>=1.18.18)", "mypy-boto3-budgets (>=1.18.18)", "mypy-boto3-ce (>=1.18.18)", "mypy-boto3-chime (>=1.18.18)", "mypy-boto3-chime-sdk-identity (>=1.18.18)", "mypy-boto3-chime-sdk-messaging (>=1.18.18)", "mypy-boto3-cloud9 (>=1.18.18)", "mypy-boto3-clouddirectory (>=1.18.18)", "mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-cloudfront (>=1.18.18)", "mypy-boto3-cloudhsm (>=1.18.18)", "mypy-boto3-cloudhsmv2 (>=1.18.18)", "mypy-boto3-cloudsearch (>=1.18.18)", "mypy-boto3-cloudsearchdomain (>=1.18.18)", "mypy-boto3-cloudtrail (>=1.18.18)", "mypy-boto3-cloudwatch (>=1.18.18)", "mypy-boto3-codeartifact (>=1.18.18)", "mypy-boto3-codebuild (>=1.18.18)", "mypy-boto3-codecommit (>=1.18.18)", "mypy-boto3-codedeploy (>=1.18.18)", "mypy-boto3-codeguru-reviewer (>=1.18.18)", "mypy-boto3-codeguruprofiler (>=1.18.18)", "mypy-boto3-codepipeline (>=1.18.18)", "mypy-boto3-codestar (>=1.18.18)", "mypy-boto3-codestar-connections (>=1.18.18)", "mypy-boto3-codestar-notifications (>=1.18.18)", "mypy-boto3-cognito-identity (>=1.18.18)", "mypy-boto3-cognito-idp (>=1.18.18)", "mypy-boto3-cognito-sync (>=1.18.18)", "mypy-boto3-comprehend (>=1.18.18)", "mypy-boto3-comprehendmedical (>=1.18.18)", "mypy-boto3-compute-optimizer (>=1.18.18)", "mypy-boto3-config (>=1.18.18)", "mypy-boto3-connect (>=1.18.18)", "mypy-boto3-connect-contact-lens (>=1.18.18)", "mypy-boto3-connectparticipant (>=1.18.18)", "mypy-boto3-cur (>=1.18.18)", "mypy-boto3-customer-profiles (>=1.18.18)", "mypy-boto3-databrew (>=1.18.18)", "mypy-boto3-dataexchange (>=1.18.18)", "mypy-boto3-datapipeline (>=1.18.18)", "mypy-boto3-datasync (>=1.18.18)", "mypy-boto3-dax (>=1.18.18)", "mypy-boto3-detective (>=1.18.18)", "mypy-boto3-devicefarm (>=1.18.18)", "mypy-boto3-devops-guru (>=1.18.18)", "mypy-boto3-directconnect (>=1.18.18)", "mypy-boto3-discovery (>=1.18.18)", "mypy-boto3-dlm (>=1.18.18)", "mypy-boto3-dms (>=1.18.18)", "mypy-boto3-docdb (>=1.18.18)", "mypy-boto3-ds (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-dynamodbstreams (>=1.18.18)", "mypy-boto3-ebs (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-ec2-instance-connect (>=1.18.18)", "mypy-boto3-ecr (>=1.18.18)", "mypy-boto3-ecr-public (>=1.18.18)", "mypy-boto3-ecs (>=1.18.18)", "mypy-boto3-efs (>=1.18.18)", "mypy-boto3-eks (>=1.18.18)", "mypy-boto3-elastic-inference (>=1.18.18)", "mypy-boto3-elasticache (>=1.18.18)", "mypy-boto3-elasticbeanstalk (>=1.18.18)", "mypy-boto3-elastictranscoder (>=1.18.18)", "mypy-boto3-elb (>=1.18.18)", "mypy-boto3-elbv2 (>=1.18.18)", "mypy-boto3-emr (>=1.18.18)", "mypy-boto3-emr-containers (>=1.18.18)", "mypy-boto3-es (>=1.18.18)", "mypy-boto3-events (>=1.18.18)", "mypy-boto3-finspace (>=1.18.18)", "mypy-boto3-finspace-data (>=1.18.18)", "mypy-boto3-firehose (>=1.18.18)", "mypy-boto3-fis (>=1.18.18)", "mypy-boto3-fms (>=1.18.18)", "mypy-boto3-forecast (>=1.18.18)", "mypy-boto3-forecastquery (>=1.18.18)", "mypy-boto3-frauddetector (>=1.18.18)", "mypy-boto3-fsx (>=1.18.18)", "mypy-boto3-gamelift (>=1.18.18)", "mypy-boto3-glacier (>=1.18.18)", "mypy-boto3-globalaccelerator (>=1.18.18)", "mypy-boto3-glue (>=1.18.18)", "mypy-boto3-greengrass (>=1.18.18)", "mypy-boto3-greengrassv2 (>=1.18.18)", "mypy-boto3-groundstation (>=1.18.18)", "mypy-boto3-guardduty (>=1.18.18)", "mypy-boto3-health (>=1.18.18)", "mypy-boto3-healthlake (>=1.18.18)", "mypy-boto3-honeycode (>=1.18.18)", "mypy-boto3-iam (>=1.18.18)", "mypy-boto3-identitystore (>=1.18.18)", "mypy-boto3-imagebuilder (>=1.18.18)", "mypy-boto3-importexport (>=1.18.18)", "mypy-boto3-inspector (>=1.18.18)", "mypy-boto3-iot (>=1.18.18)", "mypy-boto3-iot-data (>=1.18.18)", "mypy-boto3-iot-jobs-data (>=1.18.18)", "mypy-boto3-iot1click-devices (>=1.18.18)", "mypy-boto3-iot1click-projects (>=1.18.18)", "mypy-boto3-iotanalytics (>=1.18.18)", "mypy-boto3-iotdeviceadvisor (>=1.18.18)", "mypy-boto3-iotevents (>=1.18.18)", "mypy-boto3-iotevents-data (>=1.18.18)", "mypy-boto3-iotfleethub (>=1.18.18)", "mypy-boto3-iotsecuretunneling (>=1.18.18)", "mypy-boto3-iotsitewise (>=1.18.18)", "mypy-boto3-iotthingsgraph (>=1.18.18)", "mypy-boto3-iotwireless (>=1.18.18)", "mypy-boto3-ivs (>=1.18.18)", "mypy-boto3-kafka (>=1.18.18)", "mypy-boto3-kendra (>=1.18.18)", "mypy-boto3-kinesis (>=1.18.18)", "mypy-boto3-kinesis-video-archived-media (>=1.18.18)", "mypy-boto3-kinesis-video-media (>=1.18.18)", "mypy-boto3-kinesis-video-signaling (>=1.18.18)", "mypy-boto3-kinesisanalytics (>=1.18.18)", "mypy-boto3-kinesisanalyticsv2 (>=1.18.18)", "mypy-boto3-kinesisvideo (>=1.18.18)", "mypy-boto3-kms (>=1.18.18)", "mypy-boto3-lakeformation (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-lex-models (>=1.18.18)", "mypy-boto3-lex-runtime (>=1.18.18)", "mypy-boto3-lexv2-models (>=1.18.18)", "mypy-boto3-lexv2-runtime (>=1.18.18)", "mypy-boto3-license-manager (>=1.18.18)", "mypy-boto3-lightsail (>=1.18.18)", "mypy-boto3-location (>=1.18.18)", "mypy-boto3-logs (>=1.18.18)", "mypy-boto3-lookoutequipment (>=1.18.18)", "mypy-boto3-lookoutmetrics (>=1.18.18)", "mypy-boto3-lookoutvision (>=1.18.18)", "mypy-boto3-machinelearning (>=1.18.18)", "mypy-boto3-macie (>=1.18.18)", "mypy-boto3-macie2 (>=1.18.18)", "mypy-boto3-managedblockchain (>=1.18.18)", "mypy-boto3-marketplace-catalog (>=1.18.18)", "mypy-boto3-marketplace-entitlement (>=1.18.18)", "mypy-boto3-marketplacecommerceanalytics (>=1.18.18)", "mypy-boto3-mediaconnect (>=1.18.18)", "mypy-boto3-mediaconvert (>=1.18.18)", "mypy-boto3-medialive (>=1.18.18)", "mypy-boto3-mediapackage (>=1.18.18)", "mypy-boto3-mediapackage-vod (>=1.18.18)", "mypy-boto3-mediastore (>=1.18.18)", "mypy-boto3-mediastore-data (>=1.18.18)", "mypy-boto3-mediatailor (>=1.18.18)", "mypy-boto3-meteringmarketplace (>=1.18.18)", "mypy-boto3-mgh (>=1.18.18)", "mypy-boto3-mgn (>=1.18.18)", "mypy-boto3-migrationhub-config (>=1.18.18)", "mypy-boto3-mobile (>=1.18.18)", "mypy-boto3-mq (>=1.18.18)", "mypy-boto3-mturk (>=1.18.18)", "mypy-boto3-mwaa (>=1.18.18)", "mypy-boto3-neptune (>=1.18.18)", "mypy-boto3-network-firewall (>=1.18.18)", "mypy-boto3-networkmanager (>=1.18.18)", "mypy-boto3-nimble (>=1.18.18)", "mypy-boto3-opsworks (>=1.18.18)", "mypy-boto3-opsworkscm (>=1.18.18)", "mypy-boto3-organizations (>=1.18.18)", "mypy-boto3-outposts (>=1.18.18)", "mypy-boto3-personalize (>=1.18.18)", "mypy-boto3-personalize-events (>=1.18.18)", "mypy-boto3-personalize-runtime (>=1.18.18)", "mypy-boto3-pi (>=1.18.18)", "mypy-boto3-pinpoint (>=1.18.18)", "mypy-boto3-pinpoint-email (>=1.18.18)", "mypy-boto3-pinpoint-sms-voice (>=1.18.18)", "mypy-boto3-polly (>=1.18.18)", "mypy-boto3-pricing (>=1.18.18)", "mypy-boto3-proton (>=1.18.18)", "mypy-boto3-qldb (>=1.18.18)", "mypy-boto3-qldb-session (>=1.18.18)", "mypy-boto3-quicksight (>=1.18.18)", "mypy-boto3-ram (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-rds-data (>=1.18.18)", "mypy-boto3-redshift (>=1.18.18)", "mypy-boto3-redshift-data (>=1.18.18)", "mypy-boto3-rekognition (>=1.18.18)", "mypy-boto3-resource-groups (>=1.18.18)", "mypy-boto3-resourcegroupstaggingapi (>=1.18.18)", "mypy-boto3-robomaker (>=1.18.18)", "mypy-boto3-route53 (>=1.18.18)", "mypy-boto3-route53-recovery-cluster (>=1.18.18)", "mypy-boto3-route53-recovery-control-config (>=1.18.18)", "mypy-boto3-route53-recovery-readiness (>=1.18.18)", "mypy-boto3-route53domains (>=1.18.18)", "mypy-boto3-route53resolver (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-s3control (>=1.18.18)", "mypy-boto3-s3outposts (>=1.18.18)", "mypy-boto3-sagemaker (>=1.18.18)", "mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)", "mypy-boto3-sagemaker-edge (>=1.18.18)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)", "mypy-boto3-sagemaker-runtime (>=1.18.18)", "mypy-boto3-savingsplans (>=1.18.18)", "mypy-boto3-schemas (>=1.18.18)", "mypy-boto3-sdb (>=1.18.18)", "mypy-boto3-secretsmanager (>=1.18.18)", "mypy-boto3-securityhub (>=1.18.18)", "mypy-boto3-serverlessrepo (>=1.18.18)", "mypy-boto3-service-quotas (>=1.18.18)", "mypy-boto3-servicecatalog (>=1.18.18)", "mypy-boto3-servicecatalog-appregistry (>=1.18.18)", "mypy-boto3-servicediscovery (>=1.18.18)", "mypy-boto3-ses (>=1.18.18)", "mypy-boto3-sesv2 (>=1.18.18)", "mypy-boto3-shield (>=1.18.18)", "mypy-boto3-signer (>=1.18.18)", "mypy-boto3-sms (>=1.18.18)", "mypy-boto3-sms-voice (>=1.18.18)", "mypy-boto3-snow-device-management (>=1.18.18)", "mypy-boto3-snowball (>=1.18.18)", "mypy-boto3-sns (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)", "mypy-boto3-ssm (>=1.18.18)", "mypy-boto3-ssm-contacts (>=1.18.18)", "mypy-boto3-ssm-incidents (>=1.18.18)", "mypy-boto3-sso (>=1.18.18)", "mypy-boto3-sso-admin (>=1.18.18)", "mypy-boto3-sso-oidc (>=1.18.18)", "mypy-boto3-stepfunctions (>=1.18.18)", "mypy-boto3-storagegateway (>=1.18.18)", "mypy-boto3-sts (>=1.18.18)", "mypy-boto3-support (>=1.18.18)", "mypy-boto3-swf (>=1.18.18)", "mypy-boto3-synthetics (>=1.18.18)", "mypy-boto3-textract (>=1.18.18)", "mypy-boto3-timestream-query (>=1.18.18)", "mypy-boto3-timestream-write (>=1.18.18)", "mypy-boto3-transcribe (>=1.18.18)", "mypy-boto3-transfer (>=1.18.18)", "mypy-boto3-translate (>=1.18.18)", "mypy-boto3-waf (>=1.18.18)", "mypy-boto3-waf-regional (>=1.18.18)", "mypy-boto3-wafv2 (>=1.18.18)", "mypy-boto3-wellarchitected (>=1.18.18)", "mypy-boto3-workdocs (>=1.18.18)", "mypy-boto3-worklink (>=1.18.18)", "mypy-boto3-workmail (>=1.18.18)", "mypy-boto3-workmailmessageflow (>=1.18.18)", "mypy-boto3-workspaces (>=1.18.18)", "mypy-boto3-xray (>=1.18.18)"]
amp = ["mypy-boto3-amp (>=1.18.18)"]
amplify = ["mypy-boto3-amplify (>=1.18.18)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.18.18)"]
apigateway = ["mypy-boto3-apigateway (>=1.18.18)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.18.18)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.18.18)"]
appconfig = ["mypy-boto3-appconfig (>=1.18.18)"]
appflow = ["mypy-boto3-appflow (>=1.18.18)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.18.18)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.18.18)"]
application-insights = ["mypy-boto3-application-insights (>=1.18.18)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.18.18)"]
appmesh = ["mypy-boto3-appmesh (>=1.18.18)"]
apprunner = ["mypy-boto3-apprunner (>=1.18.18)"]
appstream = ["mypy-boto3-appstream (>=1.18.18)"]
appsync = ["mypy-boto3-appsync (>=1.18.18)"]
athena = ["mypy-boto3-athena (>=1.18.18)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.18.18)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.18.18)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.18.18)"]
backup = ["mypy-boto3-backup (>=1.18.18)"]
batch = ["mypy-boto3-batch (>=1.18.18)"]
braket = ["mypy-boto3-braket (>=1.18.18)"]
budgets = ["mypy-boto3-budgets (>=1.18.18)"]
ce = ["mypy-boto3-ce (>=1.18.18)"]
chime = ["mypy-boto3-chime (>=1.18.18)"]
chime-sdk-identity = ["mypy-boto3-chime-sdk-identity (>=1.18.18)"]
chime-sdk-messaging = ["mypy-boto3-chime-sdk-messaging (>=1.18.18)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.18.18)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.18.18)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.18.18)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.18.18)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.18.18)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.18.18)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.18.18)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.18.18)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.18.18)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.18.18)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.18.18)"]
codebuild = ["mypy-boto3-codebuild (>=1.18.18)"]
codecommit = ["mypy-boto3-codecommit (>=1.18.18)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.18.18)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.18.18)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.18.18)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.18.18)"]
codestar = ["mypy-boto3-codestar (>=1.18.18)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.18.18)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.18.18)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.18.18)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.18.18)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.18.18)"]
comprehend = ["mypy-boto3-comprehend (>=1.18.18)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.18.18)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.18.18)"]
config = ["mypy-boto3-config (>=1.18.18)"]
connect = ["mypy-boto3-connect (>=1.18.18)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.18.18)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.18.18)"]
cur = ["mypy-boto3-cur (>=1.18.18)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.18.18)"]
databrew = ["mypy-boto3-databrew (>=1.18.18)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.18.18)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.18.18)"]
datasync = ["mypy-boto3-datasync (>=1.18.18)"]
dax = ["mypy-boto3-dax (>=1.18.18)"]
detective = ["mypy-boto3-detective (>=1.18.18)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.18.18)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.18.18)"]
directconnect = ["mypy-boto3-directconnect (>=1.18.18)"]
discovery = ["mypy-boto3-discovery (>=1.18.18)"]
dlm = ["mypy-boto3-dlm (>=1.18.18)"]
dms = ["mypy-boto3-dms (>=1.18.18)"]
docdb = ["mypy-boto3-docdb (>=1.18.18)"]
ds = ["mypy-boto3-ds (>=1.18.18)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.18.18)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.18.18)"]
ebs = ["mypy-boto3-ebs (>=1.18.18)"]
ec2 = ["mypy-boto3-ec2 (>=1.18.18)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.18.18)"]
ecr = ["mypy-boto3-ecr (>=1.18.18)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.18.18)"]
ecs = ["mypy-boto3-ecs (>=1.18.18)"]
efs = ["mypy-boto3-efs (>=1.18.18)"]
eks = ["mypy-boto3-eks (>=1.18.18)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.18.18)"]
elasticache = ["mypy-boto3-elasticache (>=1.18.18)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.18.18)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.18.18)"]
elb = ["mypy-boto3-elb (>=1.18.18)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.18.18)"]
emr = ["mypy-boto3-emr (>=1.18.18)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.18.18)"]
es = ["mypy-boto3-es (>=1.18.18)"]
essential = ["mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)"]
events = ["mypy-boto3-events (>=1.18.18)"]
finspace = ["mypy-boto3-finspace (>=1.18.18)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.18.18)"]
firehose = ["mypy-boto3-firehose (>=1.18.18)"]
fis = ["mypy-boto3-fis (>=1.18.18)"]
fms = ["mypy-boto3-fms (>=1.18.18)"]
forecast = ["mypy-boto3-forecast (>=1.18.18)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.18.18)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.18.18)"]
fsx = ["mypy-boto3-fsx (>=1.18.18)"]
gamelift = ["mypy-boto3-gamelift (>=1.18.18)"]
glacier = ["mypy-boto3-glacier (>=1.18.18)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.18.18)"]
glue = ["mypy-boto3-glue (>=1.18.18)"]
greengrass = ["mypy-boto3-greengrass (>=1.18.18)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.18.18)"]
groundstation = ["mypy-boto3-groundstation (>=1.18.18)"]
guardduty = ["mypy-boto3-guardduty (>=1.18.18)"]
health = ["mypy-boto3-health (>=1.18.18)"]
healthlake = ["mypy-boto3-healthlake (>=1.18.18)"]
honeycode = ["mypy-boto3-honeycode (>=1.18.18)"]
iam = ["mypy-boto3-iam (>=1.18.18)"]
identitystore = ["mypy-boto3-identitystore (>=1.18.18)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.18.18)"]
importexport = ["mypy-boto3-importexport (>=1.18.18)"]
inspector = ["mypy-boto3-inspector (>=1.18.18)"]
iot = ["mypy-boto3-iot (>=1.18.18)"]
iot-data = ["mypy-boto3-iot-data (>=1.18.18)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.18.18)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.18.18)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.18.18)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.18.18)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.18.18)"]
iotevents = ["mypy-boto3-iotevents (>=1.18.18)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.18.18)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.18.18)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.18.18)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.18.18)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.18.18)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.18.18)"]
ivs = ["mypy-boto3-ivs (>=1.18.18)"]
kafka = ["mypy-boto3-kafka (>=1.18.18)"]
kendra = ["mypy-boto3-kendra (>=1.18.18)"]
kinesis = ["mypy-boto3-kinesis (>=1.18.18)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.18.18)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.18.18)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.18.18)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.18.18)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.18.18)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.18.18)"]
kms = ["mypy-boto3-kms (>=1.18.18)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.18.18)"]
lambda = ["mypy-boto3-lambda (>=1.18.18)"]
lex-models = ["mypy-boto3-lex-models (>=1.18.18)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.18.18)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.18.18)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.18.18)"]
license-manager = ["mypy-boto3-license-manager (>=1.18.18)"]
lightsail = ["mypy-boto3-lightsail (>=1.18.18)"]
location = ["mypy-boto3-location (>=1.18.18)"]
logs = ["mypy-boto3-logs (>=1.18.18)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.18.18)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.18.18)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.18.18)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.18.18)"]
macie = ["mypy-boto3-macie (>=1.18.18)"]
macie2 = ["mypy-boto3-macie2 (>=1.18.18)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.18.18)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.18.18)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.18.18)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.18.18)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.18.18)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.18.18)"]
medialive = ["mypy-boto3-medialive (>=1.18.18)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.18.18)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.18.18)"]
mediastore = ["mypy-boto3-mediastore (>=1.18.18)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.18.18)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.18.18)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.18.18)"]
mgh = ["mypy-boto3-mgh (>=1.18.18)"]
mgn = ["mypy-boto3-mgn (>=1.18.18)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.18.18)"]
mobile = ["mypy-boto3-mobile (>=1.18.18)"]
mq = ["mypy-boto3-mq (>=1.18.18)"]
mturk = ["mypy-boto3-mturk (>=1.18.18)"]
mwaa = ["mypy-boto3-mwaa (>=1.18.18)"]
neptune = ["mypy-boto3-neptune (>=1.18.18)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.18.18)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.18.18)"]
nimble = ["mypy-boto3-nimble (>=1.18.18)"]
opsworks = ["mypy-boto3-opsworks (>=1.18.18)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.18.18)"]
organizations = ["mypy-boto3-organizations (>=1.18.18)"]
outposts = ["mypy-boto3-outposts (>=1.18.18)"]
personalize = ["mypy-boto3-personalize (>=1.18.18)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.18.18)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.18.18)"]
pi = ["mypy-boto3-pi (>=1.18.18)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.18.18)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.18.18)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.18.18)"]
polly = ["mypy-boto3-polly (>=1.18.18)"]
pricing = ["mypy-boto3-pricing (>=1.18.18)"]
proton = ["mypy-boto3-proton (>=1.18.18)"]
qldb = ["mypy-boto3-qldb (>=1.18.18)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.18.18)"]
quicksight = ["mypy-boto3-quicksight (>=1.18.18)"]
ram = ["mypy-boto3-ram (>=1.18.18)"]
rds = ["mypy-boto3-rds (>=1.18.18)"]
rds-data = ["mypy-boto3-rds-data (>=1.18.18)"]
redshift = ["mypy-boto3-redshift (>=1.18.18)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.18.18)"]
rekognition = ["mypy-boto3-rekognition (>=1.18.18)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.18.18)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.18.18)"]
robomaker = ["mypy-boto3-robomaker (>=1.18.18)"]
route53 = ["mypy-boto3-route53 (>=1.18.18)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.18.18)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.18.18)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.18.18)"]
route53domains = ["mypy-boto3-route53domains (>=1.18.18)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.18.18)"]
s3 = ["mypy-boto3-s3 (>=1.18.18)"]
s3control = ["mypy-boto3-s3control (>=1.18.18)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.18.18)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.18.18)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.18.18)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.18.18)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.18.18)"]
schemas = ["mypy-boto3-schemas (>=1.18.18)"]
sdb = ["mypy-boto3-sdb (>=1.18.18)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.18.18)"]
securityhub = ["mypy-boto3-securityhub (>=1.18.18)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.18.18)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.18.18)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.18.18)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.18.18)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.18.18)"]
ses = ["mypy-boto3-ses (>=1.18.18)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.18.18)"]
shield = ["mypy-boto3-shield (>=1.18.18)"]
signer = ["mypy-boto3-signer (>=1.18.18)"]
sms = ["mypy-boto3-sms (>=1.18.18)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.18.18)"]
snow-device-management = ["mypy-boto3-snow-device-management (>=1.18.18)"]
snowball = ["mypy-boto3-snowball (>=1.18.18)"]
sns = ["mypy-boto3-sns (>=1.18.18)"]
sqs = ["mypy-boto3-sqs (>=1.18.18)"]
ssm = ["mypy-boto3-ssm (>=1.18.18)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.18.18)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.18.18)"]
sso = ["mypy-boto3-sso (>=1.18.18)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.18.18)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.18.18)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.18.18)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.18.18)"]
sts = ["mypy-boto3-sts (>=1.18.18)"]
support = ["mypy-boto3-support (>=1.18.18)"]
swf = ["mypy-boto3-swf (>=1.18.18)"]
synthetics = ["mypy-boto3-synthetics (>=1.18.18)"]
textract = ["mypy-boto3-textract (>=1.18.18)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.18.18)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.18.18)"]
transcribe = ["mypy-boto3-transcribe (>=1.18.18)"]
transfer = ["mypy-boto3-transfer (>=1.18.18)"]
translate = ["mypy-boto3-translate (>=1.18.18)"]
waf = ["mypy-boto3-waf (>=1.18.18)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.18.18)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.18.18)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.18.18)"]
workdocs = ["mypy-boto3-workdocs (>=1.18.18)"]
worklink = ["mypy-boto3-worklink (>=1.18.18)"]
workmail = ["mypy-boto3-workmail (>=1.18.18)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.18.18)"]
workspaces = ["mypy-boto3-workspaces (>=1.18.18)"]
xray = ["mypy-boto3-xray (>=1.18.18)"]

[[package]]
name = "botocore"
version = "1.26.10"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.8)"]

[[package]]
name = "botocore-stubs"
version = "1.21.22"
description = "Type annotations for botocore 1.21.22, generated by mypy-boto3-builder 5.1.0"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "coverage"
version = "6.2"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "coveralls"
version = "3.3.1"
description = "Show coverage stats online via coveralls.io"
category = "dev"
optional = false
python-versions = ">= 3.5"

[package.dependencies]
coverage = ">=4.1,<6.0.0 || >6.1,<6.1.1 || >6.1.1,<7.0"
docopt = ">=0.6.1"
requests = ">=1.0.0"

[package.extras]
yaml = ["PyYAML (>=3.10)"]

[[package]]
name = "docker"
version = "4.4.4"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
pywin32 = {version = "227", markers = "sys_platform == \"win32\""}
requests = ">=2.14.2,<2.18.0 || >2.18.0"
six = ">=1.4.0"
websocket-client = ">=0.32.0"

[package.extras]
ssh = ["paramiko (>=2.4.2)"]
tls = ["pyOpenSSL (>=17.5.0)", "cryptography (>=1.3.4)", "idna (>=2.0.0)"]

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "elasticsearch"
version = "6.8.1"
description = "Python client for Elasticsearch"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"

[package.dependencies]
urllib3 = ">=1.21.1"

[package.extras]
develop = ["requests (>=2.0.0,<3.0.0)", "nose", "coverage", "mock", "pyyaml", "nosexcover", "numpy", "pandas", "sphinx (<1.7)", "sphinx-rtd-theme"]
requests = ["requests (>=2.4.0,<3.0.0)"]

[[package]]
name = "flake8"
version = "5.0.4"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
importlib-metadata = {version = ">=1.1.0,<4.3", markers = "python_version < \"3.8\""}
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.9.0,<2.10.0"
pyflakes = ">=2.5.0,<2.6.0"

[[package]]
name = "flaky"
version = "3.7.0"
description = "Plugin for nose or pytest that automatically reruns flaky tests."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "gitdb"
version = "4.0.9"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.20"
description = "Python Git Library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
gitdb = ">=4.0.1,<5"
typing-extensions = {version = ">=3.7.4.3", markers = "python_version < \"3.10\""}

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.2.0"
description = "Read metadata from Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "jmespath"
version = "0.10.0"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycodestyle"
version = "2.9.1"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyflakes"
version = "2.5.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.7"
description = "Python parsing module"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "pytest"
version = "7.0.1"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "3.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["virtualenv", "pytest-xdist", "six", "process-tests", "hunter", "fields"]

[[package]]
name = "pytest-mock"
version = "3.6.1"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
name = "pytest-runner"
version = "5.3.2"
description = "Invoke py.test as distutils command with dependency resolution"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-virtualenv", "pytest-black (>=0.3.7)", "pytest-mypy"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "227"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = false
python-versions = "*"

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "s3transfer"
version = "0.5.2"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "structlog"
version = "19.2.0"
description = "Structured Logging for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "pytest-azurepipelines", "python-rapidjson"]
dev = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "sphinx", "twisted", "pre-commit", "python-rapidjson"]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "python-rapidjson"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "1.2.3"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "typing-extensions"
version = "4.1.1"
description = "Backported and Experimental Type Hints for Python 3.6+"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "1.26.11"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "waitress"
version = "2.0.0"
description = "Waitress WSGI server"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
testing = ["coverage (>=5.0)", "pytest-cover", "pytest"]
docs = ["pylons-sphinx-themes (>=1.0.9)", "docutils", "Sphinx (>=1.8.1)"]

[[package]]
name = "webob"
version = "1.8.7"
description = "WSGI request and response object"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["pytest (>=3.1.0)", "coverage", "pytest-cov", "pytest-xdist"]

[[package]]
name = "websocket-client"
version = "1.3.1"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["websockets"]
optional = ["wsaccel", "python-socks"]
docs = ["sphinx-rtd-theme (>=0.5)", "Sphinx (>=3.4)"]

[[package]]
name = "webtest"
version = "2.0.35"
description = "Helper to test WSGI applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
beautifulsoup4 = "*"
six = "*"
waitress = ">=0.8.5"
WebOb = ">=1.2"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.8)"]
tests = ["nose (<1.3.0)", "coverage", "mock", "pastedeploy", "wsgiproxy2", "pyquery"]

[[package]]
name = "zipp"
version = "3.6.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.7,<3.10"
content-hash = "7dc70bacccfee09d43af039ec491580586ffacd67c7c4d84b6838dc1c6dc3946"

[metadata.files]
atomicwrites = [
    {file = "atomicwrites-1.4.1.tar.gz", hash = "sha256:81b2c9071a49367a7f770170e5eec8cb66567cfbbc8c73d20ce5ca4a8d71cf11"},
]
attrs = [
    {file = "attrs-22.1.0-py2.py3-none-any.whl", hash = "sha256:86efa402f67bf2df34f51a335487cf46b1ec130d02b8d39fd248abfd30da551c"},
    {file = "attrs-22.1.0.tar.gz", hash = "sha256:29adc2665447e5191d0e7c568fde78b21f9672d344281d0c6e1ab085429b22b6"},
]
aws-requests-auth = [
    {file = "aws-requests-auth-0.4.3.tar.gz", hash = "sha256:33593372018b960a31dbbe236f89421678b885c35f0b6a7abfae35bb77e069b2"},
    {file = "aws_requests_auth-0.4.3-py2.py3-none-any.whl", hash = "sha256:646bc37d62140ea1c709d20148f5d43197e6bd2d63909eb36fa4bb2345759977"},
]
beautifulsoup4 = [
    {file = "beautifulsoup4-4.11.1-py3-none-any.whl", hash = "sha256:58d5c3d29f5a36ffeb94f02f0d786cd53014cf9b3b3951d42e0080d8a9498d30"},
    {file = "beautifulsoup4-4.11.1.tar.gz", hash = "sha256:ad9aa55b65ef2808eb405f46cf74df7fcb7044d5cbc26487f96eb2ef2e436693"},
]
boto3 = [
    {file = "boto3-1.23.10-py3-none-any.whl", hash = "sha256:40d08614f17a69075e175c02c5d5aab69a6153fd50e40fa7057b913ac7bf40e7"},
    {file = "boto3-1.23.10.tar.gz", hash = "sha256:2a4395e3241c20eef441d7443a5e6eaa0ee3f7114653fb9d9cef41587526f7bd"},
]
boto3-stubs = [
    {file = "boto3-stubs-1.18.23.tar.gz", hash = "sha256:38915f107b36160ff2ba749fdb0de49d6dca4214fb16564d4f31f22f4f25099c"},
    {file = "boto3_stubs-1.18.23-py3-none-any.whl", hash = "sha256:4bed5a3aa0a3c9516791b22e9cd0aba7b93dd4d30669fc032118568bcf678a36"},
]
botocore = [
    {file = "botocore-1.26.10-py3-none-any.whl", hash = "sha256:8a4a984bf901ccefe40037da11ba2abd1ddbcb3b490a492b7f218509c99fc12f"},
    {file = "botocore-1.26.10.tar.gz", hash = "sha256:5df2cf7ebe34377470172bd0bbc582cf98c5cbd02da0909a14e9e2885ab3ae9c"},
]
botocore-stubs = [
    {file = "botocore-stubs-1.21.22.tar.gz", hash = "sha256:10d97e57cd79c66b6b78fe0fcac3ab22e421af222c03e93afe3d05bdb5dadc48"},
    {file = "botocore_stubs-1.21.22-py3-none-any.whl", hash = "sha256:41ce3ad97ffe04c07a7939367d47aa6a049f4e939e184433f44f03e7149a2920"},
]
certifi = [
    {file = "certifi-2022.6.15-py3-none-any.whl", hash = "sha256:fe86415d55e84719d75f8b69414f6438ac3547d2078ab91b67e779ef69378412"},
    {file = "certifi-2022.6.15.tar.gz", hash = "sha256:84c85a9078b11105f04f3036a9482ae10e4621616db313fe045dd24743a0820d"},
]
charset-normalizer = [
    {file = "charset-normalizer-2.0.12.tar.gz", hash = "sha256:2857e29ff0d34db842cd7ca3230549d1a697f96ee6d3fb071cfa6c7393832597"},
    {file = "charset_normalizer-2.0.12-py3-none-any.whl", hash = "sha256:6881edbebdb17b39b4eaaa821b438bf6eddffb4468cf344f09f89def34a8b1df"},
]
colorama = [
    {file = "colorama-0.4.5-py2.py3-none-any.whl", hash = "sha256:854bf444933e37f5824ae7bfc1e98d5bce2ebe4160d46b5edf346a89358e99da"},
    {file = "colorama-0.4.5.tar.gz", hash = "sha256:e6c6b4334fc50988a639d9b98aa429a0b57da6e17b9a44f0451f930b6967b7a4"},
]
coverage = [
    {file = "coverage-6.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:6dbc1536e105adda7a6312c778f15aaabe583b0e9a0b0a324990334fd458c94b"},
    {file = "coverage-6.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:174cf9b4bef0db2e8244f82059a5a72bd47e1d40e71c68ab055425172b16b7d0"},
    {file = "coverage-6.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:92b8c845527eae547a2a6617d336adc56394050c3ed8a6918683646328fbb6da"},
    {file = "coverage-6.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:c7912d1526299cb04c88288e148c6c87c0df600eca76efd99d84396cfe00ef1d"},
    {file = "coverage-6.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d5d2033d5db1d58ae2d62f095e1aefb6988af65b4b12cb8987af409587cc0739"},
    {file = "coverage-6.2-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:3feac4084291642165c3a0d9eaebedf19ffa505016c4d3db15bfe235718d4971"},
    {file = "coverage-6.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:276651978c94a8c5672ea60a2656e95a3cce2a3f31e9fb2d5ebd4c215d095840"},
    {file = "coverage-6.2-cp310-cp310-win32.whl", hash = "sha256:f506af4f27def639ba45789fa6fde45f9a217da0be05f8910458e4557eed020c"},
    {file = "coverage-6.2-cp310-cp310-win_amd64.whl", hash = "sha256:3f7c17209eef285c86f819ff04a6d4cbee9b33ef05cbcaae4c0b4e8e06b3ec8f"},
    {file = "coverage-6.2-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:13362889b2d46e8d9f97c421539c97c963e34031ab0cb89e8ca83a10cc71ac76"},
    {file = "coverage-6.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:22e60a3ca5acba37d1d4a2ee66e051f5b0e1b9ac950b5b0cf4aa5366eda41d47"},
    {file = "coverage-6.2-cp311-cp311-win_amd64.whl", hash = "sha256:b637c57fdb8be84e91fac60d9325a66a5981f8086c954ea2772efe28425eaf64"},
    {file = "coverage-6.2-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:f467bbb837691ab5a8ca359199d3429a11a01e6dfb3d9dcc676dc035ca93c0a9"},
    {file = "coverage-6.2-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2641f803ee9f95b1f387f3e8f3bf28d83d9b69a39e9911e5bfee832bea75240d"},
    {file = "coverage-6.2-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:1219d760ccfafc03c0822ae2e06e3b1248a8e6d1a70928966bafc6838d3c9e48"},
    {file = "coverage-6.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:9a2b5b52be0a8626fcbffd7e689781bf8c2ac01613e77feda93d96184949a98e"},
    {file = "coverage-6.2-cp36-cp36m-musllinux_1_1_aarch64.whl", hash = "sha256:8e2c35a4c1f269704e90888e56f794e2d9c0262fb0c1b1c8c4ee44d9b9e77b5d"},
    {file = "coverage-6.2-cp36-cp36m-musllinux_1_1_i686.whl", hash = "sha256:5d6b09c972ce9200264c35a1d53d43ca55ef61836d9ec60f0d44273a31aa9f17"},
    {file = "coverage-6.2-cp36-cp36m-musllinux_1_1_x86_64.whl", hash = "sha256:e3db840a4dee542e37e09f30859f1612da90e1c5239a6a2498c473183a50e781"},
    {file = "coverage-6.2-cp36-cp36m-win32.whl", hash = "sha256:4e547122ca2d244f7c090fe3f4b5a5861255ff66b7ab6d98f44a0222aaf8671a"},
    {file = "coverage-6.2-cp36-cp36m-win_amd64.whl", hash = "sha256:01774a2c2c729619760320270e42cd9e797427ecfddd32c2a7b639cdc481f3c0"},
    {file = "coverage-6.2-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:fb8b8ee99b3fffe4fd86f4c81b35a6bf7e4462cba019997af2fe679365db0c49"},
    {file = "coverage-6.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:619346d57c7126ae49ac95b11b0dc8e36c1dd49d148477461bb66c8cf13bb521"},
    {file = "coverage-6.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:0a7726f74ff63f41e95ed3a89fef002916c828bb5fcae83b505b49d81a066884"},
    {file = "coverage-6.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:cfd9386c1d6f13b37e05a91a8583e802f8059bebfccde61a418c5808dea6bbfa"},
    {file = "coverage-6.2-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:17e6c11038d4ed6e8af1407d9e89a2904d573be29d51515f14262d7f10ef0a64"},
    {file = "coverage-6.2-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c254b03032d5a06de049ce8bca8338a5185f07fb76600afff3c161e053d88617"},
    {file = "coverage-6.2-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:dca38a21e4423f3edb821292e97cec7ad38086f84313462098568baedf4331f8"},
    {file = "coverage-6.2-cp37-cp37m-win32.whl", hash = "sha256:600617008aa82032ddeace2535626d1bc212dfff32b43989539deda63b3f36e4"},
    {file = "coverage-6.2-cp37-cp37m-win_amd64.whl", hash = "sha256:bf154ba7ee2fd613eb541c2bc03d3d9ac667080a737449d1a3fb342740eb1a74"},
    {file = "coverage-6.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:f9afb5b746781fc2abce26193d1c817b7eb0e11459510fba65d2bd77fe161d9e"},
    {file = "coverage-6.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:edcada2e24ed68f019175c2b2af2a8b481d3d084798b8c20d15d34f5c733fa58"},
    {file = "coverage-6.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:a9c8c4283e17690ff1a7427123ffb428ad6a52ed720d550e299e8291e33184dc"},
    {file = "coverage-6.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:f614fc9956d76d8a88a88bb41ddc12709caa755666f580af3a688899721efecd"},
    {file = "coverage-6.2-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:9365ed5cce5d0cf2c10afc6add145c5037d3148585b8ae0e77cc1efdd6aa2953"},
    {file = "coverage-6.2-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:8bdfe9ff3a4ea37d17f172ac0dff1e1c383aec17a636b9b35906babc9f0f5475"},
    {file = "coverage-6.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:63c424e6f5b4ab1cf1e23a43b12f542b0ec2e54f99ec9f11b75382152981df57"},
    {file = "coverage-6.2-cp38-cp38-win32.whl", hash = "sha256:49dbff64961bc9bdd2289a2bda6a3a5a331964ba5497f694e2cbd540d656dc1c"},
    {file = "coverage-6.2-cp38-cp38-win_amd64.whl", hash = "sha256:9a29311bd6429be317c1f3fe4bc06c4c5ee45e2fa61b2a19d4d1d6111cb94af2"},
    {file = "coverage-6.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:03b20e52b7d31be571c9c06b74746746d4eb82fc260e594dc662ed48145e9efd"},
    {file = "coverage-6.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:215f8afcc02a24c2d9a10d3790b21054b58d71f4b3c6f055d4bb1b15cecce685"},
    {file = "coverage-6.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:a4bdeb0a52d1d04123b41d90a4390b096f3ef38eee35e11f0b22c2d031222c6c"},
    {file = "coverage-6.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:c332d8f8d448ded473b97fefe4a0983265af21917d8b0cdcb8bb06b2afe632c3"},
    {file = "coverage-6.2-cp39-cp39-win32.whl", hash = "sha256:6e1394d24d5938e561fbeaa0cd3d356207579c28bd1792f25a068743f2d5b282"},
    {file = "coverage-6.2-cp39-cp39-win_amd64.whl", hash = "sha256:86f2e78b1eff847609b1ca8050c9e1fa3bd44ce755b2ec30e70f2d3ba3844644"},
    {file = "coverage-6.2-pp36.pp37.pp38-none-any.whl", hash = "sha256:5829192582c0ec8ca4a2532407bc14c2f338d9878a10442f5d03804a95fac9de"},
    {file = "coverage-6.2.tar.gz", hash = "sha256:e2cad8093172b7d1595b4ad66f24270808658e11acf43a8f95b41276162eb5b8"},
]
coveralls = [
    {file = "coveralls-3.3.1-py2.py3-none-any.whl", hash = "sha256:f42015f31d386b351d4226389b387ae173207058832fbf5c8ec4b40e27b16026"},
    {file = "coveralls-3.3.1.tar.gz", hash = "sha256:b32a8bb5d2df585207c119d6c01567b81fba690c9c10a753bfe27a335bfc43ea"},
]
docker = [
    {file = "docker-4.4.4-py2.py3-none-any.whl", hash = "sha256:f3607d5695be025fa405a12aca2e5df702a57db63790c73b927eb6a94aac60af"},
    {file = "docker-4.4.4.tar.gz", hash = "sha256:d3393c878f575d3a9ca3b94471a3c89a6d960b35feb92f033c0de36cc9d934db"},
]
docopt = [
    {file = "docopt-0.6.2.tar.gz", hash = "sha256:49b3a825280bd66b3aa83585ef59c4a8c82f2c8a522dbe754a8bc8d08c85c491"},
]
elasticsearch = [
    {file = "elasticsearch-6.8.1-py2.py3-none-any.whl", hash = "sha256:540d633afcc0a32972e4b489c4559c9a96e294850853238f7a18b1cbd267c2ed"},
    {file = "elasticsearch-6.8.1.tar.gz", hash = "sha256:a8062a00b61bc7babeea028530667583a68ecb1a9f59ab0b22ff7feaf70d3564"},
]
flake8 = [
    {file = "flake8-5.0.4-py2.py3-none-any.whl", hash = "sha256:7a1cf6b73744f5806ab95e526f6f0d8c01c66d7bbe349562d22dfca20610b248"},
    {file = "flake8-5.0.4.tar.gz", hash = "sha256:6fbe320aad8d6b95cec8b8e47bc933004678dc63095be98528b7bdd2a9f510db"},
]
flaky = [
    {file = "flaky-3.7.0-py2.py3-none-any.whl", hash = "sha256:d6eda73cab5ae7364504b7c44670f70abed9e75f77dd116352f662817592ec9c"},
    {file = "flaky-3.7.0.tar.gz", hash = "sha256:3ad100780721a1911f57a165809b7ea265a7863305acb66708220820caf8aa0d"},
]
gitdb = [
    {file = "gitdb-4.0.9-py3-none-any.whl", hash = "sha256:8033ad4e853066ba6ca92050b9df2f89301b8fc8bf7e9324d412a63f8bf1a8fd"},
    {file = "gitdb-4.0.9.tar.gz", hash = "sha256:bac2fd45c0a1c9cf619e63a90d62bdc63892ef92387424b855792a6cabe789aa"},
]
gitpython = [
    {file = "GitPython-3.1.20-py3-none-any.whl", hash = "sha256:b1e1c269deab1b08ce65403cf14e10d2ef1f6c89e33ea7c5e5bb0222ea593b8a"},
    {file = "GitPython-3.1.20.tar.gz", hash = "sha256:df0e072a200703a65387b0cfdf0466e3bab729c0458cf6b7349d0e9877636519"},
]
idna = [
    {file = "idna-3.3-py3-none-any.whl", hash = "sha256:84d9dd047ffa80596e0f246e2eab0b391788b0503584e8945f2368256d2735ff"},
    {file = "idna-3.3.tar.gz", hash = "sha256:9d643ff0a55b762d5cdb124b8eaa99c66322e2157b69160bc32796e824360e6d"},
]
importlib-metadata = [
    {file = "importlib_metadata-4.2.0-py3-none-any.whl", hash = "sha256:057e92c15bc8d9e8109738a48db0ccb31b4d9d5cfbee5a8670879a30be66304b"},
    {file = "importlib_metadata-4.2.0.tar.gz", hash = "sha256:b7e52a1f8dec14a75ea73e0891f3060099ca1d8e6a462a4dff11c3e119ea1b31"},
]
iniconfig = [
    {file = "iniconfig-1.1.1-py2.py3-none-any.whl", hash = "sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3"},
    {file = "iniconfig-1.1.1.tar.gz", hash = "sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"},
]
jmespath = [
    {file = "jmespath-0.10.0-py2.py3-none-any.whl", hash = "sha256:cdf6525904cc597730141d61b36f2e4b8ecc257c420fa2f4549bac2c2d0cb72f"},
    {file = "jmespath-0.10.0.tar.gz", hash = "sha256:b85d0567b8666149a93172712e68920734333c0ce7e89b78b3e987f71e5ed4f9"},
]
mccabe = [
    {file = "mccabe-0.7.0-py2.py3-none-any.whl", hash = "sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e"},
    {file = "mccabe-0.7.0.tar.gz", hash = "sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325"},
]
packaging = [
    {file = "packaging-21.3-py3-none-any.whl", hash = "sha256:ef103e05f519cdc783ae24ea4e2e0f508a9c99b2d4969652eed6a2e1ea5bd522"},
    {file = "packaging-21.3.tar.gz", hash = "sha256:dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb"},
]
pluggy = [
    {file = "pluggy-1.0.0-py2.py3-none-any.whl", hash = "sha256:74134bbf457f031a36d68416e1509f34bd5ccc019f0bcc952c7b909d06b37bd3"},
    {file = "pluggy-1.0.0.tar.gz", hash = "sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159"},
]
py = [
    {file = "py-1.11.0-py2.py3-none-any.whl", hash = "sha256:607c53218732647dff4acdfcd50cb62615cedf612e72d1724fb1a0cc6405b378"},
    {file = "py-1.11.0.tar.gz", hash = "sha256:51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719"},
]
pycodestyle = [
    {file = "pycodestyle-2.9.1-py2.py3-none-any.whl", hash = "sha256:d1735fc58b418fd7c5f658d28d943854f8a849b01a5d0a1e6f3f3fdd0166804b"},
    {file = "pycodestyle-2.9.1.tar.gz", hash = "sha256:2c9607871d58c76354b697b42f5d57e1ada7d261c261efac224b664affdc5785"},
]
pyflakes = [
    {file = "pyflakes-2.5.0-py2.py3-none-any.whl", hash = "sha256:4579f67d887f804e67edb544428f264b7b24f435b263c4614f384135cea553d2"},
    {file = "pyflakes-2.5.0.tar.gz", hash = "sha256:491feb020dca48ccc562a8c0cbe8df07ee13078df59813b83959cbdada312ea3"},
]
pyparsing = [
    {file = "pyparsing-3.0.7-py3-none-any.whl", hash = "sha256:a6c06a88f252e6c322f65faf8f418b16213b51bdfaece0524c1c1bc30c63c484"},
    {file = "pyparsing-3.0.7.tar.gz", hash = "sha256:18ee9022775d270c55187733956460083db60b37d0d0fb357445f3094eed3eea"},
]
pytest = [
    {file = "pytest-7.0.1-py3-none-any.whl", hash = "sha256:9ce3ff477af913ecf6321fe337b93a2c0dcf2a0a1439c43f5452112c1e4280db"},
    {file = "pytest-7.0.1.tar.gz", hash = "sha256:e30905a0c131d3d94b89624a1cc5afec3e0ba2fbdb151867d8e0ebd49850f171"},
]
pytest-cov = [
    {file = "pytest-cov-3.0.0.tar.gz", hash = "sha256:e7f0f5b1617d2210a2cabc266dfe2f4c75a8d32fb89eafb7ad9d06f6d076d470"},
    {file = "pytest_cov-3.0.0-py3-none-any.whl", hash = "sha256:578d5d15ac4a25e5f961c938b85a05b09fdaae9deef3bb6de9a6e766622ca7a6"},
]
pytest-mock = [
    {file = "pytest-mock-3.6.1.tar.gz", hash = "sha256:40217a058c52a63f1042f0784f62009e976ba824c418cced42e88d5f40ab0e62"},
    {file = "pytest_mock-3.6.1-py3-none-any.whl", hash = "sha256:30c2f2cc9759e76eee674b81ea28c9f0b94f8f0445a1b87762cadf774f0df7e3"},
]
pytest-runner = [
    {file = "pytest-runner-5.3.2.tar.gz", hash = "sha256:48934ec94301f6727d30615af1960539ff62063f6c9b71b7227174e51ba5fb34"},
    {file = "pytest_runner-5.3.2-py3-none-any.whl", hash = "sha256:c7d785ea6c612396c11ddbaf467764d2cc746ef96a713fbe1a296c221503b7c3"},
]
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
pytz = [
    {file = "pytz-2022.1-py2.py3-none-any.whl", hash = "sha256:e68985985296d9a66a881eb3193b0906246245294a881e7c8afe623866ac6a5c"},
    {file = "pytz-2022.1.tar.gz", hash = "sha256:1e760e2fe6a8163bc0b3d9a19c4f84342afa0a2affebfaa84b01b978a02ecaa7"},
]
pywin32 = [
    {file = "pywin32-227-cp27-cp27m-win32.whl", hash = "sha256:371fcc39416d736401f0274dd64c2302728c9e034808e37381b5e1b22be4a6b0"},
    {file = "pywin32-227-cp27-cp27m-win_amd64.whl", hash = "sha256:4cdad3e84191194ea6d0dd1b1b9bdda574ff563177d2adf2b4efec2a244fa116"},
    {file = "pywin32-227-cp35-cp35m-win32.whl", hash = "sha256:f4c5be1a293bae0076d93c88f37ee8da68136744588bc5e2be2f299a34ceb7aa"},
    {file = "pywin32-227-cp35-cp35m-win_amd64.whl", hash = "sha256:a929a4af626e530383a579431b70e512e736e9588106715215bf685a3ea508d4"},
    {file = "pywin32-227-cp36-cp36m-win32.whl", hash = "sha256:300a2db938e98c3e7e2093e4491439e62287d0d493fe07cce110db070b54c0be"},
    {file = "pywin32-227-cp36-cp36m-win_amd64.whl", hash = "sha256:9b31e009564fb95db160f154e2aa195ed66bcc4c058ed72850d047141b36f3a2"},
    {file = "pywin32-227-cp37-cp37m-win32.whl", hash = "sha256:47a3c7551376a865dd8d095a98deba954a98f326c6fe3c72d8726ca6e6b15507"},
    {file = "pywin32-227-cp37-cp37m-win_amd64.whl", hash = "sha256:31f88a89139cb2adc40f8f0e65ee56a8c585f629974f9e07622ba80199057511"},
    {file = "pywin32-227-cp38-cp38-win32.whl", hash = "sha256:7f18199fbf29ca99dff10e1f09451582ae9e372a892ff03a28528a24d55875bc"},
    {file = "pywin32-227-cp38-cp38-win_amd64.whl", hash = "sha256:7c1ae32c489dc012930787f06244426f8356e129184a02c25aef163917ce158e"},
    {file = "pywin32-227-cp39-cp39-win32.whl", hash = "sha256:c054c52ba46e7eb6b7d7dfae4dbd987a1bb48ee86debe3f245a2884ece46e295"},
    {file = "pywin32-227-cp39-cp39-win_amd64.whl", hash = "sha256:f27cec5e7f588c3d1051651830ecc00294f90728d19c3bf6916e6dba93ea357c"},
]
pyyaml = [
    {file = "PyYAML-5.4.1-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:3b2b1824fe7112845700f815ff6a489360226a5609b96ec2190a45e62a9fc922"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win32.whl", hash = "sha256:129def1b7c1bf22faffd67b8f3724645203b79d8f4cc81f674654d9902cb4393"},
    {file = "PyYAML-5.4.1-cp27-cp27m-win_amd64.whl", hash = "sha256:4465124ef1b18d9ace298060f4eccc64b0850899ac4ac53294547536533800c8"},
    {file = "PyYAML-5.4.1-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:bb4191dfc9306777bc594117aee052446b3fa88737cd13b7188d0e7aa8162185"},
    {file = "PyYAML-5.4.1-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:6c78645d400265a062508ae399b60b8c167bf003db364ecb26dcab2bda048253"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:4e0583d24c881e14342eaf4ec5fbc97f934b999a6828693a99157fde912540cc"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_aarch64.whl", hash = "sha256:72a01f726a9c7851ca9bfad6fd09ca4e090a023c00945ea05ba1638c09dc3347"},
    {file = "PyYAML-5.4.1-cp36-cp36m-manylinux2014_s390x.whl", hash = "sha256:895f61ef02e8fed38159bb70f7e100e00f471eae2bc838cd0f4ebb21e28f8541"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win32.whl", hash = "sha256:3bd0e463264cf257d1ffd2e40223b197271046d09dadf73a0fe82b9c1fc385a5"},
    {file = "PyYAML-5.4.1-cp36-cp36m-win_amd64.whl", hash = "sha256:e4fac90784481d221a8e4b1162afa7c47ed953be40d31ab4629ae917510051df"},
    {file = "PyYAML-5.4.1-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:5accb17103e43963b80e6f837831f38d314a0495500067cb25afab2e8d7a4018"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:e1d4970ea66be07ae37a3c2e48b5ec63f7ba6804bdddfdbd3cfd954d25a82e63"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_aarch64.whl", hash = "sha256:cb333c16912324fd5f769fff6bc5de372e9e7a202247b48870bc251ed40239aa"},
    {file = "PyYAML-5.4.1-cp37-cp37m-manylinux2014_s390x.whl", hash = "sha256:fe69978f3f768926cfa37b867e3843918e012cf83f680806599ddce33c2c68b0"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win32.whl", hash = "sha256:dd5de0646207f053eb0d6c74ae45ba98c3395a571a2891858e87df7c9b9bd51b"},
    {file = "PyYAML-5.4.1-cp37-cp37m-win_amd64.whl", hash = "sha256:08682f6b72c722394747bddaf0aa62277e02557c0fd1c42cb853016a38f8dedf"},
    {file = "PyYAML-5.4.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:d2d9808ea7b4af864f35ea216be506ecec180628aced0704e34aca0b040ffe46"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:8c1be557ee92a20f184922c7b6424e8ab6691788e6d86137c5d93c1a6ec1b8fb"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_aarch64.whl", hash = "sha256:fd7f6999a8070df521b6384004ef42833b9bd62cfee11a09bda1079b4b704247"},
    {file = "PyYAML-5.4.1-cp38-cp38-manylinux2014_s390x.whl", hash = "sha256:bfb51918d4ff3d77c1c856a9699f8492c612cde32fd3bcd344af9be34999bfdc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win32.whl", hash = "sha256:fa5ae20527d8e831e8230cbffd9f8fe952815b2b7dae6ffec25318803a7528fc"},
    {file = "PyYAML-5.4.1-cp38-cp38-win_amd64.whl", hash = "sha256:0f5f5786c0e09baddcd8b4b45f20a7b5d61a7e7e99846e3c799b05c7c53fa696"},
    {file = "PyYAML-5.4.1-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:294db365efa064d00b8d1ef65d8ea2c3426ac366c0c4368d930bf1c5fb497f77"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux1_x86_64.whl", hash = "sha256:74c1485f7707cf707a7aef42ef6322b8f97921bd89be2ab6317fd782c2d53183"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_aarch64.whl", hash = "sha256:d483ad4e639292c90170eb6f7783ad19490e7a8defb3e46f97dfe4bacae89122"},
    {file = "PyYAML-5.4.1-cp39-cp39-manylinux2014_s390x.whl", hash = "sha256:fdc842473cd33f45ff6bce46aea678a54e3d21f1b61a7750ce3c498eedfe25d6"},
    {file = "PyYAML-5.4.1-cp39-cp39-win32.whl", hash = "sha256:49d4cdd9065b9b6e206d0595fee27a96b5dd22618e7520c33204a4a3239d5b10"},
    {file = "PyYAML-5.4.1-cp39-cp39-win_amd64.whl", hash = "sha256:c20cfa2d49991c8b4147af39859b167664f2ad4561704ee74c1de03318e898db"},
    {file = "PyYAML-5.4.1.tar.gz", hash = "sha256:607774cbba28732bfa802b54baa7484215f530991055bb562efbed5b2f20a45e"},
]
requests = [
    {file = "requests-2.27.1-py2.py3-none-any.whl", hash = "sha256:f22fa1e554c9ddfd16e6e41ac79759e17be9e492b3587efa038054674760e72d"},
    {file = "requests-2.27.1.tar.gz", hash = "sha256:68d7c56fd5a8999887728ef304a6d12edc7be74f1cfa47714fc8b414525c9a61"},
]
rfc3986 = [
    {file = "rfc3986-1.5.0-py2.py3-none-any.whl", hash = "sha256:a86d6e1f5b1dc238b218b012df0aa79409667bb209e58da56d0b94704e712a97"},
    {file = "rfc3986-1.5.0.tar.gz", hash = "sha256:270aaf10d87d0d4e095063c65bf3ddbc6ee3d0b226328ce21e036f946e421835"},
]
s3transfer = [
    {file = "s3transfer-0.5.2-py3-none-any.whl", hash = "sha256:7a6f4c4d1fdb9a2b640244008e142cbc2cd3ae34b386584ef044dd0f27101971"},
    {file = "s3transfer-0.5.2.tar.gz", hash = "sha256:95c58c194ce657a5f4fb0b9e60a84968c808888aed628cd98ab8771fe1db98ed"},
]
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
smmap = [
    {file = "smmap-5.0.0-py3-none-any.whl", hash = "sha256:2aba19d6a040e78d8b09de5c57e96207b09ed71d8e55ce0959eeee6c8e190d94"},
    {file = "smmap-5.0.0.tar.gz", hash = "sha256:c840e62059cd3be204b0c9c9f74be2c09d5648eddd4580d9314c3ecde0b30936"},
]
soupsieve = [
    {file = "soupsieve-2.3.2.post1-py3-none-any.whl", hash = "sha256:3b2503d3c7084a42b1ebd08116e5f81aadfaea95863628c80a3b774a11b7c759"},
    {file = "soupsieve-2.3.2.post1.tar.gz", hash = "sha256:fc53893b3da2c33de295667a0e19f078c14bf86544af307354de5fcf12a3f30d"},
]
structlog = [
    {file = "structlog-19.2.0-py2.py3-none-any.whl", hash = "sha256:6640e6690fc31d5949bc614c1a630464d3aaa625284aeb7c6e486c3010d73e12"},
    {file = "structlog-19.2.0.tar.gz", hash = "sha256:4287058cf4ce1a59bc5dea290d6386d37f29a37529c9a51cdf7387e51710152b"},
]
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
tomli = [
    {file = "tomli-1.2.3-py3-none-any.whl", hash = "sha256:e3069e4be3ead9668e21cb9b074cd948f7b3113fd9c8bba083f48247aab8b11c"},
    {file = "tomli-1.2.3.tar.gz", hash = "sha256:05b6166bff487dc068d322585c7ea4ef78deed501cc124060e0f238e89a9231f"},
]
typing-extensions = [
    {file = "typing_extensions-4.1.1-py3-none-any.whl", hash = "sha256:21c85e0fe4b9a155d0799430b0ad741cdce7e359660ccbd8b530613e8df88ce2"},
    {file = "typing_extensions-4.1.1.tar.gz", hash = "sha256:1a9462dcc3347a79b1f1c0271fbe79e844580bb598bafa1ed208b94da3cdcd42"},
]
urllib3 = [
    {file = "urllib3-1.26.11-py2.py3-none-any.whl", hash = "sha256:c33ccba33c819596124764c23a97d25f32b28433ba0dedeb77d873a38722c9bc"},
    {file = "urllib3-1.26.11.tar.gz", hash = "sha256:ea6e8fb210b19d950fab93b60c9009226c63a28808bc8386e05301e25883ac0a"},
]
waitress = [
    {file = "waitress-2.0.0-py3-none-any.whl", hash = "sha256:29af5a53e9fb4e158f525367678b50053808ca6c21ba585754c77d790008c746"},
    {file = "waitress-2.0.0.tar.gz", hash = "sha256:69e1f242c7f80273490d3403c3976f3ac3b26e289856936d1f620ed48f321897"},
]
webob = [
    {file = "WebOb-1.8.7-py2.py3-none-any.whl", hash = "sha256:73aae30359291c14fa3b956f8b5ca31960e420c28c1bec002547fb04928cf89b"},
    {file = "WebOb-1.8.7.tar.gz", hash = "sha256:b64ef5141be559cfade448f044fa45c2260351edcb6a8ef6b7e00c7dcef0c323"},
]
websocket-client = [
    {file = "websocket-client-1.3.1.tar.gz", hash = "sha256:6278a75065395418283f887de7c3beafb3aa68dada5cacbe4b214e8d26da499b"},
    {file = "websocket_client-1.3.1-py3-none-any.whl", hash = "sha256:074e2ed575e7c822fc0940d31c3ac9bb2b1142c303eafcf3e304e6ce035522e8"},
]
webtest = [
    {file = "WebTest-2.0.35-py2.py3-none-any.whl", hash = "sha256:44ddfe99b5eca4cf07675e7222c81dd624d22f9a26035d2b93dc8862dc1153c6"},
    {file = "WebTest-2.0.35.tar.gz", hash = "sha256:aac168b5b2b4f200af4e35867cf316712210e3d5db81c1cbdff38722647bb087"},
]
zipp = [
    {file = "zipp-3.6.0-py3-none-any.whl", hash = "sha256:9fe5ea21568a0a70e50f273397638d39b03353731e6cbbb3fd8502a33fec40bc"},
    {file = "zipp-3.6.0.tar.gz", hash = "sha256:71c644c5369f4a6e07636f0aa966270449561fcea2e3d6747b8d23efaa9d7832"},
]
