[[package]]
category = "dev"
description = "Atomic file writes."
marker = "sys_platform == \"win32\""
name = "atomicwrites"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.4.0"

[[package]]
category = "dev"
description = "Classes Without Boilerplate"
name = "attrs"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "21.2.0"

[package.extras]
dev = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface"]
tests_no_zope = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins"]

[[package]]
category = "main"
description = "AWS signature version 4 signing process for the python requests module"
name = "aws-requests-auth"
optional = false
python-versions = "*"
version = "0.4.3"

[package.dependencies]
requests = ">=0.14.0"

[[package]]
category = "main"
description = "Screen-scraping library"
name = "beautifulsoup4"
optional = false
python-versions = ">3.0.0"
version = "4.10.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
category = "main"
description = "The AWS SDK for Python"
name = "boto3"
optional = false
python-versions = ">= 3.6"
version = "1.18.45"

[package.dependencies]
botocore = ">=1.21.45,<1.22.0"
jmespath = ">=0.7.1,<1.0.0"
s3transfer = ">=0.5.0,<0.6.0"

[package.extras]
crt = ["botocore (>=1.21.0,<2.0a0)"]

[[package]]
category = "dev"
description = "Type annotations for boto3 1.18.23, generated by mypy-boto3-builder 5.1.0"
name = "boto3-stubs"
optional = false
python-versions = ">=3.6"
version = "1.18.23"

[package.dependencies]
botocore-stubs = "*"

[package.dependencies.typing-extensions]
python = "<3.8"
version = "*"

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.18.18)"]
acm = ["mypy-boto3-acm (>=1.18.18)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.18.18)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.18.18)"]
all = ["mypy-boto3-accessanalyzer (>=1.18.18)", "mypy-boto3-acm (>=1.18.18)", "mypy-boto3-acm-pca (>=1.18.18)", "mypy-boto3-alexaforbusiness (>=1.18.18)", "mypy-boto3-amp (>=1.18.18)", "mypy-boto3-amplify (>=1.18.18)", "mypy-boto3-amplifybackend (>=1.18.18)", "mypy-boto3-apigateway (>=1.18.18)", "mypy-boto3-apigatewaymanagementapi (>=1.18.18)", "mypy-boto3-apigatewayv2 (>=1.18.18)", "mypy-boto3-appconfig (>=1.18.18)", "mypy-boto3-appflow (>=1.18.18)", "mypy-boto3-appintegrations (>=1.18.18)", "mypy-boto3-application-autoscaling (>=1.18.18)", "mypy-boto3-application-insights (>=1.18.18)", "mypy-boto3-applicationcostprofiler (>=1.18.18)", "mypy-boto3-appmesh (>=1.18.18)", "mypy-boto3-apprunner (>=1.18.18)", "mypy-boto3-appstream (>=1.18.18)", "mypy-boto3-appsync (>=1.18.18)", "mypy-boto3-athena (>=1.18.18)", "mypy-boto3-auditmanager (>=1.18.18)", "mypy-boto3-autoscaling (>=1.18.18)", "mypy-boto3-autoscaling-plans (>=1.18.18)", "mypy-boto3-backup (>=1.18.18)", "mypy-boto3-batch (>=1.18.18)", "mypy-boto3-braket (>=1.18.18)", "mypy-boto3-budgets (>=1.18.18)", "mypy-boto3-ce (>=1.18.18)", "mypy-boto3-chime (>=1.18.18)", "mypy-boto3-chime-sdk-identity (>=1.18.18)", "mypy-boto3-chime-sdk-messaging (>=1.18.18)", "mypy-boto3-cloud9 (>=1.18.18)", "mypy-boto3-clouddirectory (>=1.18.18)", "mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-cloudfront (>=1.18.18)", "mypy-boto3-cloudhsm (>=1.18.18)", "mypy-boto3-cloudhsmv2 (>=1.18.18)", "mypy-boto3-cloudsearch (>=1.18.18)", "mypy-boto3-cloudsearchdomain (>=1.18.18)", "mypy-boto3-cloudtrail (>=1.18.18)", "mypy-boto3-cloudwatch (>=1.18.18)", "mypy-boto3-codeartifact (>=1.18.18)", "mypy-boto3-codebuild (>=1.18.18)", "mypy-boto3-codecommit (>=1.18.18)", "mypy-boto3-codedeploy (>=1.18.18)", "mypy-boto3-codeguru-reviewer (>=1.18.18)", "mypy-boto3-codeguruprofiler (>=1.18.18)", "mypy-boto3-codepipeline (>=1.18.18)", "mypy-boto3-codestar (>=1.18.18)", "mypy-boto3-codestar-connections (>=1.18.18)", "mypy-boto3-codestar-notifications (>=1.18.18)", "mypy-boto3-cognito-identity (>=1.18.18)", "mypy-boto3-cognito-idp (>=1.18.18)", "mypy-boto3-cognito-sync (>=1.18.18)", "mypy-boto3-comprehend (>=1.18.18)", "mypy-boto3-comprehendmedical (>=1.18.18)", "mypy-boto3-compute-optimizer (>=1.18.18)", "mypy-boto3-config (>=1.18.18)", "mypy-boto3-connect (>=1.18.18)", "mypy-boto3-connect-contact-lens (>=1.18.18)", "mypy-boto3-connectparticipant (>=1.18.18)", "mypy-boto3-cur (>=1.18.18)", "mypy-boto3-customer-profiles (>=1.18.18)", "mypy-boto3-databrew (>=1.18.18)", "mypy-boto3-dataexchange (>=1.18.18)", "mypy-boto3-datapipeline (>=1.18.18)", "mypy-boto3-datasync (>=1.18.18)", "mypy-boto3-dax (>=1.18.18)", "mypy-boto3-detective (>=1.18.18)", "mypy-boto3-devicefarm (>=1.18.18)", "mypy-boto3-devops-guru (>=1.18.18)", "mypy-boto3-directconnect (>=1.18.18)", "mypy-boto3-discovery (>=1.18.18)", "mypy-boto3-dlm (>=1.18.18)", "mypy-boto3-dms (>=1.18.18)", "mypy-boto3-docdb (>=1.18.18)", "mypy-boto3-ds (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-dynamodbstreams (>=1.18.18)", "mypy-boto3-ebs (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-ec2-instance-connect (>=1.18.18)", "mypy-boto3-ecr (>=1.18.18)", "mypy-boto3-ecr-public (>=1.18.18)", "mypy-boto3-ecs (>=1.18.18)", "mypy-boto3-efs (>=1.18.18)", "mypy-boto3-eks (>=1.18.18)", "mypy-boto3-elastic-inference (>=1.18.18)", "mypy-boto3-elasticache (>=1.18.18)", "mypy-boto3-elasticbeanstalk (>=1.18.18)", "mypy-boto3-elastictranscoder (>=1.18.18)", "mypy-boto3-elb (>=1.18.18)", "mypy-boto3-elbv2 (>=1.18.18)", "mypy-boto3-emr (>=1.18.18)", "mypy-boto3-emr-containers (>=1.18.18)", "mypy-boto3-es (>=1.18.18)", "mypy-boto3-events (>=1.18.18)", "mypy-boto3-finspace (>=1.18.18)", "mypy-boto3-finspace-data (>=1.18.18)", "mypy-boto3-firehose (>=1.18.18)", "mypy-boto3-fis (>=1.18.18)", "mypy-boto3-fms (>=1.18.18)", "mypy-boto3-forecast (>=1.18.18)", "mypy-boto3-forecastquery (>=1.18.18)", "mypy-boto3-frauddetector (>=1.18.18)", "mypy-boto3-fsx (>=1.18.18)", "mypy-boto3-gamelift (>=1.18.18)", "mypy-boto3-glacier (>=1.18.18)", "mypy-boto3-globalaccelerator (>=1.18.18)", "mypy-boto3-glue (>=1.18.18)", "mypy-boto3-greengrass (>=1.18.18)", "mypy-boto3-greengrassv2 (>=1.18.18)", "mypy-boto3-groundstation (>=1.18.18)", "mypy-boto3-guardduty (>=1.18.18)", "mypy-boto3-health (>=1.18.18)", "mypy-boto3-healthlake (>=1.18.18)", "mypy-boto3-honeycode (>=1.18.18)", "mypy-boto3-iam (>=1.18.18)", "mypy-boto3-identitystore (>=1.18.18)", "mypy-boto3-imagebuilder (>=1.18.18)", "mypy-boto3-importexport (>=1.18.18)", "mypy-boto3-inspector (>=1.18.18)", "mypy-boto3-iot (>=1.18.18)", "mypy-boto3-iot-data (>=1.18.18)", "mypy-boto3-iot-jobs-data (>=1.18.18)", "mypy-boto3-iot1click-devices (>=1.18.18)", "mypy-boto3-iot1click-projects (>=1.18.18)", "mypy-boto3-iotanalytics (>=1.18.18)", "mypy-boto3-iotdeviceadvisor (>=1.18.18)", "mypy-boto3-iotevents (>=1.18.18)", "mypy-boto3-iotevents-data (>=1.18.18)", "mypy-boto3-iotfleethub (>=1.18.18)", "mypy-boto3-iotsecuretunneling (>=1.18.18)", "mypy-boto3-iotsitewise (>=1.18.18)", "mypy-boto3-iotthingsgraph (>=1.18.18)", "mypy-boto3-iotwireless (>=1.18.18)", "mypy-boto3-ivs (>=1.18.18)", "mypy-boto3-kafka (>=1.18.18)", "mypy-boto3-kendra (>=1.18.18)", "mypy-boto3-kinesis (>=1.18.18)", "mypy-boto3-kinesis-video-archived-media (>=1.18.18)", "mypy-boto3-kinesis-video-media (>=1.18.18)", "mypy-boto3-kinesis-video-signaling (>=1.18.18)", "mypy-boto3-kinesisanalytics (>=1.18.18)", "mypy-boto3-kinesisanalyticsv2 (>=1.18.18)", "mypy-boto3-kinesisvideo (>=1.18.18)", "mypy-boto3-kms (>=1.18.18)", "mypy-boto3-lakeformation (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-lex-models (>=1.18.18)", "mypy-boto3-lex-runtime (>=1.18.18)", "mypy-boto3-lexv2-models (>=1.18.18)", "mypy-boto3-lexv2-runtime (>=1.18.18)", "mypy-boto3-license-manager (>=1.18.18)", "mypy-boto3-lightsail (>=1.18.18)", "mypy-boto3-location (>=1.18.18)", "mypy-boto3-logs (>=1.18.18)", "mypy-boto3-lookoutequipment (>=1.18.18)", "mypy-boto3-lookoutmetrics (>=1.18.18)", "mypy-boto3-lookoutvision (>=1.18.18)", "mypy-boto3-machinelearning (>=1.18.18)", "mypy-boto3-macie (>=1.18.18)", "mypy-boto3-macie2 (>=1.18.18)", "mypy-boto3-managedblockchain (>=1.18.18)", "mypy-boto3-marketplace-catalog (>=1.18.18)", "mypy-boto3-marketplace-entitlement (>=1.18.18)", "mypy-boto3-marketplacecommerceanalytics (>=1.18.18)", "mypy-boto3-mediaconnect (>=1.18.18)", "mypy-boto3-mediaconvert (>=1.18.18)", "mypy-boto3-medialive (>=1.18.18)", "mypy-boto3-mediapackage (>=1.18.18)", "mypy-boto3-mediapackage-vod (>=1.18.18)", "mypy-boto3-mediastore (>=1.18.18)", "mypy-boto3-mediastore-data (>=1.18.18)", "mypy-boto3-mediatailor (>=1.18.18)", "mypy-boto3-meteringmarketplace (>=1.18.18)", "mypy-boto3-mgh (>=1.18.18)", "mypy-boto3-mgn (>=1.18.18)", "mypy-boto3-migrationhub-config (>=1.18.18)", "mypy-boto3-mobile (>=1.18.18)", "mypy-boto3-mq (>=1.18.18)", "mypy-boto3-mturk (>=1.18.18)", "mypy-boto3-mwaa (>=1.18.18)", "mypy-boto3-neptune (>=1.18.18)", "mypy-boto3-network-firewall (>=1.18.18)", "mypy-boto3-networkmanager (>=1.18.18)", "mypy-boto3-nimble (>=1.18.18)", "mypy-boto3-opsworks (>=1.18.18)", "mypy-boto3-opsworkscm (>=1.18.18)", "mypy-boto3-organizations (>=1.18.18)", "mypy-boto3-outposts (>=1.18.18)", "mypy-boto3-personalize (>=1.18.18)", "mypy-boto3-personalize-events (>=1.18.18)", "mypy-boto3-personalize-runtime (>=1.18.18)", "mypy-boto3-pi (>=1.18.18)", "mypy-boto3-pinpoint (>=1.18.18)", "mypy-boto3-pinpoint-email (>=1.18.18)", "mypy-boto3-pinpoint-sms-voice (>=1.18.18)", "mypy-boto3-polly (>=1.18.18)", "mypy-boto3-pricing (>=1.18.18)", "mypy-boto3-proton (>=1.18.18)", "mypy-boto3-qldb (>=1.18.18)", "mypy-boto3-qldb-session (>=1.18.18)", "mypy-boto3-quicksight (>=1.18.18)", "mypy-boto3-ram (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-rds-data (>=1.18.18)", "mypy-boto3-redshift (>=1.18.18)", "mypy-boto3-redshift-data (>=1.18.18)", "mypy-boto3-rekognition (>=1.18.18)", "mypy-boto3-resource-groups (>=1.18.18)", "mypy-boto3-resourcegroupstaggingapi (>=1.18.18)", "mypy-boto3-robomaker (>=1.18.18)", "mypy-boto3-route53 (>=1.18.18)", "mypy-boto3-route53-recovery-cluster (>=1.18.18)", "mypy-boto3-route53-recovery-control-config (>=1.18.18)", "mypy-boto3-route53-recovery-readiness (>=1.18.18)", "mypy-boto3-route53domains (>=1.18.18)", "mypy-boto3-route53resolver (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-s3control (>=1.18.18)", "mypy-boto3-s3outposts (>=1.18.18)", "mypy-boto3-sagemaker (>=1.18.18)", "mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)", "mypy-boto3-sagemaker-edge (>=1.18.18)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)", "mypy-boto3-sagemaker-runtime (>=1.18.18)", "mypy-boto3-savingsplans (>=1.18.18)", "mypy-boto3-schemas (>=1.18.18)", "mypy-boto3-sdb (>=1.18.18)", "mypy-boto3-secretsmanager (>=1.18.18)", "mypy-boto3-securityhub (>=1.18.18)", "mypy-boto3-serverlessrepo (>=1.18.18)", "mypy-boto3-service-quotas (>=1.18.18)", "mypy-boto3-servicecatalog (>=1.18.18)", "mypy-boto3-servicecatalog-appregistry (>=1.18.18)", "mypy-boto3-servicediscovery (>=1.18.18)", "mypy-boto3-ses (>=1.18.18)", "mypy-boto3-sesv2 (>=1.18.18)", "mypy-boto3-shield (>=1.18.18)", "mypy-boto3-signer (>=1.18.18)", "mypy-boto3-sms (>=1.18.18)", "mypy-boto3-sms-voice (>=1.18.18)", "mypy-boto3-snow-device-management (>=1.18.18)", "mypy-boto3-snowball (>=1.18.18)", "mypy-boto3-sns (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)", "mypy-boto3-ssm (>=1.18.18)", "mypy-boto3-ssm-contacts (>=1.18.18)", "mypy-boto3-ssm-incidents (>=1.18.18)", "mypy-boto3-sso (>=1.18.18)", "mypy-boto3-sso-admin (>=1.18.18)", "mypy-boto3-sso-oidc (>=1.18.18)", "mypy-boto3-stepfunctions (>=1.18.18)", "mypy-boto3-storagegateway (>=1.18.18)", "mypy-boto3-sts (>=1.18.18)", "mypy-boto3-support (>=1.18.18)", "mypy-boto3-swf (>=1.18.18)", "mypy-boto3-synthetics (>=1.18.18)", "mypy-boto3-textract (>=1.18.18)", "mypy-boto3-timestream-query (>=1.18.18)", "mypy-boto3-timestream-write (>=1.18.18)", "mypy-boto3-transcribe (>=1.18.18)", "mypy-boto3-transfer (>=1.18.18)", "mypy-boto3-translate (>=1.18.18)", "mypy-boto3-waf (>=1.18.18)", "mypy-boto3-waf-regional (>=1.18.18)", "mypy-boto3-wafv2 (>=1.18.18)", "mypy-boto3-wellarchitected (>=1.18.18)", "mypy-boto3-workdocs (>=1.18.18)", "mypy-boto3-worklink (>=1.18.18)", "mypy-boto3-workmail (>=1.18.18)", "mypy-boto3-workmailmessageflow (>=1.18.18)", "mypy-boto3-workspaces (>=1.18.18)", "mypy-boto3-xray (>=1.18.18)"]
amp = ["mypy-boto3-amp (>=1.18.18)"]
amplify = ["mypy-boto3-amplify (>=1.18.18)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.18.18)"]
apigateway = ["mypy-boto3-apigateway (>=1.18.18)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.18.18)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.18.18)"]
appconfig = ["mypy-boto3-appconfig (>=1.18.18)"]
appflow = ["mypy-boto3-appflow (>=1.18.18)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.18.18)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.18.18)"]
application-insights = ["mypy-boto3-application-insights (>=1.18.18)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.18.18)"]
appmesh = ["mypy-boto3-appmesh (>=1.18.18)"]
apprunner = ["mypy-boto3-apprunner (>=1.18.18)"]
appstream = ["mypy-boto3-appstream (>=1.18.18)"]
appsync = ["mypy-boto3-appsync (>=1.18.18)"]
athena = ["mypy-boto3-athena (>=1.18.18)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.18.18)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.18.18)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.18.18)"]
backup = ["mypy-boto3-backup (>=1.18.18)"]
batch = ["mypy-boto3-batch (>=1.18.18)"]
braket = ["mypy-boto3-braket (>=1.18.18)"]
budgets = ["mypy-boto3-budgets (>=1.18.18)"]
ce = ["mypy-boto3-ce (>=1.18.18)"]
chime = ["mypy-boto3-chime (>=1.18.18)"]
chime-sdk-identity = ["mypy-boto3-chime-sdk-identity (>=1.18.18)"]
chime-sdk-messaging = ["mypy-boto3-chime-sdk-messaging (>=1.18.18)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.18.18)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.18.18)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.18.18)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.18.18)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.18.18)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.18.18)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.18.18)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.18.18)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.18.18)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.18.18)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.18.18)"]
codebuild = ["mypy-boto3-codebuild (>=1.18.18)"]
codecommit = ["mypy-boto3-codecommit (>=1.18.18)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.18.18)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.18.18)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.18.18)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.18.18)"]
codestar = ["mypy-boto3-codestar (>=1.18.18)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.18.18)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.18.18)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.18.18)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.18.18)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.18.18)"]
comprehend = ["mypy-boto3-comprehend (>=1.18.18)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.18.18)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.18.18)"]
config = ["mypy-boto3-config (>=1.18.18)"]
connect = ["mypy-boto3-connect (>=1.18.18)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.18.18)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.18.18)"]
cur = ["mypy-boto3-cur (>=1.18.18)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.18.18)"]
databrew = ["mypy-boto3-databrew (>=1.18.18)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.18.18)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.18.18)"]
datasync = ["mypy-boto3-datasync (>=1.18.18)"]
dax = ["mypy-boto3-dax (>=1.18.18)"]
detective = ["mypy-boto3-detective (>=1.18.18)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.18.18)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.18.18)"]
directconnect = ["mypy-boto3-directconnect (>=1.18.18)"]
discovery = ["mypy-boto3-discovery (>=1.18.18)"]
dlm = ["mypy-boto3-dlm (>=1.18.18)"]
dms = ["mypy-boto3-dms (>=1.18.18)"]
docdb = ["mypy-boto3-docdb (>=1.18.18)"]
ds = ["mypy-boto3-ds (>=1.18.18)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.18.18)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.18.18)"]
ebs = ["mypy-boto3-ebs (>=1.18.18)"]
ec2 = ["mypy-boto3-ec2 (>=1.18.18)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.18.18)"]
ecr = ["mypy-boto3-ecr (>=1.18.18)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.18.18)"]
ecs = ["mypy-boto3-ecs (>=1.18.18)"]
efs = ["mypy-boto3-efs (>=1.18.18)"]
eks = ["mypy-boto3-eks (>=1.18.18)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.18.18)"]
elasticache = ["mypy-boto3-elasticache (>=1.18.18)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.18.18)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.18.18)"]
elb = ["mypy-boto3-elb (>=1.18.18)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.18.18)"]
emr = ["mypy-boto3-emr (>=1.18.18)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.18.18)"]
es = ["mypy-boto3-es (>=1.18.18)"]
essential = ["mypy-boto3-cloudformation (>=1.18.18)", "mypy-boto3-dynamodb (>=1.18.18)", "mypy-boto3-ec2 (>=1.18.18)", "mypy-boto3-lambda (>=1.18.18)", "mypy-boto3-rds (>=1.18.18)", "mypy-boto3-s3 (>=1.18.18)", "mypy-boto3-sqs (>=1.18.18)"]
events = ["mypy-boto3-events (>=1.18.18)"]
finspace = ["mypy-boto3-finspace (>=1.18.18)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.18.18)"]
firehose = ["mypy-boto3-firehose (>=1.18.18)"]
fis = ["mypy-boto3-fis (>=1.18.18)"]
fms = ["mypy-boto3-fms (>=1.18.18)"]
forecast = ["mypy-boto3-forecast (>=1.18.18)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.18.18)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.18.18)"]
fsx = ["mypy-boto3-fsx (>=1.18.18)"]
gamelift = ["mypy-boto3-gamelift (>=1.18.18)"]
glacier = ["mypy-boto3-glacier (>=1.18.18)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.18.18)"]
glue = ["mypy-boto3-glue (>=1.18.18)"]
greengrass = ["mypy-boto3-greengrass (>=1.18.18)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.18.18)"]
groundstation = ["mypy-boto3-groundstation (>=1.18.18)"]
guardduty = ["mypy-boto3-guardduty (>=1.18.18)"]
health = ["mypy-boto3-health (>=1.18.18)"]
healthlake = ["mypy-boto3-healthlake (>=1.18.18)"]
honeycode = ["mypy-boto3-honeycode (>=1.18.18)"]
iam = ["mypy-boto3-iam (>=1.18.18)"]
identitystore = ["mypy-boto3-identitystore (>=1.18.18)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.18.18)"]
importexport = ["mypy-boto3-importexport (>=1.18.18)"]
inspector = ["mypy-boto3-inspector (>=1.18.18)"]
iot = ["mypy-boto3-iot (>=1.18.18)"]
iot-data = ["mypy-boto3-iot-data (>=1.18.18)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.18.18)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.18.18)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.18.18)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.18.18)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.18.18)"]
iotevents = ["mypy-boto3-iotevents (>=1.18.18)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.18.18)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.18.18)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.18.18)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.18.18)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.18.18)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.18.18)"]
ivs = ["mypy-boto3-ivs (>=1.18.18)"]
kafka = ["mypy-boto3-kafka (>=1.18.18)"]
kendra = ["mypy-boto3-kendra (>=1.18.18)"]
kinesis = ["mypy-boto3-kinesis (>=1.18.18)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.18.18)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.18.18)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.18.18)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.18.18)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.18.18)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.18.18)"]
kms = ["mypy-boto3-kms (>=1.18.18)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.18.18)"]
lambda = ["mypy-boto3-lambda (>=1.18.18)"]
lex-models = ["mypy-boto3-lex-models (>=1.18.18)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.18.18)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.18.18)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.18.18)"]
license-manager = ["mypy-boto3-license-manager (>=1.18.18)"]
lightsail = ["mypy-boto3-lightsail (>=1.18.18)"]
location = ["mypy-boto3-location (>=1.18.18)"]
logs = ["mypy-boto3-logs (>=1.18.18)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.18.18)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.18.18)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.18.18)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.18.18)"]
macie = ["mypy-boto3-macie (>=1.18.18)"]
macie2 = ["mypy-boto3-macie2 (>=1.18.18)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.18.18)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.18.18)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.18.18)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.18.18)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.18.18)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.18.18)"]
medialive = ["mypy-boto3-medialive (>=1.18.18)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.18.18)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.18.18)"]
mediastore = ["mypy-boto3-mediastore (>=1.18.18)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.18.18)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.18.18)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.18.18)"]
mgh = ["mypy-boto3-mgh (>=1.18.18)"]
mgn = ["mypy-boto3-mgn (>=1.18.18)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.18.18)"]
mobile = ["mypy-boto3-mobile (>=1.18.18)"]
mq = ["mypy-boto3-mq (>=1.18.18)"]
mturk = ["mypy-boto3-mturk (>=1.18.18)"]
mwaa = ["mypy-boto3-mwaa (>=1.18.18)"]
neptune = ["mypy-boto3-neptune (>=1.18.18)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.18.18)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.18.18)"]
nimble = ["mypy-boto3-nimble (>=1.18.18)"]
opsworks = ["mypy-boto3-opsworks (>=1.18.18)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.18.18)"]
organizations = ["mypy-boto3-organizations (>=1.18.18)"]
outposts = ["mypy-boto3-outposts (>=1.18.18)"]
personalize = ["mypy-boto3-personalize (>=1.18.18)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.18.18)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.18.18)"]
pi = ["mypy-boto3-pi (>=1.18.18)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.18.18)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.18.18)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.18.18)"]
polly = ["mypy-boto3-polly (>=1.18.18)"]
pricing = ["mypy-boto3-pricing (>=1.18.18)"]
proton = ["mypy-boto3-proton (>=1.18.18)"]
qldb = ["mypy-boto3-qldb (>=1.18.18)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.18.18)"]
quicksight = ["mypy-boto3-quicksight (>=1.18.18)"]
ram = ["mypy-boto3-ram (>=1.18.18)"]
rds = ["mypy-boto3-rds (>=1.18.18)"]
rds-data = ["mypy-boto3-rds-data (>=1.18.18)"]
redshift = ["mypy-boto3-redshift (>=1.18.18)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.18.18)"]
rekognition = ["mypy-boto3-rekognition (>=1.18.18)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.18.18)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.18.18)"]
robomaker = ["mypy-boto3-robomaker (>=1.18.18)"]
route53 = ["mypy-boto3-route53 (>=1.18.18)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.18.18)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.18.18)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.18.18)"]
route53domains = ["mypy-boto3-route53domains (>=1.18.18)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.18.18)"]
s3 = ["mypy-boto3-s3 (>=1.18.18)"]
s3control = ["mypy-boto3-s3control (>=1.18.18)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.18.18)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.18.18)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.18.18)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.18.18)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.18.18)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.18.18)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.18.18)"]
schemas = ["mypy-boto3-schemas (>=1.18.18)"]
sdb = ["mypy-boto3-sdb (>=1.18.18)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.18.18)"]
securityhub = ["mypy-boto3-securityhub (>=1.18.18)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.18.18)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.18.18)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.18.18)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.18.18)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.18.18)"]
ses = ["mypy-boto3-ses (>=1.18.18)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.18.18)"]
shield = ["mypy-boto3-shield (>=1.18.18)"]
signer = ["mypy-boto3-signer (>=1.18.18)"]
sms = ["mypy-boto3-sms (>=1.18.18)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.18.18)"]
snow-device-management = ["mypy-boto3-snow-device-management (>=1.18.18)"]
snowball = ["mypy-boto3-snowball (>=1.18.18)"]
sns = ["mypy-boto3-sns (>=1.18.18)"]
sqs = ["mypy-boto3-sqs (>=1.18.18)"]
ssm = ["mypy-boto3-ssm (>=1.18.18)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.18.18)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.18.18)"]
sso = ["mypy-boto3-sso (>=1.18.18)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.18.18)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.18.18)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.18.18)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.18.18)"]
sts = ["mypy-boto3-sts (>=1.18.18)"]
support = ["mypy-boto3-support (>=1.18.18)"]
swf = ["mypy-boto3-swf (>=1.18.18)"]
synthetics = ["mypy-boto3-synthetics (>=1.18.18)"]
textract = ["mypy-boto3-textract (>=1.18.18)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.18.18)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.18.18)"]
transcribe = ["mypy-boto3-transcribe (>=1.18.18)"]
transfer = ["mypy-boto3-transfer (>=1.18.18)"]
translate = ["mypy-boto3-translate (>=1.18.18)"]
waf = ["mypy-boto3-waf (>=1.18.18)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.18.18)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.18.18)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.18.18)"]
workdocs = ["mypy-boto3-workdocs (>=1.18.18)"]
worklink = ["mypy-boto3-worklink (>=1.18.18)"]
workmail = ["mypy-boto3-workmail (>=1.18.18)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.18.18)"]
workspaces = ["mypy-boto3-workspaces (>=1.18.18)"]
xray = ["mypy-boto3-xray (>=1.18.18)"]

[[package]]
category = "main"
description = "Low-level, data-driven core of boto 3."
name = "botocore"
optional = false
python-versions = ">= 3.6"
version = "1.21.45"

[package.dependencies]
jmespath = ">=0.7.1,<1.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (0.11.24)"]

[[package]]
category = "dev"
description = "Type annotations for botocore 1.21.22, generated by mypy-boto3-builder 5.1.0"
name = "botocore-stubs"
optional = false
python-versions = ">=3.6"
version = "1.21.22"

[package.dependencies]
[package.dependencies.typing-extensions]
python = "<3.8"
version = "*"

[[package]]
category = "main"
description = "Python package for providing Mozilla's CA Bundle."
name = "certifi"
optional = false
python-versions = "*"
version = "2021.5.30"

[[package]]
category = "main"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
marker = "python_version >= \"3\""
name = "charset-normalizer"
optional = false
python-versions = ">=3.5.0"
version = "2.0.6"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
category = "dev"
description = "Cross-platform colored terminal text."
marker = "sys_platform == \"win32\""
name = "colorama"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "0.4.4"

[[package]]
category = "dev"
description = "Code coverage measurement for Python"
name = "coverage"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
version = "5.5"

[package.extras]
toml = ["toml"]

[[package]]
category = "main"
description = "A Python library for the Docker Engine API."
name = "docker"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "4.4.4"

[package.dependencies]
pywin32 = "227"
requests = ">=2.14.2,<2.18.0 || >2.18.0"
six = ">=1.4.0"
websocket-client = ">=0.32.0"

[package.extras]
ssh = ["paramiko (>=2.4.2)"]
tls = ["pyOpenSSL (>=17.5.0)", "cryptography (>=1.3.4)", "idna (>=2.0.0)"]

[[package]]
category = "main"
description = "Python client for Elasticsearch"
name = "elasticsearch"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"
version = "6.8.1"

[package.dependencies]
urllib3 = ">=1.21.1"

[package.extras]
develop = ["requests (>=2.0.0,<3.0.0)", "nose", "coverage", "mock", "pyyaml", "nosexcover", "numpy", "pandas", "sphinx (<1.7)", "sphinx-rtd-theme"]
requests = ["requests (>=2.4.0,<3.0.0)"]

[[package]]
category = "dev"
description = "the modular source code checker: pep8 pyflakes and co"
name = "flake8"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"
version = "3.9.2"

[package.dependencies]
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.7.0,<2.8.0"
pyflakes = ">=2.3.0,<2.4.0"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = "*"

[[package]]
category = "dev"
description = "Plugin for nose or pytest that automatically reruns flaky tests."
name = "flaky"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "3.7.0"

[[package]]
category = "main"
description = "Git Object Database"
name = "gitdb"
optional = false
python-versions = ">=3.4"
version = "4.0.7"

[package.dependencies]
smmap = ">=3.0.1,<5"

[[package]]
category = "main"
description = "Python Git Library"
name = "gitpython"
optional = false
python-versions = ">=3.6"
version = "3.1.20"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[package.dependencies.typing-extensions]
python = "<3.10"
version = ">=3.7.4.3"

[[package]]
category = "main"
description = "Internationalized Domain Names in Applications (IDNA)"
marker = "python_version >= \"3\""
name = "idna"
optional = false
python-versions = ">=3.5"
version = "3.2"

[[package]]
category = "dev"
description = "Read metadata from Python packages"
marker = "python_version < \"3.8\""
name = "importlib-metadata"
optional = false
python-versions = ">=3.6"
version = "4.8.1"

[package.dependencies]
zipp = ">=0.5"

[package.dependencies.typing-extensions]
python = "<3.8"
version = ">=3.6.4"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
category = "dev"
description = "iniconfig: brain-dead simple config-ini parsing"
name = "iniconfig"
optional = false
python-versions = "*"
version = "1.1.1"

[[package]]
category = "main"
description = "JSON Matching Expressions"
name = "jmespath"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.10.0"

[[package]]
category = "dev"
description = "McCabe checker, plugin for flake8"
name = "mccabe"
optional = false
python-versions = "*"
version = "0.6.1"

[[package]]
category = "dev"
description = "Core utilities for Python packages"
name = "packaging"
optional = false
python-versions = ">=3.6"
version = "21.0"

[package.dependencies]
pyparsing = ">=2.0.2"

[[package]]
category = "dev"
description = "plugin and hook calling mechanisms for python"
name = "pluggy"
optional = false
python-versions = ">=3.6"
version = "1.0.0"

[package.dependencies]
[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
category = "dev"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
name = "py"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.10.0"

[[package]]
category = "dev"
description = "Python style guide checker"
name = "pycodestyle"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.7.0"

[[package]]
category = "dev"
description = "passive checker of Python programs"
name = "pyflakes"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.3.1"

[[package]]
category = "dev"
description = "Python parsing module"
name = "pyparsing"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "2.4.7"

[[package]]
category = "dev"
description = "pytest: simple powerful testing with Python"
name = "pytest"
optional = false
python-versions = ">=3.6"
version = "6.2.5"

[package.dependencies]
atomicwrites = ">=1.0"
attrs = ">=19.2.0"
colorama = "*"
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
category = "dev"
description = "Pytest plugin for measuring coverage."
name = "pytest-cov"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.12.1"

[package.dependencies]
coverage = ">=5.2.1"
pytest = ">=4.6"
toml = "*"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
category = "dev"
description = "Thin-wrapper around the mock package for easier use with pytest"
name = "pytest-mock"
optional = false
python-versions = ">=3.6"
version = "3.6.1"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
category = "dev"
description = "Invoke py.test as distutils command with dependency resolution"
name = "pytest-runner"
optional = false
python-versions = ">=3.6"
version = "5.3.1"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-virtualenv", "pytest-black (>=0.3.7)", "pytest-mypy"]

[[package]]
category = "main"
description = "Extensions to the standard Python datetime module"
name = "python-dateutil"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
version = "2.8.2"

[package.dependencies]
six = ">=1.5"

[[package]]
category = "main"
description = "World timezone definitions, modern and historical"
name = "pytz"
optional = false
python-versions = "*"
version = "2021.1"

[[package]]
category = "main"
description = "Python for Window Extensions"
marker = "sys_platform == \"win32\""
name = "pywin32"
optional = false
python-versions = "*"
version = "227"

[[package]]
category = "main"
description = "Python HTTP for Humans."
name = "requests"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"
version = "2.26.0"

[package.dependencies]
certifi = ">=2017.4.17"
urllib3 = ">=1.21.1,<1.27"

[package.dependencies.charset-normalizer]
python = ">=3"
version = ">=2.0.0,<2.1.0"

[package.dependencies.idna]
python = ">=3"
version = ">=2.5,<4"

[package.extras]
socks = ["PySocks (>=1.5.6,<1.5.7 || >1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
category = "main"
description = "Validating URI References per RFC 3986"
name = "rfc3986"
optional = false
python-versions = "*"
version = "1.5.0"

[package.extras]
idna2008 = ["idna"]

[[package]]
category = "main"
description = "An Amazon S3 Transfer Manager"
name = "s3transfer"
optional = false
python-versions = ">= 3.6"
version = "0.5.0"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore (>=1.20.29,<2.0a.0)"]

[[package]]
category = "main"
description = "Python 2 and 3 compatibility utilities"
name = "six"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
version = "1.16.0"

[[package]]
category = "main"
description = "A pure Python implementation of a sliding window memory map manager"
name = "smmap"
optional = false
python-versions = ">=3.5"
version = "4.0.0"

[[package]]
category = "main"
description = "A modern CSS selector implementation for Beautiful Soup."
name = "soupsieve"
optional = false
python-versions = ">=3.6"
version = "2.2.1"

[[package]]
category = "main"
description = "Structured Logging for Python"
name = "structlog"
optional = false
python-versions = "*"
version = "19.2.0"

[package.dependencies]
six = "*"

[package.extras]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "pytest-azurepipelines", "python-rapidjson"]
dev = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "sphinx", "twisted", "pre-commit", "python-rapidjson"]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "python-rapidjson"]

[[package]]
category = "main"
description = "Python Library for Tom's Obvious, Minimal Language"
name = "toml"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.10.2"

[[package]]
category = "main"
description = "Backported and Experimental Type Hints for Python 3.6+"
name = "typing-extensions"
optional = false
python-versions = ">=3.6"
version = "4.0.1"

[[package]]
category = "main"
description = "HTTP library with thread-safe connection pooling, file post, and more."
name = "urllib3"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
version = "1.26.6"

[package.extras]
brotli = ["brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,<1.5.7 || >1.5.7,<2.0)"]

[[package]]
category = "main"
description = "Waitress WSGI server"
name = "waitress"
optional = false
python-versions = ">=3.6.0"
version = "2.0.0"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.9)"]
testing = ["pytest", "pytest-cover", "coverage (>=5.0)"]

[[package]]
category = "main"
description = "WSGI request and response object"
name = "webob"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"
version = "1.8.7"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["pytest (>=3.1.0)", "coverage", "pytest-cov", "pytest-xdist"]

[[package]]
category = "main"
description = "WebSocket client for Python with low level API options"
name = "websocket-client"
optional = false
python-versions = ">=3.6"
version = "1.2.1"

[package.extras]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
category = "main"
description = "Helper to test WSGI applications"
name = "webtest"
optional = false
python-versions = "*"
version = "2.0.35"

[package.dependencies]
WebOb = ">=1.2"
beautifulsoup4 = "*"
six = "*"
waitress = ">=0.8.5"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.8)"]
tests = ["nose (<1.3.0)", "coverage", "mock", "pastedeploy", "wsgiproxy2", "pyquery"]

[[package]]
category = "dev"
description = "Backport of pathlib-compatible object wrapper for zip files"
marker = "python_version < \"3.8\""
name = "zipp"
optional = false
python-versions = ">=3.6"
version = "3.5.0"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
content-hash = "ce64cd1a2a4b50898fdcdc3a59f7ab35f530df77ba24f7106af0299f46b53d51"
python-versions = ">=3.6.1,<3.10"

[metadata.files]
atomicwrites = [
    {file = "atomicwrites-1.4.0-py2.py3-none-any.whl", hash = "sha256:6d1784dea7c0c8d4a5172b6c620f40b6e4cbfdf96d783691f2e1302a7b88e197"},
    {file = "atomicwrites-1.4.0.tar.gz", hash = "sha256:ae70396ad1a434f9c7046fd2dd196fc04b12f9e91ffb859164193be8b6168a7a"},
]
attrs = [
    {file = "attrs-21.2.0-py2.py3-none-any.whl", hash = "sha256:149e90d6d8ac20db7a955ad60cf0e6881a3f20d37096140088356da6c716b0b1"},
    {file = "attrs-21.2.0.tar.gz", hash = "sha256:ef6aaac3ca6cd92904cdd0d83f629a15f18053ec84e6432106f7a4d04ae4f5fb"},
]
aws-requests-auth = [
    {file = "aws-requests-auth-0.4.3.tar.gz", hash = "sha256:33593372018b960a31dbbe236f89421678b885c35f0b6a7abfae35bb77e069b2"},
    {file = "aws_requests_auth-0.4.3-py2.py3-none-any.whl", hash = "sha256:646bc37d62140ea1c709d20148f5d43197e6bd2d63909eb36fa4bb2345759977"},
]
beautifulsoup4 = [
    {file = "beautifulsoup4-4.10.0-py3-none-any.whl", hash = "sha256:9a315ce70049920ea4572a4055bc4bd700c940521d36fc858205ad4fcde149bf"},
    {file = "beautifulsoup4-4.10.0.tar.gz", hash = "sha256:c23ad23c521d818955a4151a67d81580319d4bf548d3d49f4223ae041ff98891"},
]
boto3 = [
    {file = "boto3-1.18.45-py3-none-any.whl", hash = "sha256:c2fd29e53464e4ab79c224363c20a02af19f7ecc8baf37f7886a893fc672272a"},
    {file = "boto3-1.18.45.tar.gz", hash = "sha256:68ee81a7ef40380a5ab973e242bbf8739d56a49f8691508c48760fb5066933e3"},
]
boto3-stubs = [
    {file = "boto3-stubs-1.18.23.tar.gz", hash = "sha256:38915f107b36160ff2ba749fdb0de49d6dca4214fb16564d4f31f22f4f25099c"},
    {file = "boto3_stubs-1.18.23-py3-none-any.whl", hash = "sha256:4bed5a3aa0a3c9516791b22e9cd0aba7b93dd4d30669fc032118568bcf678a36"},
]
botocore = [
    {file = "botocore-1.21.45-py3-none-any.whl", hash = "sha256:1d31e461dfc9ddb9a86fdd47ebc61751adc8739b4f7160c687c04092e5fbe0aa"},
    {file = "botocore-1.21.45.tar.gz", hash = "sha256:b3a77dcc7d54a3725aa0a9b44e4a79142a013584cd0568750a9ee9ab6970538f"},
]
botocore-stubs = [
    {file = "botocore-stubs-1.21.22.tar.gz", hash = "sha256:10d97e57cd79c66b6b78fe0fcac3ab22e421af222c03e93afe3d05bdb5dadc48"},
    {file = "botocore_stubs-1.21.22-py3-none-any.whl", hash = "sha256:41ce3ad97ffe04c07a7939367d47aa6a049f4e939e184433f44f03e7149a2920"},
]
certifi = [
    {file = "certifi-2021.5.30-py2.py3-none-any.whl", hash = "sha256:50b1e4f8446b06f41be7dd6338db18e0990601dce795c2b1686458aa7e8fa7d8"},
    {file = "certifi-2021.5.30.tar.gz", hash = "sha256:2bbf76fd432960138b3ef6dda3dde0544f27cbf8546c458e60baf371917ba9ee"},
]
charset-normalizer = [
    {file = "charset-normalizer-2.0.6.tar.gz", hash = "sha256:5ec46d183433dcbd0ab716f2d7f29d8dee50505b3fdb40c6b985c7c4f5a3591f"},
    {file = "charset_normalizer-2.0.6-py3-none-any.whl", hash = "sha256:5d209c0a931f215cee683b6445e2d77677e7e75e159f78def0db09d68fafcaa6"},
]
colorama = [
    {file = "colorama-0.4.4-py2.py3-none-any.whl", hash = "sha256:9f47eda37229f68eee03b24b9748937c7dc3868f906e8ba69fbcbdd3bc5dc3e2"},
    {file = "colorama-0.4.4.tar.gz", hash = "sha256:5941b2b48a20143d2267e95b1c2a7603ce057ee39fd88e7329b0c292aa16869b"},
]
coverage = [
    {file = "coverage-5.5-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:b6d534e4b2ab35c9f93f46229363e17f63c53ad01330df9f2d6bd1187e5eaacf"},
    {file = "coverage-5.5-cp27-cp27m-manylinux1_i686.whl", hash = "sha256:b7895207b4c843c76a25ab8c1e866261bcfe27bfaa20c192de5190121770672b"},
    {file = "coverage-5.5-cp27-cp27m-manylinux1_x86_64.whl", hash = "sha256:c2723d347ab06e7ddad1a58b2a821218239249a9e4365eaff6649d31180c1669"},
    {file = "coverage-5.5-cp27-cp27m-manylinux2010_i686.whl", hash = "sha256:900fbf7759501bc7807fd6638c947d7a831fc9fdf742dc10f02956ff7220fa90"},
    {file = "coverage-5.5-cp27-cp27m-manylinux2010_x86_64.whl", hash = "sha256:004d1880bed2d97151facef49f08e255a20ceb6f9432df75f4eef018fdd5a78c"},
    {file = "coverage-5.5-cp27-cp27m-win32.whl", hash = "sha256:06191eb60f8d8a5bc046f3799f8a07a2d7aefb9504b0209aff0b47298333302a"},
    {file = "coverage-5.5-cp27-cp27m-win_amd64.whl", hash = "sha256:7501140f755b725495941b43347ba8a2777407fc7f250d4f5a7d2a1050ba8e82"},
    {file = "coverage-5.5-cp27-cp27mu-manylinux1_i686.whl", hash = "sha256:372da284cfd642d8e08ef606917846fa2ee350f64994bebfbd3afb0040436905"},
    {file = "coverage-5.5-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:8963a499849a1fc54b35b1c9f162f4108017b2e6db2c46c1bed93a72262ed083"},
    {file = "coverage-5.5-cp27-cp27mu-manylinux2010_i686.whl", hash = "sha256:869a64f53488f40fa5b5b9dcb9e9b2962a66a87dab37790f3fcfb5144b996ef5"},
    {file = "coverage-5.5-cp27-cp27mu-manylinux2010_x86_64.whl", hash = "sha256:4a7697d8cb0f27399b0e393c0b90f0f1e40c82023ea4d45d22bce7032a5d7b81"},
    {file = "coverage-5.5-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:8d0a0725ad7c1a0bcd8d1b437e191107d457e2ec1084b9f190630a4fb1af78e6"},
    {file = "coverage-5.5-cp310-cp310-manylinux1_x86_64.whl", hash = "sha256:51cb9476a3987c8967ebab3f0fe144819781fca264f57f89760037a2ea191cb0"},
    {file = "coverage-5.5-cp310-cp310-win_amd64.whl", hash = "sha256:c0891a6a97b09c1f3e073a890514d5012eb256845c451bd48f7968ef939bf4ae"},
    {file = "coverage-5.5-cp35-cp35m-macosx_10_9_x86_64.whl", hash = "sha256:3487286bc29a5aa4b93a072e9592f22254291ce96a9fbc5251f566b6b7343cdb"},
    {file = "coverage-5.5-cp35-cp35m-manylinux1_i686.whl", hash = "sha256:deee1077aae10d8fa88cb02c845cfba9b62c55e1183f52f6ae6a2df6a2187160"},
    {file = "coverage-5.5-cp35-cp35m-manylinux1_x86_64.whl", hash = "sha256:f11642dddbb0253cc8853254301b51390ba0081750a8ac03f20ea8103f0c56b6"},
    {file = "coverage-5.5-cp35-cp35m-manylinux2010_i686.whl", hash = "sha256:6c90e11318f0d3c436a42409f2749ee1a115cd8b067d7f14c148f1ce5574d701"},
    {file = "coverage-5.5-cp35-cp35m-manylinux2010_x86_64.whl", hash = "sha256:30c77c1dc9f253283e34c27935fded5015f7d1abe83bc7821680ac444eaf7793"},
    {file = "coverage-5.5-cp35-cp35m-win32.whl", hash = "sha256:9a1ef3b66e38ef8618ce5fdc7bea3d9f45f3624e2a66295eea5e57966c85909e"},
    {file = "coverage-5.5-cp35-cp35m-win_amd64.whl", hash = "sha256:972c85d205b51e30e59525694670de6a8a89691186012535f9d7dbaa230e42c3"},
    {file = "coverage-5.5-cp36-cp36m-macosx_10_9_x86_64.whl", hash = "sha256:af0e781009aaf59e25c5a678122391cb0f345ac0ec272c7961dc5455e1c40066"},
    {file = "coverage-5.5-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:74d881fc777ebb11c63736622b60cb9e4aee5cace591ce274fb69e582a12a61a"},
    {file = "coverage-5.5-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:92b017ce34b68a7d67bd6d117e6d443a9bf63a2ecf8567bb3d8c6c7bc5014465"},
    {file = "coverage-5.5-cp36-cp36m-manylinux2010_i686.whl", hash = "sha256:d636598c8305e1f90b439dbf4f66437de4a5e3c31fdf47ad29542478c8508bbb"},
    {file = "coverage-5.5-cp36-cp36m-manylinux2010_x86_64.whl", hash = "sha256:41179b8a845742d1eb60449bdb2992196e211341818565abded11cfa90efb821"},
    {file = "coverage-5.5-cp36-cp36m-win32.whl", hash = "sha256:040af6c32813fa3eae5305d53f18875bedd079960822ef8ec067a66dd8afcd45"},
    {file = "coverage-5.5-cp36-cp36m-win_amd64.whl", hash = "sha256:5fec2d43a2cc6965edc0bb9e83e1e4b557f76f843a77a2496cbe719583ce8184"},
    {file = "coverage-5.5-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:18ba8bbede96a2c3dde7b868de9dcbd55670690af0988713f0603f037848418a"},
    {file = "coverage-5.5-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:2910f4d36a6a9b4214bb7038d537f015346f413a975d57ca6b43bf23d6563b53"},
    {file = "coverage-5.5-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:f0b278ce10936db1a37e6954e15a3730bea96a0997c26d7fee88e6c396c2086d"},
    {file = "coverage-5.5-cp37-cp37m-manylinux2010_i686.whl", hash = "sha256:796c9c3c79747146ebd278dbe1e5c5c05dd6b10cc3bcb8389dfdf844f3ead638"},
    {file = "coverage-5.5-cp37-cp37m-manylinux2010_x86_64.whl", hash = "sha256:53194af30d5bad77fcba80e23a1441c71abfb3e01192034f8246e0d8f99528f3"},
    {file = "coverage-5.5-cp37-cp37m-win32.whl", hash = "sha256:184a47bbe0aa6400ed2d41d8e9ed868b8205046518c52464fde713ea06e3a74a"},
    {file = "coverage-5.5-cp37-cp37m-win_amd64.whl", hash = "sha256:2949cad1c5208b8298d5686d5a85b66aae46d73eec2c3e08c817dd3513e5848a"},
    {file = "coverage-5.5-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:217658ec7187497e3f3ebd901afdca1af062b42cfe3e0dafea4cced3983739f6"},
    {file = "coverage-5.5-cp38-cp38-manylinux1_i686.whl", hash = "sha256:1aa846f56c3d49205c952d8318e76ccc2ae23303351d9270ab220004c580cfe2"},
    {file = "coverage-5.5-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:24d4a7de75446be83244eabbff746d66b9240ae020ced65d060815fac3423759"},
    {file = "coverage-5.5-cp38-cp38-manylinux2010_i686.whl", hash = "sha256:d1f8bf7b90ba55699b3a5e44930e93ff0189aa27186e96071fac7dd0d06a1873"},
    {file = "coverage-5.5-cp38-cp38-manylinux2010_x86_64.whl", hash = "sha256:970284a88b99673ccb2e4e334cfb38a10aab7cd44f7457564d11898a74b62d0a"},
    {file = "coverage-5.5-cp38-cp38-win32.whl", hash = "sha256:01d84219b5cdbfc8122223b39a954820929497a1cb1422824bb86b07b74594b6"},
    {file = "coverage-5.5-cp38-cp38-win_amd64.whl", hash = "sha256:2e0d881ad471768bf6e6c2bf905d183543f10098e3b3640fc029509530091502"},
    {file = "coverage-5.5-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:d1f9ce122f83b2305592c11d64f181b87153fc2c2bbd3bb4a3dde8303cfb1a6b"},
    {file = "coverage-5.5-cp39-cp39-manylinux1_i686.whl", hash = "sha256:13c4ee887eca0f4c5a247b75398d4114c37882658300e153113dafb1d76de529"},
    {file = "coverage-5.5-cp39-cp39-manylinux1_x86_64.whl", hash = "sha256:52596d3d0e8bdf3af43db3e9ba8dcdaac724ba7b5ca3f6358529d56f7a166f8b"},
    {file = "coverage-5.5-cp39-cp39-manylinux2010_i686.whl", hash = "sha256:2cafbbb3af0733db200c9b5f798d18953b1a304d3f86a938367de1567f4b5bff"},
    {file = "coverage-5.5-cp39-cp39-manylinux2010_x86_64.whl", hash = "sha256:44d654437b8ddd9eee7d1eaee28b7219bec228520ff809af170488fd2fed3e2b"},
    {file = "coverage-5.5-cp39-cp39-win32.whl", hash = "sha256:d314ed732c25d29775e84a960c3c60808b682c08d86602ec2c3008e1202e3bb6"},
    {file = "coverage-5.5-cp39-cp39-win_amd64.whl", hash = "sha256:13034c4409db851670bc9acd836243aeee299949bd5673e11844befcb0149f03"},
    {file = "coverage-5.5-pp36-none-any.whl", hash = "sha256:f030f8873312a16414c0d8e1a1ddff2d3235655a2174e3648b4fa66b3f2f1079"},
    {file = "coverage-5.5-pp37-none-any.whl", hash = "sha256:2a3859cb82dcbda1cfd3e6f71c27081d18aa251d20a17d87d26d4cd216fb0af4"},
    {file = "coverage-5.5.tar.gz", hash = "sha256:ebe78fe9a0e874362175b02371bdfbee64d8edc42a044253ddf4ee7d3c15212c"},
]
docker = [
    {file = "docker-4.4.4-py2.py3-none-any.whl", hash = "sha256:f3607d5695be025fa405a12aca2e5df702a57db63790c73b927eb6a94aac60af"},
    {file = "docker-4.4.4.tar.gz", hash = "sha256:d3393c878f575d3a9ca3b94471a3c89a6d960b35feb92f033c0de36cc9d934db"},
]
elasticsearch = [
    {file = "elasticsearch-6.8.1-py2.py3-none-any.whl", hash = "sha256:540d633afcc0a32972e4b489c4559c9a96e294850853238f7a18b1cbd267c2ed"},
    {file = "elasticsearch-6.8.1.tar.gz", hash = "sha256:a8062a00b61bc7babeea028530667583a68ecb1a9f59ab0b22ff7feaf70d3564"},
]
flake8 = [
    {file = "flake8-3.9.2-py2.py3-none-any.whl", hash = "sha256:bf8fd333346d844f616e8d47905ef3a3384edae6b4e9beb0c5101e25e3110907"},
    {file = "flake8-3.9.2.tar.gz", hash = "sha256:07528381786f2a6237b061f6e96610a4167b226cb926e2aa2b6b1d78057c576b"},
]
flaky = [
    {file = "flaky-3.7.0-py2.py3-none-any.whl", hash = "sha256:d6eda73cab5ae7364504b7c44670f70abed9e75f77dd116352f662817592ec9c"},
    {file = "flaky-3.7.0.tar.gz", hash = "sha256:3ad100780721a1911f57a165809b7ea265a7863305acb66708220820caf8aa0d"},
]
gitdb = [
    {file = "gitdb-4.0.7-py3-none-any.whl", hash = "sha256:6c4cc71933456991da20917998acbe6cf4fb41eeaab7d6d67fbc05ecd4c865b0"},
    {file = "gitdb-4.0.7.tar.gz", hash = "sha256:96bf5c08b157a666fec41129e6d327235284cca4c81e92109260f353ba138005"},
]
gitpython = [
    {file = "GitPython-3.1.20-py3-none-any.whl", hash = "sha256:b1e1c269deab1b08ce65403cf14e10d2ef1f6c89e33ea7c5e5bb0222ea593b8a"},
    {file = "GitPython-3.1.20.tar.gz", hash = "sha256:df0e072a200703a65387b0cfdf0466e3bab729c0458cf6b7349d0e9877636519"},
]
idna = [
    {file = "idna-3.2-py3-none-any.whl", hash = "sha256:14475042e284991034cb48e06f6851428fb14c4dc953acd9be9a5e95c7b6dd7a"},
    {file = "idna-3.2.tar.gz", hash = "sha256:467fbad99067910785144ce333826c71fb0e63a425657295239737f7ecd125f3"},
]
importlib-metadata = [
    {file = "importlib_metadata-4.8.1-py3-none-any.whl", hash = "sha256:b618b6d2d5ffa2f16add5697cf57a46c76a56229b0ed1c438322e4e95645bd15"},
    {file = "importlib_metadata-4.8.1.tar.gz", hash = "sha256:f284b3e11256ad1e5d03ab86bb2ccd6f5339688ff17a4d797a0fe7df326f23b1"},
]
iniconfig = [
    {file = "iniconfig-1.1.1-py2.py3-none-any.whl", hash = "sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3"},
    {file = "iniconfig-1.1.1.tar.gz", hash = "sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"},
]
jmespath = [
    {file = "jmespath-0.10.0-py2.py3-none-any.whl", hash = "sha256:cdf6525904cc597730141d61b36f2e4b8ecc257c420fa2f4549bac2c2d0cb72f"},
    {file = "jmespath-0.10.0.tar.gz", hash = "sha256:b85d0567b8666149a93172712e68920734333c0ce7e89b78b3e987f71e5ed4f9"},
]
mccabe = [
    {file = "mccabe-0.6.1-py2.py3-none-any.whl", hash = "sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42"},
    {file = "mccabe-0.6.1.tar.gz", hash = "sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f"},
]
packaging = [
    {file = "packaging-21.0-py3-none-any.whl", hash = "sha256:c86254f9220d55e31cc94d69bade760f0847da8000def4dfe1c6b872fd14ff14"},
    {file = "packaging-21.0.tar.gz", hash = "sha256:7dc96269f53a4ccec5c0670940a4281106dd0bb343f47b7471f779df49c2fbe7"},
]
pluggy = [
    {file = "pluggy-1.0.0-py2.py3-none-any.whl", hash = "sha256:74134bbf457f031a36d68416e1509f34bd5ccc019f0bcc952c7b909d06b37bd3"},
    {file = "pluggy-1.0.0.tar.gz", hash = "sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159"},
]
py = [
    {file = "py-1.10.0-py2.py3-none-any.whl", hash = "sha256:3b80836aa6d1feeaa108e046da6423ab8f6ceda6468545ae8d02d9d58d18818a"},
    {file = "py-1.10.0.tar.gz", hash = "sha256:21b81bda15b66ef5e1a777a21c4dcd9c20ad3efd0b3f817e7a809035269e1bd3"},
]
pycodestyle = [
    {file = "pycodestyle-2.7.0-py2.py3-none-any.whl", hash = "sha256:514f76d918fcc0b55c6680472f0a37970994e07bbb80725808c17089be302068"},
    {file = "pycodestyle-2.7.0.tar.gz", hash = "sha256:c389c1d06bf7904078ca03399a4816f974a1d590090fecea0c63ec26ebaf1cef"},
]
pyflakes = [
    {file = "pyflakes-2.3.1-py2.py3-none-any.whl", hash = "sha256:7893783d01b8a89811dd72d7dfd4d84ff098e5eed95cfa8905b22bbffe52efc3"},
    {file = "pyflakes-2.3.1.tar.gz", hash = "sha256:f5bc8ecabc05bb9d291eb5203d6810b49040f6ff446a756326104746cc00c1db"},
]
pyparsing = [
    {file = "pyparsing-2.4.7-py2.py3-none-any.whl", hash = "sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b"},
    {file = "pyparsing-2.4.7.tar.gz", hash = "sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1"},
]
pytest = [
    {file = "pytest-6.2.5-py3-none-any.whl", hash = "sha256:7310f8d27bc79ced999e760ca304d69f6ba6c6649c0b60fb0e04a4a77cacc134"},
    {file = "pytest-6.2.5.tar.gz", hash = "sha256:131b36680866a76e6781d13f101efb86cf674ebb9762eb70d3082b6f29889e89"},
]
pytest-cov = [
    {file = "pytest-cov-2.12.1.tar.gz", hash = "sha256:261ceeb8c227b726249b376b8526b600f38667ee314f910353fa318caa01f4d7"},
    {file = "pytest_cov-2.12.1-py2.py3-none-any.whl", hash = "sha256:261bb9e47e65bd099c89c3edf92972865210c36813f80ede5277dceb77a4a62a"},
]
pytest-mock = [
    {file = "pytest-mock-3.6.1.tar.gz", hash = "sha256:40217a058c52a63f1042f0784f62009e976ba824c418cced42e88d5f40ab0e62"},
    {file = "pytest_mock-3.6.1-py3-none-any.whl", hash = "sha256:30c2f2cc9759e76eee674b81ea28c9f0b94f8f0445a1b87762cadf774f0df7e3"},
]
pytest-runner = [
    {file = "pytest-runner-5.3.1.tar.gz", hash = "sha256:0fce5b8dc68760f353979d99fdd6b3ad46330b6b1837e2077a89ebcf204aac91"},
    {file = "pytest_runner-5.3.1-py3-none-any.whl", hash = "sha256:85f93af814438ee322b4ea08fe3f5c2ad53b253577f3bd84b2ad451fee450ac5"},
]
python-dateutil = [
    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},
    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},
]
pytz = [
    {file = "pytz-2021.1-py2.py3-none-any.whl", hash = "sha256:eb10ce3e7736052ed3623d49975ce333bcd712c7bb19a58b9e2089d4057d0798"},
    {file = "pytz-2021.1.tar.gz", hash = "sha256:83a4a90894bf38e243cf052c8b58f381bfe9a7a483f6a9cab140bc7f702ac4da"},
]
pywin32 = [
    {file = "pywin32-227-cp27-cp27m-win32.whl", hash = "sha256:371fcc39416d736401f0274dd64c2302728c9e034808e37381b5e1b22be4a6b0"},
    {file = "pywin32-227-cp27-cp27m-win_amd64.whl", hash = "sha256:4cdad3e84191194ea6d0dd1b1b9bdda574ff563177d2adf2b4efec2a244fa116"},
    {file = "pywin32-227-cp35-cp35m-win32.whl", hash = "sha256:f4c5be1a293bae0076d93c88f37ee8da68136744588bc5e2be2f299a34ceb7aa"},
    {file = "pywin32-227-cp35-cp35m-win_amd64.whl", hash = "sha256:a929a4af626e530383a579431b70e512e736e9588106715215bf685a3ea508d4"},
    {file = "pywin32-227-cp36-cp36m-win32.whl", hash = "sha256:300a2db938e98c3e7e2093e4491439e62287d0d493fe07cce110db070b54c0be"},
    {file = "pywin32-227-cp36-cp36m-win_amd64.whl", hash = "sha256:9b31e009564fb95db160f154e2aa195ed66bcc4c058ed72850d047141b36f3a2"},
    {file = "pywin32-227-cp37-cp37m-win32.whl", hash = "sha256:47a3c7551376a865dd8d095a98deba954a98f326c6fe3c72d8726ca6e6b15507"},
    {file = "pywin32-227-cp37-cp37m-win_amd64.whl", hash = "sha256:31f88a89139cb2adc40f8f0e65ee56a8c585f629974f9e07622ba80199057511"},
    {file = "pywin32-227-cp38-cp38-win32.whl", hash = "sha256:7f18199fbf29ca99dff10e1f09451582ae9e372a892ff03a28528a24d55875bc"},
    {file = "pywin32-227-cp38-cp38-win_amd64.whl", hash = "sha256:7c1ae32c489dc012930787f06244426f8356e129184a02c25aef163917ce158e"},
    {file = "pywin32-227-cp39-cp39-win32.whl", hash = "sha256:c054c52ba46e7eb6b7d7dfae4dbd987a1bb48ee86debe3f245a2884ece46e295"},
    {file = "pywin32-227-cp39-cp39-win_amd64.whl", hash = "sha256:f27cec5e7f588c3d1051651830ecc00294f90728d19c3bf6916e6dba93ea357c"},
]
requests = [
    {file = "requests-2.26.0-py2.py3-none-any.whl", hash = "sha256:6c1246513ecd5ecd4528a0906f910e8f0f9c6b8ec72030dc9fd154dc1a6efd24"},
    {file = "requests-2.26.0.tar.gz", hash = "sha256:b8aa58f8cf793ffd8782d3d8cb19e66ef36f7aba4353eec859e74678b01b07a7"},
]
rfc3986 = [
    {file = "rfc3986-1.5.0-py2.py3-none-any.whl", hash = "sha256:a86d6e1f5b1dc238b218b012df0aa79409667bb209e58da56d0b94704e712a97"},
    {file = "rfc3986-1.5.0.tar.gz", hash = "sha256:270aaf10d87d0d4e095063c65bf3ddbc6ee3d0b226328ce21e036f946e421835"},
]
s3transfer = [
    {file = "s3transfer-0.5.0-py3-none-any.whl", hash = "sha256:9c1dc369814391a6bda20ebbf4b70a0f34630592c9aa520856bf384916af2803"},
    {file = "s3transfer-0.5.0.tar.gz", hash = "sha256:50ed823e1dc5868ad40c8dc92072f757aa0e653a192845c94a3b676f4a62da4c"},
]
six = [
    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},
    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},
]
smmap = [
    {file = "smmap-4.0.0-py2.py3-none-any.whl", hash = "sha256:a9a7479e4c572e2e775c404dcd3080c8dc49f39918c2cf74913d30c4c478e3c2"},
    {file = "smmap-4.0.0.tar.gz", hash = "sha256:7e65386bd122d45405ddf795637b7f7d2b532e7e401d46bbe3fb49b9986d5182"},
]
soupsieve = [
    {file = "soupsieve-2.2.1-py3-none-any.whl", hash = "sha256:c2c1c2d44f158cdbddab7824a9af8c4f83c76b1e23e049479aa432feb6c4c23b"},
    {file = "soupsieve-2.2.1.tar.gz", hash = "sha256:052774848f448cf19c7e959adf5566904d525f33a3f8b6ba6f6f8f26ec7de0cc"},
]
structlog = [
    {file = "structlog-19.2.0-py2.py3-none-any.whl", hash = "sha256:6640e6690fc31d5949bc614c1a630464d3aaa625284aeb7c6e486c3010d73e12"},
    {file = "structlog-19.2.0.tar.gz", hash = "sha256:4287058cf4ce1a59bc5dea290d6386d37f29a37529c9a51cdf7387e51710152b"},
]
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
typing-extensions = [
    {file = "typing_extensions-4.0.1-py3-none-any.whl", hash = "sha256:7f001e5ac290a0c0401508864c7ec868be4e701886d5b573a9528ed3973d9d3b"},
    {file = "typing_extensions-4.0.1.tar.gz", hash = "sha256:4ca091dea149f945ec56afb48dae714f21e8692ef22a395223bcd328961b6a0e"},
]
urllib3 = [
    {file = "urllib3-1.26.6-py2.py3-none-any.whl", hash = "sha256:39fb8672126159acb139a7718dd10806104dec1e2f0f6c88aab05d17df10c8d4"},
    {file = "urllib3-1.26.6.tar.gz", hash = "sha256:f57b4c16c62fa2760b7e3d97c35b255512fb6b59a259730f36ba32ce9f8e342f"},
]
waitress = [
    {file = "waitress-2.0.0-py3-none-any.whl", hash = "sha256:29af5a53e9fb4e158f525367678b50053808ca6c21ba585754c77d790008c746"},
    {file = "waitress-2.0.0.tar.gz", hash = "sha256:69e1f242c7f80273490d3403c3976f3ac3b26e289856936d1f620ed48f321897"},
]
webob = [
    {file = "WebOb-1.8.7-py2.py3-none-any.whl", hash = "sha256:73aae30359291c14fa3b956f8b5ca31960e420c28c1bec002547fb04928cf89b"},
    {file = "WebOb-1.8.7.tar.gz", hash = "sha256:b64ef5141be559cfade448f044fa45c2260351edcb6a8ef6b7e00c7dcef0c323"},
]
websocket-client = [
    {file = "websocket-client-1.2.1.tar.gz", hash = "sha256:8dfb715d8a992f5712fff8c843adae94e22b22a99b2c5e6b0ec4a1a981cc4e0d"},
    {file = "websocket_client-1.2.1-py2.py3-none-any.whl", hash = "sha256:0133d2f784858e59959ce82ddac316634229da55b498aac311f1620567a710ec"},
]
webtest = [
    {file = "WebTest-2.0.35-py2.py3-none-any.whl", hash = "sha256:44ddfe99b5eca4cf07675e7222c81dd624d22f9a26035d2b93dc8862dc1153c6"},
    {file = "WebTest-2.0.35.tar.gz", hash = "sha256:aac168b5b2b4f200af4e35867cf316712210e3d5db81c1cbdff38722647bb087"},
]
zipp = [
    {file = "zipp-3.5.0-py3-none-any.whl", hash = "sha256:957cfda87797e389580cb8b9e3870841ca991e2125350677b2ca83a0e99390a3"},
    {file = "zipp-3.5.0.tar.gz", hash = "sha256:f5812b1e007e48cff63449a5e9f4e7ebea716b4111f9c4f9a645f91d579bf0c4"},
]
